<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='MSFT (C##CS329E_JC58247)' inline='true' name='oracle.42124.744700034724' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JC58247' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jc58247'>
        <relation name='MSFT' table='[C##CS329E_JC58247].[MSFT]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DATE_MSFT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DATE_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>DATE_MSFT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPEN_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OPEN_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>OPEN_MSFT</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGH_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HIGH_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>HIGH_MSFT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOW_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LOW_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>LOW_MSFT</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLOSE_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CLOSE_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>CLOSE_MSFT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VOLUME_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VOLUME_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>VOLUME_MSFT</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJ_CLOSE_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ADJ_CLOSE_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>ADJ_CLOSE_MSFT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Close Msft' datatype='real' name='[CLOSE_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Diff Adj Close MSFT' datatype='real' name='[Calculation_8700503181518039]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='avg([ADJ_CLOSE_MSFT]) - LOOKUP(zn(avg([ADJ_CLOSE_MSFT])), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
      </column>
      <column caption='High Msft' datatype='real' name='[HIGH_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Low Msft' datatype='real' name='[LOW_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Max Diff Volume MSFT' datatype='real' name='[Max Diff Volume Apple (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([VOLUME_MSFT]) - LookUp(Max([VOLUME_MSFT]), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Msft' datatype='real' name='[OPEN_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Volume Msft' datatype='real' name='[VOLUME_MSFT]' role='measure' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\asif\Documents\My Tableau Repository\Datasources\MSFT (C##CS329E_JC58247).tde' schema='Extract' tablename='Extract' update-time='04/30/2015 10:53:38 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3854' timestamp-start='2015-04-30 22:53:38.521' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ADJ_CLOSE_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ADJ_CLOSE_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADJ_CLOSE_MSFT</remote-alias>
              <ordinal>0</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3396</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>12.9749</statistic>
                <statistic aggregation='Max' datatype='real'>49.159999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CLOSE_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CLOSE_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CLOSE_MSFT</remote-alias>
              <ordinal>1</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2084</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.15</statistic>
                <statistic aggregation='Max' datatype='real'>116.5625</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATE_MSFT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DATE_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE_MSFT</remote-alias>
              <ordinal>2</ordinal>
              <family>MSFT</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3854</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2000-01-03&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2015-04-29&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HIGH_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HIGH_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HIGH_MSFT</remote-alias>
              <ordinal>3</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2017</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.619999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>118.625</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOW_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LOW_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOW_MSFT</remote-alias>
              <ordinal>4</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2049</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>14.869999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>112.25</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OPEN_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OPEN_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OPEN_MSFT</remote-alias>
              <ordinal>6</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2075</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.199999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>117.375</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VOLUME_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[VOLUME_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VOLUME_MSFT</remote-alias>
              <ordinal>7</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3843</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>11083900.0</statistic>
                <statistic aggregation='Max' datatype='real'>591052200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='APPLE (C##CS329E_JDO589)' inline='true' name='oracle.42124.746195902779' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JDO589' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jdo589'>
        <relation name='APPLE' table='[C##CS329E_JDO589].[APPLE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DATE_APPLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DATE_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>DATE_APPLE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPEN_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OPEN_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>OPEN_APPLE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGH_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HIGH_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>HIGH_APPLE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOW_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LOW_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>LOW_APPLE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLOSE_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CLOSE_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>CLOSE_APPLE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VOLUME_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VOLUME_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>VOLUME_APPLE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJ_CLOSE_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ADJ_CLOSE_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>ADJ_CLOSE_APPLE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Close Apple' datatype='real' name='[CLOSE_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Max Diff Volume Apple' datatype='real' name='[Calculation_2120504211639308]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([VOLUME_APPLE]) - LookUp(Max([VOLUME_APPLE]), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total  Market Share by Volume' datatype='real' name='[Calculation_4200430184219883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([VOLUME_APPLE]) + sum([oracle.42124.744700034724].[VOLUME_MSFT]) + sum([oracle.42124.747247835650].[VOLUME_GOOGLE])' scope-isolation='false' />
      </column>
      <column caption='Google Percentage' datatype='real' name='[Calculation_4820430184707019]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([oracle.42124.747247835650].[VOLUME_GOOGLE])/[Calculation_4200430184219883]' scope-isolation='false' />
      </column>
      <column caption='Avg Diff Adj Close Apple' datatype='real' name='[Calculation_7280503180854780]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='avg([ADJ_CLOSE_APPLE]) - LOOKUP(zn(avg([ADJ_CLOSE_APPLE])), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='MSFT Percentage' datatype='real' name='[Calculation_9480430184603216]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([oracle.42124.744700034724].[VOLUME_MSFT])/[Calculation_4200430184219883]' scope-isolation='false' />
      </column>
      <column caption='Apple Percentage' datatype='real' name='[Calculation_9920430184514982]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([VOLUME_APPLE])/[Calculation_4200430184219883]' scope-isolation='false' />
      </column>
      <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
      </column>
      <column caption='High Apple' datatype='real' name='[HIGH_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Low Apple' datatype='real' name='[LOW_APPLE]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Apple' datatype='real' name='[OPEN_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Volume Apple' datatype='real' name='[VOLUME_APPLE]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[pcto:avg:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Sum' name='[sum:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Sum' name='[sum:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4820430184707019]' derivation='User' name='[usr:Calculation_4820430184707019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9480430184603216]' derivation='User' name='[usr:Calculation_9480430184603216:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9920430184514982]' derivation='User' name='[usr:Calculation_9920430184514982:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\asif\Documents\My Tableau Repository\Datasources\APPLE (C##CS329E_JDO589).tde' schema='Extract' tablename='Extract' update-time='04/30/2015 10:55:11 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3854' timestamp-start='2015-04-30 22:55:11.983' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ADJ_CLOSE_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ADJ_CLOSE_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADJ_CLOSE_APPLE</remote-alias>
              <ordinal>0</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3475</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.88400000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>133.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CLOSE_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CLOSE_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CLOSE_APPLE</remote-alias>
              <ordinal>1</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3460</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>13.119999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>702.10000000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATE_APPLE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DATE_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE_APPLE</remote-alias>
              <ordinal>2</ordinal>
              <family>APPLE</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3854</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2000-01-03&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2015-04-29&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HIGH_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HIGH_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HIGH_APPLE</remote-alias>
              <ordinal>3</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3362</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>13.19</statistic>
                <statistic aggregation='Max' datatype='real'>705.07000000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOW_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LOW_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOW_APPLE</remote-alias>
              <ordinal>4</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3376</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>12.720000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>699.57000000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OPEN_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OPEN_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OPEN_APPLE</remote-alias>
              <ordinal>6</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3449</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>12.99</statistic>
                <statistic aggregation='Max' datatype='real'>702.40999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VOLUME_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[VOLUME_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VOLUME_APPLE</remote-alias>
              <ordinal>7</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3830</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>9835000.0</statistic>
                <statistic aggregation='Max' datatype='real'>1855410200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[oracle.42124.746195902779].[sum:ADJ_CLOSE_APPLE:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[pcto:avg:ADJ_CLOSE_APPLE:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[usr:Calculation_9920430184514982:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[oracle.42124.746195902779].[sum:ADJ_CLOSE_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[oracle.42124.746195902779].[usr:Calculation_9480430184603216:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[oracle.42124.747247835650].[sum:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.744700034724].[pcto:avg:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.746195902779].[usr:Calculation_4820430184707019:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.747247835650].[sum:ADJ_CLOSE_GOOGLE:ok]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='oracle.42124.744700034724'>
        <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
        </column>
        <column caption='Volume Msft' datatype='real' name='[VOLUME_MSFT]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='oracle.42124.747247835650'>
        <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
        </column>
        <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
        <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Sum' name='[sum:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='GOOGLE (C##CS329E_AC52722)' inline='true' name='oracle.42124.747247835650' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_AC52722' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_ac52722'>
        <relation name='GOOGLE' table='[C##CS329E_AC52722].[GOOGLE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DATE_GOOGLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DATE_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>DATE_GOOGLE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPEN_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OPEN_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>OPEN_GOOGLE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGH_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HIGH_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>HIGH_GOOGLE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOW_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LOW_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>LOW_GOOGLE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLOSE_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CLOSE_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>CLOSE_GOOGLE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VOLUME_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VOLUME_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>VOLUME_GOOGLE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJ_CLOSE_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ADJ_CLOSE_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>ADJ_CLOSE_GOOGLE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Close Google' datatype='real' name='[CLOSE_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Diff Adj Close Google' datatype='real' name='[Calculation_2490503174524062]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='avg([ADJ_CLOSE_GOOGLE]) - LOOKUP(zn(avg([ADJ_CLOSE_GOOGLE])), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='AGVolDiff' datatype='real' name='[Calculation_2980430183535123]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([oracle.42124.746195902779].[VOLUME_APPLE]) - SUM([VOLUME_GOOGLE])' scope-isolation='false' />
      </column>
      <column caption='Max Diff Volume Google' datatype='real' name='[Calculation_3350503195819106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([VOLUME_GOOGLE]) - LookUp(Max([VOLUME_GOOGLE]), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
      </column>
      <column caption='High Google' datatype='real' name='[HIGH_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Low Google' datatype='real' name='[LOW_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Google' datatype='real' name='[OPEN_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CLOSE_GOOGLE]' derivation='Avg' name='[avg:CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[CLOSE_GOOGLE]' derivation='Avg' name='[avg:CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Max' name='[max:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VOLUME_GOOGLE]' derivation='Max' name='[max:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VOLUME_GOOGLE]' derivation='Avg' name='[pcdf:avg:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Sum' name='[sum:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CLOSE_GOOGLE]' derivation='Sum' name='[sum:CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VOLUME_GOOGLE]' derivation='Sum' name='[sum:VOLUME_GOOGLE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2980430183535123]' derivation='User' name='[usr:Calculation_2980430183535123:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\asif\Documents\My Tableau Repository\Datasources\GOOGLE (C##CS329E_AC52722).tde' schema='Extract' tablename='Extract' update-time='04/30/2015 10:56:33 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2692' timestamp-start='2015-04-30 22:56:33.270' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ADJ_CLOSE_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ADJ_CLOSE_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADJ_CLOSE_GOOGLE</remote-alias>
              <ordinal>0</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2631</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>50.055100000000003</statistic>
                <statistic aggregation='Max' datatype='real'>610.69569999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CLOSE_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CLOSE_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CLOSE_GOOGLE</remote-alias>
              <ordinal>1</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2617</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>100.01000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>1220.1699000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATE_GOOGLE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DATE_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE_GOOGLE</remote-alias>
              <ordinal>2</ordinal>
              <family>GOOGLE</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2692</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2004-08-19&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2015-04-29&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HIGH_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HIGH_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HIGH_GOOGLE</remote-alias>
              <ordinal>3</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2551</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>101.73999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>1228.8800000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOW_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LOW_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOW_GOOGLE</remote-alias>
              <ordinal>4</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2587</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>95.959999999999994</statistic>
                <statistic aggregation='Max' datatype='real'>1218.5999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OPEN_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OPEN_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OPEN_GOOGLE</remote-alias>
              <ordinal>6</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>99.189999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>1226.8000999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VOLUME_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[VOLUME_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VOLUME_GOOGLE</remote-alias>
              <ordinal>7</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2661</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>737700.0</statistic>
                <statistic aggregation='Max' datatype='real'>82151100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[oracle.42124.746195902779].[sum:ADJ_CLOSE_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[max:VOLUME_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[sum:VOLUME_APPLE:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[sum:VOLUME_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.747247835650]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.747247835650].[max:VOLUME_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.747247835650].[pcdf:avg:VOLUME_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42124.746195902779].[usr:Calculation_2120504211639308:qk:2]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42124.747247835650].[usr:Calculation_2980430183535123:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[oracle.42124.747247835650].[sum:CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:CLOSE_GOOGLE:ok]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[oracle.42124.747247835650].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.747247835650].[max:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.747247835650].[sum:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.747247835650].[sum:VOLUME_GOOGLE:ok]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='oracle.42124.744700034724'>
        <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='oracle.42124.746195902779'>
        <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
        </column>
        <column caption='Max Diff Volume Apple' datatype='real' name='[Calculation_2120504211639308]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='Max([VOLUME_APPLE]) - LookUp(Max([VOLUME_APPLE]), -1)' scope-isolation='false'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column caption='Volume Apple' datatype='real' name='[VOLUME_APPLE]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[VOLUME_APPLE]' derivation='Max' name='[max:VOLUME_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Sum' name='[sum:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[VOLUME_APPLE]' derivation='Sum' name='[sum:VOLUME_APPLE:ok]' pivot='key' type='ordinal' />
        <column-instance column='[VOLUME_APPLE]' derivation='Sum' name='[sum:VOLUME_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_2120504211639308]' derivation='User' name='[usr:Calculation_2120504211639308:qk:2]' pivot='key' type='quantitative'>
          <table-calc ordering-field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' ordering-type='Field' />
        </column-instance>
      </datasource-dependencies>
      <datasource-dependencies datasource='oracle.42124.747247835650'>
        <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
        </column>
        <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='oracle.42124.744700034724'>
      <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[DATE_MSFT]' derivation='None' name='[none:DATE_MSFT:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.42124.746195902779'>
      <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[DATE_APPLE]' derivation='None' name='[none:DATE_APPLE:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.42124.747247835650'>
      <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[DATE_GOOGLE]' derivation='None' name='[none:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='oracle.42124.746195902779' target='oracle.42124.744700034724'>
      <column-mapping>
        <map key='[oracle.42124.746195902779].[none:DATE_APPLE:ok]' value='[oracle.42124.744700034724].[none:DATE_MSFT:ok]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='oracle.42124.747247835650' target='oracle.42124.744700034724'>
      <column-mapping>
        <map key='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]' value='[oracle.42124.744700034724].[none:DATE_MSFT:ok]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='oracle.42124.746195902779' target='oracle.42124.747247835650'>
      <column-mapping>
        <map key='[oracle.42124.746195902779].[none:DATE_APPLE:ok]' value='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Adj Close Apple'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close Apple' datatype='real' name='[Calculation_7280503180854780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_APPLE]) - LOOKUP(zn(avg([ADJ_CLOSE_APPLE])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7280503180854780]' derivation='User' name='[usr:Calculation_7280503180854780:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[oracle.42124.747247835650].[qr:DATE_GOOGLE:ok]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2010' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:ok:2]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:ok:2]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]' />
              <text column='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:ok:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Adj Close Google'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close Google' datatype='real' name='[Calculation_2490503174524062]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_GOOGLE]) - LOOKUP(zn(avg([ADJ_CLOSE_GOOGLE])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2490503174524062]' derivation='User' name='[usr:Calculation_2490503174524062:ok:7]' pivot='key' type='ordinal'>
              <table-calc level-address='[oracle.42124.747247835650].[qr:DATE_GOOGLE:ok]' ordering-type='Field'>
                <order field='[oracle.42124.747247835650].[qr:DATE_GOOGLE:ok]' />
                <order field='[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]' />
              </table-calc>
            </column-instance>
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2010' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' field='[oracle.42124.747247835650].[qr:DATE_GOOGLE:ok]' value='80' />
            <format attr='text-format' field='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:ok:7]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:ok:7]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]' />
              <text column='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:ok:7]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Adj Close MSFT'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close MSFT' datatype='real' name='[Calculation_8700503181518039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_MSFT]) - LOOKUP(zn(avg([ADJ_CLOSE_MSFT])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8700503181518039]' derivation='User' name='[usr:Calculation_8700503181518039:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2010' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:qk]' />
              <text column='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close MSFT' datatype='real' name='[Calculation_8700503181518039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_MSFT]) - LOOKUP(zn(avg([ADJ_CLOSE_MSFT])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column caption='Max Diff Volume MSFT' datatype='real' name='[Max Diff Volume Apple (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([VOLUME_MSFT]) - LookUp(Max([VOLUME_MSFT]), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Volume Msft' datatype='real' name='[VOLUME_MSFT]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOLUME_MSFT]' derivation='Avg' name='[avg:VOLUME_MSFT:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VOLUME_MSFT]' derivation='Max' name='[max:VOLUME_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOLUME_MSFT]' derivation='Avg' name='[pcdf:avg:VOLUME_MSFT:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_8700503181518039]' derivation='User' name='[usr:Calculation_8700503181518039:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Max Diff Volume Apple (copy)]' derivation='User' name='[usr:Max Diff Volume Apple (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Month' name='[mn:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='None' name='[none:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-20#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-21#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-22#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-23#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-24#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' value='95' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' max='4.529999999999994' min='-0.26999999999999602' palette='tableau-red-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' />
              <text column='[oracle.42124.744700034724].[max:VOLUME_MSFT:qk]' />
              <text column='[oracle.42124.744700034724].[usr:Max Diff Volume Apple (copy):qk]' />
              <text column='[oracle.42124.744700034724].[pcdf:avg:VOLUME_MSFT:qk]' />
              <text column='[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.744700034724].[avg:VOLUME_MSFT:ok]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[qr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[mn:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[dy:DATE_GOOGLE:ok])))</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
          </datasources>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_APPLE]' derivation='Year' name='[yr:DATE_APPLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.746195902779].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:ok]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[oracle.42124.746195902779].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]&quot;</bucket>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[oracle.42124.746195902779].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.746195902779].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[Multiple Values]</rows>
        <cols>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Sum' name='[sum:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.746195902779].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[sum:ADJ_CLOSE_APPLE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:ok]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.746195902779].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.746195902779].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[Multiple Values]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.747247835650].[DATE_GOOGLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_APPLE]' derivation='Year' name='[yr:DATE_APPLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.746195902779].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:ok]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[oracle.42124.746195902779].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]&quot;</bucket>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]&quot;</bucket>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[oracle.42124.746195902779].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.746195902779].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[Multiple Values]</rows>
        <cols>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.747247835650].[DATE_GOOGLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Volume Apple' datatype='real' name='[VOLUME_APPLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[VOLUME_APPLE]' derivation='Sum' name='[sum:VOLUME_APPLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Month' name='[mn:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VOLUME_GOOGLE]' derivation='Sum' name='[sum:VOLUME_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[sum:VOLUME_APPLE:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.747247835650].[sum:VOLUME_GOOGLE:ok]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42124.747247835650].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.747247835650].[Multiple Values]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[mn:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='AGVolDiff' datatype='real' name='[Calculation_2980430183535123]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([oracle.42124.746195902779].[VOLUME_APPLE]) - SUM([VOLUME_GOOGLE])' scope-isolation='false' />
            </column>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Month-Trunc' name='[tmn:DATE_GOOGLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2980430183535123]' derivation='User' name='[usr:Calculation_2980430183535123:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.747247835650].[usr:Calculation_2980430183535123:qk]&quot;' user:op='manual' />
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42124.747247835650].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.747247835650].[Multiple Values]</rows>
        <cols>[oracle.42124.747247835650].[tmn:DATE_GOOGLE:qk]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Google Percentage' datatype='real' name='[Calculation_4820430184707019]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([oracle.42124.747247835650].[VOLUME_GOOGLE])/[Calculation_4200430184219883]' scope-isolation='false' />
            </column>
            <column caption='MSFT Percentage' datatype='real' name='[Calculation_9480430184603216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([oracle.42124.744700034724].[VOLUME_MSFT])/[Calculation_4200430184219883]' scope-isolation='false' />
            </column>
            <column caption='Apple Percentage' datatype='real' name='[Calculation_9920430184514982]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([VOLUME_APPLE])/[Calculation_4200430184219883]' scope-isolation='false' />
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_APPLE]' derivation='Month-Trunc' name='[tmn:DATE_APPLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4820430184707019]' derivation='User' name='[usr:Calculation_4820430184707019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9480430184603216]' derivation='User' name='[usr:Calculation_9480430184603216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9920430184514982]' derivation='User' name='[usr:Calculation_9920430184514982:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.746195902779].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[usr:Calculation_9920430184514982:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[usr:Calculation_4820430184707019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[usr:Calculation_9480430184603216:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[oracle.42124.746195902779].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]&quot;</bucket>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]&quot;</bucket>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[oracle.42124.746195902779].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.746195902779].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[Multiple Values]</rows>
        <cols>[oracle.42124.746195902779].[tmn:DATE_APPLE:qk]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.747247835650].[DATE_GOOGLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Google Percentage' datatype='real' name='[Calculation_4820430184707019]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([oracle.42124.747247835650].[VOLUME_GOOGLE])/[Calculation_4200430184219883]' scope-isolation='false' />
            </column>
            <column caption='Apple Percentage' datatype='real' name='[Calculation_9920430184514982]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([VOLUME_APPLE])/[Calculation_4200430184219883]' scope-isolation='false' />
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_4820430184707019]' derivation='User' name='[usr:Calculation_4820430184707019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9920430184514982]' derivation='User' name='[usr:Calculation_9920430184514982:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE_APPLE]' derivation='Year' name='[yr:DATE_APPLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.746195902779].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[usr:Calculation_9920430184514982:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[usr:Calculation_4820430184707019:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.746195902779].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <lod column='[oracle.42124.746195902779].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[Multiple Values]</rows>
        <cols>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.747247835650].[DATE_GOOGLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Volume vs. Close (Apple)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Max Diff Volume Apple' datatype='real' name='[Calculation_2120504211639308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([VOLUME_APPLE]) - LookUp(Max([VOLUME_APPLE]), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Avg Diff Adj Close Apple' datatype='real' name='[Calculation_7280503180854780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_APPLE]) - LOOKUP(zn(avg([ADJ_CLOSE_APPLE])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Volume Apple' datatype='real' name='[VOLUME_APPLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOLUME_APPLE]' derivation='Max' name='[max:VOLUME_APPLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2120504211639308]' derivation='User' name='[usr:Calculation_2120504211639308:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_7280503180854780]' derivation='User' name='[usr:Calculation_7280503180854780:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Month' name='[mn:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='None' name='[none:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VOLUME_GOOGLE]' derivation='Avg' name='[pcdf:avg:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-20#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-21#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-22#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-23#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-24#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' value='95' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='126.91' field='[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]' max='130.28' min='127.59999999999999' palette='tableau-red-green' type='interpolated' />
            <encoding attr='color' field='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:qk]' palette='tableau-red-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:qk]' />
              <text column='[oracle.42124.746195902779].[max:VOLUME_APPLE:qk]' />
              <text column='[oracle.42124.746195902779].[usr:Calculation_2120504211639308:qk:2]' />
              <text column='[oracle.42124.747247835650].[pcdf:avg:VOLUME_GOOGLE:qk]' />
              <text column='[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[max:VOLUME_APPLE:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[qr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[mn:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[dy:DATE_GOOGLE:ok])))</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Volume vs. Close (Google)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close Google' datatype='real' name='[Calculation_2490503174524062]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_GOOGLE]) - LOOKUP(zn(avg([ADJ_CLOSE_GOOGLE])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Max Diff Volume Google' datatype='real' name='[Calculation_3350503195819106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([VOLUME_GOOGLE]) - LookUp(Max([VOLUME_GOOGLE]), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VOLUME_GOOGLE]' derivation='Max' name='[max:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE_GOOGLE]' derivation='Month' name='[mn:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='None' name='[none:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VOLUME_GOOGLE]' derivation='Avg' name='[pcdf:avg:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2490503174524062]' derivation='User' name='[usr:Calculation_2490503174524062:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_3350503195819106]' derivation='User' name='[usr:Calculation_3350503195819106:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-20#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-21#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-22#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-23#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-24#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' value='95' />
            <format attr='text-format' field='[oracle.42124.747247835650].[usr:Calculation_3350503195819106:qk:2]' value='' />
            <format attr='text-format' field='[oracle.42124.747247835650].[pcdf:avg:VOLUME_GOOGLE:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]' palette='tableau-red-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:qk]' />
              <text column='[oracle.42124.747247835650].[max:VOLUME_GOOGLE:qk]' />
              <text column='[oracle.42124.747247835650].[usr:Calculation_3350503195819106:qk:2]' />
              <text column='[oracle.42124.747247835650].[pcdf:avg:VOLUME_GOOGLE:qk]' />
              <text column='[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.747247835650].[max:VOLUME_GOOGLE:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[qr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[mn:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[dy:DATE_GOOGLE:ok])))</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Volume vs. Close (MSFT)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close MSFT' datatype='real' name='[Calculation_8700503181518039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_MSFT]) - LOOKUP(zn(avg([ADJ_CLOSE_MSFT])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column caption='Max Diff Volume MSFT' datatype='real' name='[Max Diff Volume Apple (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([VOLUME_MSFT]) - LookUp(Max([VOLUME_MSFT]), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Volume Msft' datatype='real' name='[VOLUME_MSFT]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOLUME_MSFT]' derivation='Avg' name='[avg:VOLUME_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOLUME_MSFT]' derivation='Max' name='[max:VOLUME_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOLUME_MSFT]' derivation='Avg' name='[pcdf:avg:VOLUME_MSFT:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_8700503181518039]' derivation='User' name='[usr:Calculation_8700503181518039:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Max Diff Volume Apple (copy)]' derivation='User' name='[usr:Max Diff Volume Apple (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Month' name='[mn:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='None' name='[none:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-20#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-21#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-22#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-23#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-24#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' value='95' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' max='4.529999999999994' min='-0.26999999999999602' palette='tableau-red-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' />
              <text column='[oracle.42124.744700034724].[max:VOLUME_MSFT:qk]' />
              <text column='[oracle.42124.744700034724].[usr:Max Diff Volume Apple (copy):qk]' />
              <text column='[oracle.42124.744700034724].[pcdf:avg:VOLUME_MSFT:qk]' />
              <text column='[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.744700034724].[avg:VOLUME_MSFT:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[qr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[mn:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[dy:DATE_GOOGLE:ok])))</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='750' maxwidth='1000' minheight='750' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='9' param='vert' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='99467' id='7' param='vert' type='layout-flow' w='100000' x='0' y='0'>
              <zone h='99467' id='5' type='layout-basic' w='100000' x='0' y='0'>
                <zone h='30587' id='1' name='Adj Close Google' show-title='true' w='100000' x='0' y='0'>
                </zone>
                <zone h='30833' id='3' name='Adj Close Apple' show-title='true' w='100000' x='0' y='30587'>
                </zone>
                <zone h='38047' id='4' name='Adj Close MSFT' show-title='true' w='100000' x='0' y='61420'>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style>
      </style>
      <size maxheight='600' maxwidth='1200' minheight='600' minwidth='1200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86667' x='0' y='0'>
              <zone h='100000' id='1' name='Volume vs. Close (Google)' show-title='true' w='31777' x='0' y='0'>
              </zone>
              <zone h='100000' id='7' name='Volume vs. Close (Apple)' show-title='true' w='27858' x='31777' y='0'>
              </zone>
              <zone h='100000' id='9' name='Volume vs. Close (MSFT)' show-title='true' w='27032' x='59635' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86667' y='0'>
              <zone h='10334' id='6' name='Volume vs. Close (Google)' pane-specification-id='3' param='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:qk]' type='color' w='13333' x='86667' y='0'>
              </zone>
              <zone h='9667' id='8' name='Volume vs. Close (Apple)' pane-specification-id='3' param='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:qk]' type='color' w='13333' x='86667' y='10334'>
              </zone>
              <zone h='9667' id='10' name='Volume vs. Close (MSFT)' pane-specification-id='3' param='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' type='color' w='13333' x='86667' y='20001'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style>
      </style>
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' is-centered='0' is-scaled='1' param='C:\Users\asif\Pictures\Screenshots\Screenshot (142).png' type='bitmap' w='100000' x='0' y='0'>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[oracle.42124.746195902779].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42124.746195902779].[:Measure Names]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[:Measure Names]</field>
          <field>[oracle.42124.746195902779].[none:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[:Measure Names]</field>
          <field>[oracle.42124.746195902779].[none:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[oracle.42124.746195902779].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42124.746195902779].[:Measure Names]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[:Measure Names]</field>
          <field>[oracle.42124.746195902779].[none:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42124.746195902779].[:Measure Names]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42124.746195902779].[:Measure Names]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[:Measure Names]</field>
          <field>[oracle.42124.746195902779].[none:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[oracle.42124.746195902779].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42124.746195902779].[:Measure Names]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[:Measure Names]</field>
          <field>[oracle.42124.746195902779].[none:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[oracle.42124.747247835650].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42124.747247835650].[:Measure Names]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[oracle.42124.747247835650].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Adj Close Google'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[pcto:sum:VOLUME_APPLE:qk]</field>
          <field>[oracle.42124.746195902779].[qr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[usr:Calculation_9920430184514982:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Adj Close Apple'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[pcto:sum:VOLUME_APPLE:qk]</field>
          <field>[oracle.42124.746195902779].[qr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[usr:Calculation_9920430184514982:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Adj Close MSFT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[pcto:sum:VOLUME_APPLE:qk]</field>
          <field>[oracle.42124.746195902779].[qr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[usr:Calculation_9920430184514982:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
      <zones>
        <zone name='Adj Close Google'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Adj Close Apple'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Adj Close MSFT'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Volume vs. Close (Google)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Volume vs. Close (Apple)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Volume vs. Close (MSFT)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 2'>
      <zones>
        <zone name='Volume vs. Close (Google)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Volume vs. Close (Apple)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Volume vs. Close (MSFT)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Volume vs. Close (Google)' pane-specification-id='3' param='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:qk]' type='color' />
        <zone name='Volume vs. Close (Apple)' pane-specification-id='3' param='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:qk]' type='color' />
        <zone name='Volume vs. Close (MSFT)' pane-specification-id='3' param='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 3'>
      <active id='1' />
      <zones>
        <zone is-centered='0' is-scaled='1' name='' type='bitmap' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAXrUlEQVR4nO3dW2wcV57f8W919b2b3ezmnZQoSpQoUSIlW7Jk2VLWnpmdncGO14sZYBe7
      SRDMy2IRBHnJe4BBgDwMkiCLIMgGyEP2aZKZbGawWduy5btHkm1JlmyLpHiRSJEU732/X6rq
      5IESZY1EWuwhKVL1/wCNqi4WDw+7z+/UpatOa0ophRA25XjaFRDiaZIACFuTAAhbkwAIW5MA
      iM1TyfK/fvEL3n37TW5OxcgkE2Tyed5/+zy5Qo5EOosCqtlFfvPGBxiWSTqRIFsokc9mSKay
      fHnlAol0jngyw2acrdHkLJDYNOU0v37vKj/54XOce+cm9Z4kN2PgzCbwuHLcjVf5y7/615i5
      HPN3BqjvbOPz818SanBRyGcJubxYkQCFmSmmlrL85Kf/in0Nng2tonNDSxPid2Ris3x2wSDc
      2Mjw4C08dS34Q150t48X9nUQ8uqUErcpVUrcvjWGaVRB82BZJqZSOAFvXZQXug4RDbg2vH6y
      BRCbR1nk83ksHAT8PkrFIg6nC01ZaA6oGuD3e1FmFYfDSam0wIULU5x9pZ+Ln3zK6Zdfxu1y
      AIpyxSLg96FpG1tFCYCwtQ3bBSoWi5TLZbSNjqgQm2jDAmCaJsFgEKdTDivEziGnQYWtSQCE
      rUkAhK1JAIStSQCErUkAhK1JAIStSQCErT3Rp1ZKKdLzE5T97cRuf4VV10ZH0GR8sczzRw+i
      y6e/Yod6oi2AMqt8eeldpuN5mrsOcmfkBl98OUI1NcViprLZdRRi0zxRABxON/u69oDuJj07
      wZHjp9A0DQ0N0zRJp9Pk8/nNrqsQG+6JL9wJt+/HoVcYuxXHXXZz9Mg+xhfLtNb7cDr86Lq+
      mfUUYlNs2OXQuVwOr9crF8OJHUXOAglbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MA
      CFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhb
      e8KhES0mvr4EHcdJj35ONbiLZneeiaUyL798Co8uQyOKnenJAmCaJOYnIdBJLB+gmhgk4/QT
      CjhYSBdpCehUq1W8Xu9m11eIDfWEQyO6aG5sAIcLq5pFc3hxaBaFsoHHqaOUQr5uWOxETzyM
      W9P+44RcUXa7ujC8jURcZe4mKjTVeXBoYBjGZtZTiE0hQyMKW5OzQMLWJADC1iQAwtYkAMLW
      JADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQA
      wtYkAMLWJADC1iQAwtYkAMLW1jmGSYX3/vFNSr5mOusMJuMVvvv97xFwSY7EzrS+AFgGhWKZ
      qqPIoqFoq9NYTBWIuk1KpZIMjSh2nPUFoFrC8oSwKiXcIZ2ZpMH+oJewz4mu65tURSE2zzpH
      hlMU83mU7sbtUBSrFkG/D02TkeHEzrTO1qrhCwRXntW5N7g2QmwxOXoVtiYBELYmARC2JgEQ
      tiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC29tiL4WbHrnNlPE5LqIVTL/VLSsQz
      67Ftu5BJMzc9SyKf3er6CLGlHhsATzCM32ng9Pq3uj5CbKnHBiAQaqD/2DEq+fRW10eILfVI
      AKqlPLFkBtNU9PQcQHsatRJiizwSALNaIh5bYmZmhumZOaynUSshtsgjAfDWNVDvcYFLI5NK
      PY06CbFlHjkNmk/OESvD0aMv0t7SIKdAxTPtkfbtr2/l+aMHmbxxiX945xLrGDJCiB3nkS1A
      LjHDpc8HaWjv4XjP/t85CFZMjw2S1sLsqrMYXyxzrO8AuiaHymJnWt+4QNUUv/6Hj2nbt5fc
      wixBv4Ou516hLeyRcYHEjrS+XXyzguUKMj95C0vT0DQNwzRJp9Pk8/lNqqIQm2d93bW3kaN7
      Q6S03XSGFOOLZVrrfbgcfhkaUexI6xwacXWyCyR2IjnLKWxNAiBsTQIgbE0CIGxNAiBsTQIg
      bE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxN
      AiBsTQIgbE0CIGxt3WOYVAsJrg3P0xY0mFgq89LpF3DrMjSi2JnWFwBlcfPGdaaXdLLOCiG/
      g4V0kZagE8MwNqmKQmye9e0CVXPMx3Mszc5R1SzKholL1zEMA9M0N6mKQmye9Y8MZ1VZWMoQ
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAXPklEQVR4nO3daXAc533n8W9fc2EGg/uiTFEkxfuwSNuSKUVSLMmKFCfedTZWtHF8JF4n
      LpfjpBKXk0oqkROnsru1m62tzW5trV8kLzaWI8vyemMr1hmLomRJlERKPMELAEGAIDDAAHNg
      ru5+8qIHAEECQ3A4AAj0/8Oamp6engcPZ55f99MPGs9oSimFED6lL3cFhFhOEgDhaxIA4WsS
      AOFrEgCxeIppnvzOd3jhJz/mxPkEqeQYqWyWl37yPJnJDGMTaRRQSg/zgx+9jO06TIyNkZ7M
      k02nSI6nOXzwAGMTGUaTKRZjtEaTUSCxaAoTPPPi23zqFz7IPz93goZgkhMJMNNjBK0MF0ZL
      PP4fvoqTyTDUe5SGtZ28+fxh6pstJrNp6q0QbmMdkwPnOT+S5lOf/wrrm4M1raJZ09KEuEIq
      McgbB2ziLS2cPHaGYKydSH0IIxDmQ+vXUB8yyI+dJV/Mc/bMaRy7BFoQ13VwlMIEQrEmPrRu
      C011Vs3rJ0cAsXiUSzabxUWnLhImn8uhmxaactF0KNkQiYRQTgldN8nnL3HgwHnuuW8nr+3/
      GXft20fA0gFFoehSFwmjabWtogRA+FrNukC5XI5CoYBW64gKsYhqFgDHcYhGo5imnFaIlUOG
      QYWvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCE
      r0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEry1oEh+lFK7jgK6jKQWahga4
      SqHrRs2nqxNiqSwoAKXJUZ75/y/wobv3cfLgWzh1rbRakwxOlHjo0U8QDxmLXU8hFsXCpnHT
      dNZ0tHHq+BHMhvU42T4mibGuNcBYOgcFh3w+TygUWuTqClFbC+sCOS5F28aMNKNN9GFFO2kK
      TtI3WmBLfYRoUMcw5CggVp6azQ6dyWQIhUIyN6hYUWQUSPiaBED4mgRA+JoEQPiaBED4mgRA
      +JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPia
      BED4mgRA+JoEQPiaBED42oIn8SmmhuhJ6uip8xQjnbQFcpwbybP3g9sxdZkcVKxMC5wZrsTh
      d14j4XSiOQrHfpdB3SIWMRhObaQzHqRG82sJsaQW1AXKJQcYHM0xPDyMiwI0NE1DoVBKkU6n
      yeVyi1xVIWpv4VMjllL0DpVw0zNdoLMjefbs2oKhaTI1oliRZG5Q4WsyCiR8TQIgfE0CIHxN
      AiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIg
      fE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfG3OSXwGTx/i4LlR2uvb+chHd2JnR9m/fz96/DaK
      l85QinbQHsjSnyzx8UceIRY0lrreQtTEnEeAydQEF/sHGcumAQjUNbN980by6UGovw03N0wq
      p3Nrc4hEKsfExATZbHZJKy5ELcwZgGA0TsS0MUMRAAqZBMfPDoBZhztxDoItxEIOPSOTNMfC
      xONx6urqlrTiQtTCnFMjjl08T9/QCAPDGR59+L4FnSjI1IhiJbqqbZfyWRLJFI6j2LTpdmTm
      f7GaXRUAp5RnNDHCwMAA/QMXcZejVkIskasCEIo10xC0wNJIjY8vR52EWDJXddizyYskCrBr
      1510tTfLLwrEqnZV+440dHDHrs30HXmdHz73OvLFR+KGFDJQunm/PeiqI0BmbIDX3zxGc9cm
      9mzaKCfBonrJPnj6C2CG4ON/CV13gHZz9SnkG2LE4hjrgScfhzV3QLQD3vl72PIo3PcNiH8A
      tJtj13pzxVGsDmNn4TufhvX3wif+OzzwZ/DFF8EpwbcfgAN/A7nkctcSkCOAqLXEafjuv4eN
      D8KDT4AZnHnOdaD/DXjxm5CfgJ/7A9j2ydnbLDEJgKidxCl4stz4H/4W6PO0BbsAR78PP/1r
      aFgLD/4FrNmzLN0iCYC4cUrB8An47uOw7d/Ag3++sJPdYgZe/1s4/A9w11dgz29AYGmvKZMA
      iBsz1fiffAx2fRru+yMwrOt7/dAR+KevgVOEj/2pdwS5njJugARAVG+q8T71G7DrMbj369U3
      3EIG3v8uvPo30LkLfv5PoH37og+bSgBE9QYPe41/9+Nw/x/Xpg+fGfFGid57Enb8O7j/G1DX
      euPlzkMCIK6fUjDwDjz1Wfjwb8E9v1/bPbVS3gn1y9+C/jfh7q/Bns9CMFa7n1EmARDXRykY
      eBue+hzc+dvw0a/MP9pzo1wbzv6LN1o0OQadu8u3XdCyCSLNYEWqP/Ik+yQA4jooBf1vwdOf
      h7u+7I3c6Evw9+DFSbjwFlx8z+t2Db0PmWGo74Sm9dCxayYc0TYvkJWOSErBmRfh2T+UAIjr
      0HsAvv9bcPfveQFYLkpBfhwuHYdLR+Di+95IVOK0N4zavm0mFK2boWkDWCHvtaUc7P8v8M7f
      wYPflACIBVBqpvHf+3Wv338zXdSmFLgl70gx1gND73lHi6Ej3pGilIOW26Ftm3f0cIrwyf8F
      bVslAOIalIKeV+CZL3kjPXs+uzTdnlpwHe+ao/RFGDrqBcOKwL7fhXADICfB4lrOvuw1/o/9
      Kez53E1zFWetSGsVc1MKTj8PP/wKPPQX3lj/Kmv8sMAAKNchMTJMJN6CKqRxzQgh3SaVc2hu
      jK/G98XflILTL3iN/+Pf8i5xWKUf8oICUMwmGRga5vw772IUXdxQmLhRJFNU3HX/wzTVyYFk
      1VDK6/b88MvwC/8RdvzKzXXCW2ML+p8Fo800hRS3b7gVI9aFKqUoOhat9UFSubxMjbia9OyH
      //dleOgvYeevrurGDwsMQDbRxxtHeikSIaYuUd+6gTVtdYzkDNrjdTI14mqgFPS+Vj7h/ROv
      z+8DMgokvMZ/4aB3bc+9fwh7v7ByhjpvkLRWv1MKBg/B9z4P+74KH/rNVd/tuZwEwO+G3vcu
      af7Il7wL23xGAuBXU3/J9Y+f8bo8+7663DVaFv451onZEqfgH3/dO9m9+/d80+e/khwB/Gj0
      LHz312HLJ+D+P/JVn/9K/v2f+9XYOXjy12DTw968PT5u/CAB8JeJC968PRt+3putzafdnstJ
      APwiNejN2Lb2Tu+3vMs4G9vNRM4B/CA95DX+tm3wi/918f6GdwWSI8Bqlxn2Gn/LZvjEf5PG
      fwUJwGo2Oepd3tC4ztvzW+HlrtFNR3YHq1VuHL73BQg1wC//jyWfc3OlkACsRrlx+N7nvG9m
      +dW/kz1/BdIFWm0Kafj+F705Oj/1f6TxX4McAVaTfMq7nt8penv+8swHYn4SgNUiNw5P/6Y3
      P85j/xdC8eWu0YogXaDVIJvwLmwzLHjsH6TxXwcJwEqXHfEubAs3eX3+UP1y12hFkS7QSpa+
      BE99BmJd8Mn/CcHoctdoxZEjwEo1ccH7KtKGtfAr35bGXyUJwEqU7IPvPObNk//LfwtGYLlr
      tGJJAFaasR7vC+k+cCc88p9lnP8GSQBWksQZr9tz6z3wyH+Sxl8DC5sbVLn0Hn0DOu9g4sxb
      lOrW0BbI0jNSYN9HP0zAWJ3zRt5ULh3zhjq3/BI89E3f/yVXrSwsAI5DYuAcWvgWEukQpcQx
      Jsww9RGdSxM52uoMbNte7Lr6k1Jw6ag31Lnr03DfN6Tx19CC3kndtGhvbQHdQpWyaHoAXXPJ
      2w6WYeC6Lq7rLnZd/UcpuHgYnnwc7vjM9X8JtbimBf8eoGXDHcQCzdxiZCiFW2myCvSPFmmr
      D6Jr4DjOYtbTny4c9GZs+/AXy19FKl3NWpO5QW9GSkHfa95Vnft+F+76Hen2LBJprTcbpaD3
      Va/x3/t1383VudQkADeTqS+n+MGX4IE/9/r90vgXlQTgZtL9LPzT1+DjfwW7f225a+MLEoCb
      ReIU/PgPZr6WSCwJOQm+WZRykOyF1i0y2rOEJADC1+QMS/iaBED4mgRA+JoEQPiaBED4mgRA
      +JoEQPiaBED4mgRA+JoEQPjakl63cHLsJP3pfuLBOPWBeuKBOPXBeiJmBE2ufxHLYEkDcHDo
      IM/1PkfOzpG38969k0cpRTwYpyHYMH2bfhyaeRwLxIiYESJmhKAZJKAHCBgBLN2SAC0CpRQF
      p0DeyVOwZ99nS1kypQyZYoZMKUO6mJ71eOp+MDNIyAzRGGwkbIUJm2EiZoSwWV62vM8zakWv
      ej5oBL3P17AI6Jfd6xaWYWHpFnqVfy+RKzr0jmaX/mI4V7kUnSJFt+jdO0Vydo6JwgTjhfHp
      2/Tj/MzjnJNDw2vo0/eahoZG0AzOemNnvdHW3OtCRghTNzE0A13T0TV9etnQjVmPdU1Hm/qn
      zf7ZAAqFUuUbCle52MrGcR1s15697No4ao718yxfue3048ufu2zZUQ6ucivfqPy8rWxKTglX
      udP/v+l7BUEjSDQQJWpFiQaixAIxb7n8OGp56yzdwtTN6R3epD1JpjhJtjRJtjhJpjRJupgl
      VchMP5563nZddAwMAhhaEEOzMDRz+t7ULAJGiLARIWRGCJXvw0b4suUIlh7A1APoyiJXCHBi
      MMeRgSSJXHLlXA2qlMJ2bbJ2lsnSJAWnMCtIeTvPpD1JruS9yTk7N/2G50q52Y/tmcdTDWrq
      g59adpSD6848hpkGr2s6mqaho0+HYarRT92UUhi6MR0wUzcxNXN63UKW53rd1Lrp5+ZYd3lo
      r7wZmuHVXdPRmQm6ztXbBowAYdPbUYTM8q28bJa/bVIphavAVYqi7TI0kWdgPMfAeI7B8i2d
      tynaLgXHpWS72K7CdhWO62I73nLJ8dY7jsJ2y9s4CkcpTF3DMnQMXUPXwNA0dF1D18qPp5bn
      eR5N4agSjipRF4SulgIN8STxaG7lBGA5Te3drwzJ5TdDN2YaqmZOh2Q1UEpRsF1G0gVGMgWG
      U+VGnswxOJ7n4kSeixM5kpNF4mGL1liItliQroYQnfEw8bBF0NQJTN2M2ctBUydoGVetn7rX
      9cV7H1dfa10EU92eavuby8k7cnp752J5D1x03OnH+aJLtmiTLdhkCt59tuCQypcYzRan9+Lj
      kyWClk7IMogFTboawnQ1hPnIbU10NYS5pTFMe32IsGVgmd4eW18BO4CqA2CXCuSLLnWR8IL/
      gGnmYKPJHz1VMNWtcFyF43pdgqnlyZJDOmeTypdI58v3uRKpvE06b5Mur59q1NmCQ8kpv14p
      3PK94ypc1+s+1AUN6oImdQGTaNCcftweC7FnbQNdDV7jrg9ZxEIm4YCxIhr3QlQZAJc3XnmJ
      0UmH+x56hIbwwor59qvneKV7BHOeQ92V66zy4dGaWldebxoaxhUfwFyfh4YGc66fY12Fz1O7
      8hXa7HLccoNyyv1W253px071aUuX92+ntnFm+sO241KwXTIFryFnC14jniw4TBYdskWbXNHB
      0DViIZNYuTFOLdeX7zviITa2mV6DDppEAwbhgEnI0glbBuGAQcjybmHLwDK0VdNVq0bVAcjb
      FmsaAyQzebSiQz6fx3Xd6ZGQUql01au2NWlot4ZQulk+8VHlw3CRkg25oiLlgu1SbhhgKyg5
      3rb2dANzmXXi4g1MzEtduaTmeu7aKp0tTZ+g6d4JmKFpGLqGUV5naJSXmd4uUD6xM3UNHbB0
      xZqIRrjeIBYKEguZ1Ics6sMWTbEIsZBJwNBxXQfXKU9FeUXGNU3DsmamT3QcpzxrnwvY3l0B
      igWwdX3WOZtt2/NOcakv4rYNDQ2MjY0BYJomuu51NedrR1Msa2b4u9ptqwyAQXtTgJ5Ega3x
      CHUBHcMwrnkS3Nrayj07qvuJXuObGXGYeWLW3fWXW/UrL/uh2tR5gte4p5b9vGe9Xq2trcvy
      c2UUSPjayhvWEKKGJADC1yQAwtckAMLXJADC12o6ZJNOp6fHcOfiOA6GYVQsYzVuM/W7kUrv
      Ta3KWUh9a1XOSnz/YPbwdE0DEIvFKg6DLuTNmJiYIB6PV9xmpZVTLBaxbZtIJHJD5RQKBVzX
      JRye/+tRHcdB1ytfiJfP5wEIhUJV1wWW7j2e+iXatQJQTTk1C8Dlv8GbS8/xt/nZuydoXLOZ
      h+7/COY8n8/lv8W8imszNjaOC2i6SVNTw5yXNVyrHLcwwY9+9Dzrdu+jTsuxYcPGebetWE4x
      zdvvnSQ5eJ41O+9mx/qOObfTdb1iIxi92EfvYIKRS8Ns3XsXt7Y3zrmdYRgVG3Z/fz9WYZTn
      D/byyX/7i8RDc9fdMAwq/fqn/+wJCqUibx+9wKO/9DD1wbmbScXPCjh44GXW7foorfWVv8+4
      UjnJi+d47/QAo0ND3PnAo9zSXFdVOelEP8+9uB8VauSBhx6kqS4A1PAcIBQKVQzAsROn2LZz
      NyROM5Sdv5yKe0m3wNN//7/58UsHOHTkFJW+lq9SOZnBburW7uLYT5/hR68erlBK5XLGzx+j
      71Ka2/fcRW/3sXm3M02TYDA47/NuMcvrB17jXP+likExTZNAIDDv88ff2c8PXnqHOzY00ncp
      Pe92lmVVLKf75AnefPcoHVGbwdHcvNtd64g2kUry2k+e4anvPc3AeLGqcs6dPsnZ7mNEm5s5
      depcxZ9XqZwTx47S2NRIYyzA4aOnp9cbTzzxxBMVS62RkFHihedfov62vezZ1EVVl3jrFi2N
      UfK2ydYdW2isq+6b0gOxJpKDPUSa2tl0+yY6Wufe415LMNpIIZ1kfCzJus1baaqff+9UsT6h
      CEG9RCLjsmfPToJmdfulxvoYqeQYpUg7OzevI2BUV059xOLIoXdxG27nrl0bMKu9Hl+5mIEw
      7besZ21XS1XlxGMRRpMphkdS3HPv3dTNczS6ZjnREG+9fYSGtjXs3rmdSLmcJRsFev/oSe75
      2EOYo91crHAEqKg0yhuH+ulsi3Pgp/uZ/9KnyjIDxzmXVMSiIc6d662yFEgNHKcv6RKtC3D0
      yPGqyzn51gHSVhO7NzTw5ntnqy7n0Lvv0rVhE9r4eXoupaov59Ah9v7cgzS7Q5wbqfbDgtMn
      j2OGY4ycOUzfWL66Mk4cJda2lu0b2zl6/EzVdek+fpQN2z9IVJvk2Kme6fVLFoCtm27j5eee
      JRNdR0d1O0qwmtjQrvHssy/SuXEL1X5ldHTNVsITp3j+X95k87btVZYC9Wu2Yo518/wrB9my
      bVvV5WzYuZPed/fzs+ND7Nj0garL2bl9C6+/9M+cn4xwW3us6nJ2bNvCay8+y0CxgXUtlbs5
      FcvZuolXX3iWS6qZtU3zn3BXsnHLDs4depU3jg2yfev6quuyadsOTr39Cge7h9m2ad30+iUL
      QPfps+y4Yy8qcZZEdTsDsFOcuZBl796d9J8+hV1lMZPDZ0lqzezevp5T3d1VlgKZ4bOkzFZ2
      b72N7u7T137BPM53nyS+dgsb20N091ysupyTJ7u5fcce6t0xLoxWv+c+2d3Npp17qSsOM5Cc
      /xzg2uWcYvOuvYRyF7k4UaiqjL6zJ2n8wGY2dkboPtNfdV16Tp+kZd1W1rUGOdUzOL1+yQLQ
      0dbC+d5etGgL0WrHnowILXGd3r4BGtvaqq58MN5BsDjGhYsJ2trbqiwFQvEOrPwoF4ZGaWuv
      /nLelq4uJob6SaRt2porDytW0tXZzoW+HvJahIa6+U+6r6WzwyunaEaJR6o9zkJnRxsX+noo
      WXHqF/hHU1dqbe9k/NIFRlIl2qs8VwNo6+hkbKifsYwz6z1esgCMJ8exSzZdjRqXMlUW4uRJ
      pgrYyiDs2sw/rlBZKZtk0gYt1IiTG6uyFChmk+QdhRFpws6OVl1OKpnEdW3irW2MJ6qvT3J8
      HKdUpKOtnsR49UeA8fEkdrFIZ2uUxES1h+upz7xEV0uYkYnqPq3URBLHcahvvYVUYqDquqTG
      k7iOTbyti4nRmaPsvwLIacXBMVw7oAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Adj Close Google' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Adj Close Apple' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Adj Close MSFT' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAdoklEQVR4nO3deXCc9Z3n8ffTd6u71brvw7ZsyTa2fJ/Y2GAMIUAgAZYKmRw1STYTNpPJ
      1NbObmqT3c3U1FQqO5lNMsnOsUBIyEW4wWAwYBuf2NZlC8nWZd1nS63uVt/PtX84ECYyWLLU
      3Zb69/rLVnU//ZX6+TzP8zue3yPpuq4jCGnKkOoCBCGVRACEtCYCIKQ1EQAhrZlSXYAgzIee
      xiPUDepkmGHPnp2Ep0KowQH6wzlUl2RgdbixWYy01p9kyB9n+ZIK8vPyRACExUGOhajZuB9T
      /zG6LvfTcPRlCqpWEgn2cexgB0XVG3jknm10j8TZsWEp46EAbx5tFwEQFo/O1iYskRhuXytG
      VxZGqwNDOMiS6puoWlGBZLCRmyHTMejFkQW6qiCJcQBhMVDlOOFIFLPVjtmgE40rmC1mNE1D
      U2RMVjsWkxFNVQiHI1htdjQlLgIgpLc59wKFQqH5qEP4E4qiEI1GU13GohQOh3n/uD/nACiK
      MueChOl0XUfTtFSXsSh9eJ9d1I3giYEOGjtGWHvTCtpaLlKzYQv9LXU4iquIeHoY9Kvcedst
      WExiOGRWdIX608fBXUGeKcRg0MDKMjcXLvayrraa+rrzrFi/lcoCd6orvaZF/c2b7dlYgr28
      cegIks3A0YMHuBzQaDzTxMplxYRjBkxGKdVlLkA6JeXlnD11jJMN7Uz1t3Lk2HEseohjp9+l
      pbWNzn5PqouckUUdgPBEN40jJtZWZqGpKpLBgK6pIEmcP3OGddu3Y5BEAK7HyTcOUrt9F7qu
      oelgkCRUVSUwPs6KNWsZHxtLdYkzsqgvgaKakTVVhRRUr0W+3MEdn7qfwYsNODdvAd8oBXmW
      VJe4MMlRcpeuwqCq7N+1gYEpiZqyTC5c7OeBh3bRWH+BTZvXp7rKGZlzN6jf78ftvvGv9RYa
      WZaRZZmMjIxUl7LoBAIBXC4XkiTN/QygaRp+v38+6hI+RFVVVFVFluVUl7LoRCIRNE2bnwAY
      DAZxBkgAcQZIHEmSPjgDLOpGsCBciwiAkNZEAJJM1+Mcee0l2rr7Ofjyc/z+1SOomo5v5DIH
      j7yLBgwNdDMVFSPsySACkGTq1ATFN23gzYOvs3vXVtRIDIMEB549gD18iQOnWvjxT3/EsD+W
      6lLTgghAkhld+fg6mtl39/30NNVTe8teJEli89a1dHb0oliz2VZbleoy08aiHgi70ei6TnT8
      Mqeae1hjLyHXVUZtgY2hvh4wWbAUrGF/bTGd6hrcdvHVJIMYCEui4x0eXmoa4vsP1GIyfPwU
      DNENmjgfHggTl0BJElNUXmoaomtohKefeoKzLf2AzqW6o/zuxdfpuVTPz596Hs9wN7/8xVNc
      HhWDi8kgApAEMUXlp4c7uW9dCU9/bRc1lTnUN3WAGuPwsTPEYzFOvVnHktxJzg2byDMHuNS7
      MGZTLnQiAAkmqxo/eL2NW6rz2V2dj1EJ4l6+nfB4CwCqlIkl0s94JEI4rKKEpli/bQcdXd0p
      rjw9iDZAAgVjCj881MYDG8u4qSQTSZLQdZUjr75A+cY9WCIydoOX+r4ou9YU8U5dD3fuWcOr
      r73D1r37yLIZRBsgAT7cBhABSBB/ROYnb3fwwMYyVpdkzvr9ohGcOKIRnGD+iMwPD7Xx8Jby
      69r53+fpvcjvnn0Jj2eYp3/9Sy72ekBXOPHGS7xTdxHQuVBXR0ydv9rTjQjAPPOG4nz/4CW+
      snsZ1YWuOW0ranCwoSDG8y++SseITE6WC5QY5Wu3c/7sUYba6nnq168QEffOXzcRgHk07Ivw
      f95s55u3Lac82z7n7WVadDpDeTxw/7187p71PPfya2CyMXn5Artvv4t3jp4g4htlzBeeh+rT
      04IabtTVOK8891suj4X50pc+z7/+6P/yje/8DZG+Szz30iuYyjZjH78ARWv57L23kcy7ffsn
      wzx+vJtHb62i2D33nR+gvaWJ0QmZIU8Jly60sf+22+m+1ELjpW7sATOf/dq3WLepnooc0U64
      XgsqAJLRwj0PPMxzv32G5jPH8alGVE0nr6KGqopmbtpVyo+/9w7V7ig6JCUAuq4z6IvwL0e7
      +Nbt1eS7rPO27S233ceePzSCa1evvPLD0gKWrqr94DWrN2+at89LRwsqAJoa499+8HdkrduP
      yRTFN9RFe3s31RXZTITtFGUXU1nhYrSvDxmYv13xo3V5Qvz8ZDffvmsVTtt8/zl1Ws8d5lRT
      L7ff/xBLcuDpX/6W7KVrCI220eu3cEtNNk0DCn/2yL1YxAIXs7agukF1XcM/6UXBSHZWFnI8
      hsloAIMRVVGxWsyEQwE0ow2nPfG7f8ugn+cbB/nW7Stw2czzuu33u0GNBgMtJw+hlm2jWmvk
      B6/1c9vNN7OhOMqZARuD752iJDPMstu/zsr8+a1BVyK8dfAAIWsxn9q3jUOHjrLvrv34ei/y
      +rE6Nu7cTee5ExTX7mLr6iXz+tmJtGC7QSXJgN1mw2KxYTBI6Goc76SPmKxhMuhEZRVVUTFI
      if21dF3n/ICPF5uGErLzv+/QoTdpbDxHTyyLVRWZ6FYnRcVFXDh3ljPnOti+bRV2VCamwGE3
      zn8BkpGNu/bh7WvlYsMpDp1sRAFsWcXcumkp710eobIsm7r6ZhbqCssL6hIILc5vfv4EAdXM
      l7/+dSaHenn290+z9cG/xHf8SUJL9mP3vEd30MQ3v/pIwspo6vfxavMw//mOGuzmBOx4f3DH
      Hbcz3NXKpM/HxMQEjoIt7F1xlqz9ezEqU2SbJO6+7046xxXKnPMfeskg0dFQx8133E/z4Wfw
      jfUxOhkmV/ZzYVDmzi0rmQouIXzuWVQW2s50xcKqWVWIZORTzAhTEYWyZdWUVW+iQm7n9a5J
      ijNCfGb7etoONiEDiTgun+wc50TnON++ayVGQ6JPoBJVa7dQtfaPP8nbsvsP/7oyxpBVtAQt
      MkH7SICaousfdLsaJRpmeHyU3nAzD37hUWp3duAMjdE9PopnqJ/Lo8vwdzVyz0OPkLjDQGLN
      KAAR3zAnzp5HchaijneQs2Q9W2qrE13bdCYr5ZYw/ZEi4qODhIolsnKWU7BsCQ/dHeRy2Mzh
      t07jdBfO+7WdruscafPQMuTnr2+vTsLOPzOapvO9V1qRJPjslgrWV2RRmePAYTUizXHZR5Pd
      zacf/vwH/6+uvvKd55UtoXb9tis/rKmc02ek2swawbrO1HgfF/oDqBMDTOlO9u3dRiwSIRaL
      UVBQkIRSU0fXdd5sHaXLE+Qru5dhNiZ+55/NXKA+bxijQSIYVWjq99HnDRGTNdaUutmyNIcC
      lxWTQbq+QOg6XfUHeXe4mM/du4H33jnIqxeG+PIXH+Tlx57g7kf/ipYX/wn7ps+zY0XOdfym
      yTfrleGC4708//pptu/aQSDiYnTYh8FiwW2xpHRVOF3XOXBhmMlwnM9tq8R4jbus5vIZI/4o
      X7ulCkMCPmOuPjwQVlN05dJIVjWaB/0cOD/ERDCOxWRgXbmbjRXZ5Dpn00Om4bIY6ZsIAnCs
      c4D9FQaaLvvRozHimooUl5kKLsxVLGYUgIycMh564D6MJjOG0mLWSUaSvaysput4g3EGfBHa
      R6YYDUTxRWRahvzIik6fN4yug81sxGk14bAayXdZKXbbyc4w47abybSZZ7UDa7rO8/UDRGSV
      L+9euqBWkjYbDWysyGZjRTaqphOKK5zv9/GrM30EIjJFmTZqy93UFLpw281XPTsMdTTQNKTw
      yepcIMK410u51cjp3hCf2F2A12EBzBQUZDOY9N9wftxw4wC6riOrOlNRmYHJCO1jU/RNhAnH
      VXIcFkqz7NQUuSjMtOG2m1HUK8tz2y3GKzedKxqhmEIwquAJxhj2RfGF4/giMlNRGU2HDIuR
      XIeFXKeVwswrIXFYTdjMBmwmI5IEgYjMgeZhTAYDD24qS8jZ5eMkcjq0rGqM+KNcGPDTPjpF
      MKawvMDJxopsyrLtZFj+pP2gRJgI6ZgMKg4z9HuCVJYVEZycxJ6Vgxb2oZicOOZ9IDAx5v1+
      ANk/zJHGXu69Zz/h0V4itkJKc+w0v3sEClazZmk+LW2drFlZ8+/eq+s6OhCVVS4OT9Ey5Kd3
      IozJIOGymSjLyWBFgZMluY7pX8p10nWdcFzFG4ozEYwxOhVj2B8lFFOIyCoxWSOmqLzRMsL9
      60v5r3etTMmRP5n3A8iqRudYkIa+SQa8EWKKyuoSNz3jIf7D5nIqchfXXKN5XR0aIKCYWWUf
      5vh7vVx68V+ouv+blDr9nGzwoEovYN9Zy0+ePcrDj3yF6kIXg74Il4YDTITiRGQVq8nIqiIX
      u1fk8bltjoQebSVJwmE14bCaKP+ISWQxWSU7w8J960sW1GXP9TIbDawqzmRV8ZVuVEXTeKfN
      ww8bBuj1hnh073JWFrnm5QB0o5mXAOQ6zbQqZZRMNjPgCyH1DEJNMQZTBrIySlXtDsYfe4Gv
      /7qBL+6oZPOSHG5dWUCuw0qGxZjyhuXpt1/m7LkG9v/5f+Piiz+j+LYv8Ne3FvHUY49zJGsV
      d6538/PDbXz30S+ktM5kMRkM3LaygDe+dQsxRePlpkFeOT/EvetKqClyzfmgMNBez4G3TlBQ
      VsnY0AiGzBL+42fv5q2XnuF8r599m5dz6OgpPvPot1mendjLqnnZevO504yOx1h7z0P8zbJq
      RqQc+sdkqkvCUHgHIPGV+++krGYLq4ozk9KNOBvb9t5FyOvDd7mOXr+CMxwDUz779u3kt0e6
      cOStxcqZVJeZVJIkkWm/MpT45d3LGJuKcuD8MC81DfLAxjKqCpzXHYTSFRu4PTjFIKXs3VDN
      sRYvSEZu3Xcr5/75V1TUbmfpew14JoMsz86az19rmnkJwK67H2bX+//JXUnuH/5ZXvHwB6/5
      5L798/FRCfHaUz+lxZ/BHdUubHqYkdERhvqivHOqBVUGh2t+R1gXogKXjT/ftRRvKM4zdf08
      Wz/Ag5vKWHEdd7111R3isZcbuP+T2/nbf3iDez77CAO9vbQ312GQoPnMCbwxnexQ4p+TfMP1
      AqWCHI+hajpmixUJDR0JdNBUGcloxmi48gA4kyl5vRw38k3xuq7jC8v8vq4fX1jm/g2lVBc6
      Z9xGUBUZWVExGo2oqorBaLwysq5rqLqEySghyyoWi4VENDvEqhBXoUSDjEyGKSnKxyBJKLEQ
      Ec1MeGIYzeqmOM+FPxDC7U7O2eBGDsD7dF1nIhjnhcZBfJE4n1pXyorCmV8ahXx+rFluTOh4
      x0bQrZlYtDBhzUJhrpupgB+7M/Oay0jO1oKdDp1ILz37G15+9ll6JyPouspbv/wHnjnVyBOP
      PYPHG+Diudf4x5/9LtVl3lAkSSLPZeWrtyzjizuWcKzDw/cPXqJ7PMS1jquxwAjf/U/fYRQg
      Osnjj/+SJ558lief/FcOPP0rhv1T/O23/wejkcQ+Iy3tAyBH/Bw9/Ca9QZnNpVmM+iKMtZ3g
      nZYh+vs8bNyylFcPvsmqrVvJkhbGQE8qFGTa+OruZXx9bxWvNQ/zv99oo2N06qqvrTvxBqMx
      B+vXLAMgHo9hdZgxWSWWlJYx7unjmZ8/xoQGAwleIzXtv1GTxcGGTVtwEOPYpVE+bQ4hZW/k
      G19WOOFx4ulrpqSsEjBRWJR7ze2lu+wMC4/urWIiGOf5xgFebBrkvvWlLP9Qr9HK2q2Y7Rnk
      FhVijvro9cZwZdhQM7Iwmf3kVm7hwQc/wbI3DlKa50xovaINcINaCG2Aa9F1nbGpGC81DRKI
      KNy/oZRl+Y6UDy6KRvACsBgC8GFjgSjPNw7SMx5CkiT++92rcFpTcwEiGsFC0hVk2vjaLcu4
      eXkeJzs9dI0FU10SINoAQhJJksTdtcVsXZrDPx/toiTLPq/rKF0PcQYQksogSRRm2vjK7qX8
      5O0OonJqV/YVARBSoiw7gz/bXskPD7Uhq6lb3VcEQEiZ6kIne2sKePxEN6qWmpWFRACElJEk
      iZ1VuRRl2niuYeCao8eJIAIgpJQkSXxqXQlTUYUjbZ6kh0AEQEg5g0HiSzuXUN/jpXkwuauM
      iAAINwSjQeKbt6/ghcZBuseTN0YgAiDcMKwmI3952wqePNXL+FQsKZ8pAiDcUHIcFr6yayk/
      OZycMYIZBUBTZbo72pgMRvGODjIyEUh0XUIaK8u288i2iqSMEcwoAPGwH9Vo4sSJo7x75jzn
      zpxesOvBCzc+SZKoKXRxS3U+TyR4jGBGAbA6s9FDk6xZtxqD2Y1RjROJx/H7/cRiyblWE9KL
      JEnsXpFPvsvKC42DCesenVEAgp4+WnvGCAahwB0ls3gZGRYLbrcbqzW1k5mExe3TG0rxheMc
      vjSWkO2L+wFuUIvtfoC5kFWNH7/dwR2rC6ktm/s6QeJ+AGFBMRsNfOPW5TzfMEjvRGhety0C
      ICwINrORv9q3gv93/DLeUHzetisCICwY2Q4Lf7Gnih+/1U44Pj8P5BABEBaUsuwMHtpczj+9
      3YkyD2MEIgDCgnNTSSY7q3Ln5T4CEQBhwZEkid3V+eS5rLzYOLeHM4kACAvWZ+ZhjEAEQFiw
      JEni8zuW0Ng3SUPf5HW1CUQAhAXNYjLwF3uq+LsDrfzdqxdnPWVCrAskLHh2i5FPrCm+rmfL
      TTsDRHyj/O7JJ3n97bd569g5UrdghSDMjEGS+MI6JyOH/o3LHS38/fe+wzOvNYAe5Rc//SE/
      eux3TAxc4r/8/T9Of++f/iA65WdiMkAsHsfpmv3jbwQhFQwWB8VZLmLRKLrBhoYMcT9xazV6
      dAB7dhlZtukzl6cFILu8mjtu2YzZaCAuKyy+B2MKi5HF7sBilIjHo5gyHITC4/QNTSFNtSJL
      eWQ4nFztCumqs0Hb645zYTxCsTOHHbs2f2xLWcwGTQwxG3T23t+VdV3/0PPKdHQkDJL0wc8/
      djaof6STk41t6KEgiknM9RcWDkmSCE9NEldBQmewt5tAJM74UB/DHh9Bn4fLfUP/rl07LQDO
      3DJuvW03Be4MVE00gYWFQ4tP8bMffJe2sRhqaIz6syf59fNvc7G9jWd+8wsamls59eovaB39
      Y1tgWjdoyDvIm2+8jWTNYM2W5aININzwNCXOO2++gnfcw8BkmMERD+tKK9i0rpr+E73UVK4m
      pGayuXYpk54Ay3L/eGUzrQ0gx0KMeSbRAYvdSX5u1seGQLQBEkO0AWZO13WikRCSwUTLuwew
      lW3BYoxz/K3D2HPLGG5roHztDuL9TYQdJdx2+ydYVpz90Y9Iiof99I95yXLlkZPrEgFIARGA
      xLnmLZFt9aeob75M3bk6MRAmLGpXDcCSlWuwyH7KqleKyULConbV/XtscJCYptLX0ysWwBIW
      tasGwGwxYXfnkOtyil4gYVG7agBURcWgygSicXEGEBa1qwbAaDYi6RImsxEJ0HWNy82n6fPG
      qTt5mHMX2pNcpiAkxrQAhCaHaO8dR1fiWCxWdEBTFMb6O5kIRejvHwZdR1VV4vE4qprax1wK
      wvXov3SOtoHJ6QGQNBXJmcfmtSsIRSJIgNFsoSg/D3SdzTtvZbizlegfQpCKB5sJwly1N5+m
      vXvwKmcAn5/c4lIKy5dijEx90AbIX76BpXlOkH3ctO1mHCYTdrsdk0ncVCYsPOUFeRiwTB8J
      1jWZ5oZ6gnGVsuVrKC9wi5HgFBAjwYkTCARQA0P4DUXTJ8NpKlStvIloLI4kaciKhsUkhsOE
      xSWrZDmqZ3x6ACJTk7R1djI24cdklsgvW8v6laWpqFEQEibiHeD0mbrpbQCj2UB/ewdmp4tA
      yMhasfMLi1BPwMzK8qLpAbC78ti5ayshzygZWTliJFhYlJzxfn798vHpl0BKLMSgJwAxhdIl
      pSIAwqJUXrON//U/t08/A8ixMDFZQ4nHMVrMqahNEJJm2hnAnpnPth15qFs24Z0MoIM4CwiL
      1lX7NyVJwmQ2kylmgwqL3FUDoOsamqYRi8ZATHUQFrGrzmO4dPYorSNBIoFJNuy6m5uW5iW7
      LkFIiqsGQJJMZLrduDLtxH1BQARAWJyuegmUmZtDeNJLXtEKatdVJLsmQUiaq98Rpmq4c/Nx
      2swYDGIekLB4Tdu7NVVGNViQfeOMBYLilkhhUZv+gIzAGBfbeggHFSqrKkQ3qLCoTWsEO7JL
      +cQni/GODTMx6kF3ihAIi9dH9AIZyC0sJbcw2eUIQnKJFq6Q1kQAhLQmAiCkNREAIa2JAAhp
      TQRASGsiAEJam1EANCXOOy88TtNAgNdf+D0vHDya4LIEITlmtK6hZDBRXJRPSA8j2cqwyuOE
      4nGUSIRYbPrj5wVhoZjRGUAyGLBabBgkBwZ5iLjVjcNiwe12Y7WKh2kLC9dVnxI5G2Jt0MQQ
      a4MmzjWfEikI6UIEQEhrIgBCWhMBENKaCICQ1kQAhLQmAiCkNREAIa2JAAhpTQRASGsiAEJa
      EwEQ0poIgJDWRACEtCYCIKQ1EQAhrYkACGlNBEBIayIAQloTARDSmgiAkNZEAIS0JgIgpDUR
      ACGtzToAPW0XaGjpTEQtgpB0swyAwrn6C+RmZyWmGkFIstkFQIebb9lL48njTMXj+P1+sTiu
      sKDNaHXoP9IZG+ylYFk1TosFyWLB7/cnpjJBSILZBUAys37bzQkqRRCST/QCCWlNBEBIayIA
      QloTARDSmgiAkNZEAIS0JgIgpDURACGtiQAIaU0EQEhrIgBCWhMBENKaCICQ1kQAhLQmAiCk
      NREAIa2JAAhpTQRASGsiAEJaEwEQ0poIgJDWZh2A8aFeBj2+RNQiCEk3ywBEOFvfSsO5M2iJ
      qUcQkmrWSyMajC6MmiwCICwKs1wZzklRjkLYUjXbNwrCDUnSdV2/njcqikI8HicUCuFwOOa7
      rrSnKAqKomCz2VJdyqITCoXIyMhAkqTrP5AbDAZMJhNGoxGTaWabkWUZs9k8o9cGg0GcTuc1
      X6coCkajEUmSrvnaD//iqahV13U0TcNoNM5ou8CM/raJqPVG2O5svi9FUWa8HxqNxg8+f04B
      sFgsGI1GLBbLjN4z09cBM97ubLYZi8Uwm80YDNdu+iSi1tl4/0uf779Bqr+v2Ww3Fot9cJCd
      r23ClYOK2WxGkqTrvwR6n9/vx+12f8wrdPram+kaGCerpIrVZU5ONV5m7+4tXDvXHy3kHeZs
      00WwZbJmSQ7nWzopr95ATWX+HLYKne+do29siqKlq5F8PQwFYPfu7VjmMGKixaY4dbqOmG5k
      846dSJPdtE1a2bK64iPfI8sysiyTkZHx0a8JeTl5pgndZGPb9q20njzOkh27yLPN7Kh9dTrd
      rU30jHrJK18BkwMM+RT27NuFbQYHjo+iRAOcebeeqGZkXW01zY0XKK5ex8rKwjnUChODXZxv
      68OeVcC2Das5f/owlRv2kWP/6PcEAgFcLheSJCVhIEyJ0Hx5nD179zLR0cx4IIRn3MOcUge0
      1DeyZsceCnUvXmM+G1cvZdI3x/EJeZL2gTh799xMd0sTFVUrCIwNElPnVm33+QZyV25mU00u
      55vauNjczKgvNLdagffO1rN8682sLDDT3NaDZ2SckDq3/jktHqJ1wM+ePXsZuHiBqnWbcUpx
      4nPs9utvO09W1QY2LXPRPBClosjF0MjE3DYK1J9vY+eePcRHe+juvkRn7yBRZebvT3wADGZM
      apSLzY34NBMF+fmYjXM59l/hyrTR33WJ891eDOExznd6WLWicm4bNdqRZD/n6+tQzBl4xifJ
      zzLjC8pz2mxmTiZjvV2ca7iI3ariDcuMDA/PuSs5J9tBf2c7Da09ZOUVkJ8z984IyWjGIIdp
      aa4njIWu5nM4SqtwzPE7c2Rm4hnq5Ux9Kw6TjGTPJeSfewBcVonOixfo88uEfH6iQT/jkzN/
      ZkUSLoFAjgTo6BnGkZFBSVkJk95J8vPz5nQJpKsy3V1dYLJgsZjxeifJK6mkJO/ja7mWyNQE
      PYMTZDiduK0wHoaqypI51Qo6w71dhFUjrqw8CjLNjIdU8twfvcPO5BIIXaPvcgeKZMGdV4RZ
      DmHOysFunNtxLR7y0dk/hsNmQYlHCEUlatbUYDVc/19B1zWG+7qJqBIudzZTE6Pkli4ly2Gd
      U62qHKGrqweTJYPSynLkKS9mZx7Wj2ndfvgS6P8DYX2SlrfmUpMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nOy9d5Bd13ng+bv35Zzf65zRAWjkQBAkmCWSIhWoLFvSyGutrLFndtbl8szs
      erdWtZ4qz46rtmq2ar1rj8c7tmhJthJJScwBJAiAyGgAnXPu1y/ndMP+0STEJtBAd6PRDXS/
      3z/9uvuee8737v3O+c453/cdQVVVlTJltijiRjegTJmNpKwAZbY0v1UAVWFicurarydPniAy
      N0k8UwRVZXKkj3eOf8Dg1QuEM8Wb3rSQTfLeO28xMhVc8ho5E+Fc9/DtS1CmzG2g+cEPfvAD
      gPBkL8+/+A57drby6q9e5FzPCGI2irWyCZsmw89ePsmB3duZG+2npDPxzmuvUkTDyWNvYrY7
      OPbm68SLIjUVXn79i59R29TC9FyY8d4LdA1MQi7CG++cRCMqvP7a60hyifFwjum+8wxORWhq
      qEUQhA3+OspsNa6NAO+/9z7kQhx7912yWg9euxGf20m2IIGqgioglUrIqkL/pfPUtHXQfbkH
      k0HD2ePvcKFnmMGhUQBUVUFntDDSc5ahuSyF+AzHTnXRVufkzLmLDI/NoNPpKSVmeP29cwwM
      DiHL5bl4mfVHWFgFUujvH6KlsYbhiTkSoWkKgoG5gcvsf/obNHrNjA31MDabpL2lClVrYbiv
      m5aOTkb6rtLU3slo/1V8dW201FWQzyQ4c/Y8Nc3bkZOzpBQz9X4z3YNT1Lq1/Jfnf8GBo0+y
      s62JfGyGksHNvs7Wjf4uymxBhKWWQRVZIhpP4fG4WEvDRJFLzAVDeP0V6LXlOXiZjWVJBShT
      ZitQ7oLLbGm0G92AMutPen6MMwNz1FRWIKgq8WiImupKHL5K4rNjzIYTeANVmC0Wiuk4DqeD
      SCJHLh3BZHFSV1PNZlmwKyvAFkQq5vHXNBIaucjoXJaKWi8zp47TsOMIciaKz22nJxjDmrqK
      gErPeIrtLZXMDF1B8Dbhr6jApNNstBhrQnkOsAUp5VL0DU/Q2FjPzFQQm8uGnMvgDNRgFCWG
      RybweL1IqkgxHUNQi1weCXNkbyvRZH5T7dmsSgEURUEUt870oSzv5mVVUuZyubVux11NWd7N
      y909B1AVurvOISlawhmZSqcWCT2R4Cz7H3wEu/Hubv5qGO6/QjInk4gl8Pg8SAok58ZpO/QY
      FU7TRjdvzenvvkCuoBJNFQm4zZRkmXg0xb4jR7AbdXe8/rv8DRIopBNMzEUpGfxIJTCIAoog
      YjPc5U1fJaJcYHpqErmkYTSUos4tEJqYxN2W3ZQKIGdTjE8GkXQuEpkUFjVDJpFmJrILe7Xr
      jtd/l79FCoLRwX1HthOKZ/FaNQgmG0pR2TTLcJ8kL2vYuecQqViM+7xOciWo8FVR57dvdNPu
      CJLGxIHDDxCJpvA5jZTQkYjFaKpwrEv9q5oEp9NpTKbN1xstRS6XK8u7SVnVCCBJEsXizWMC
      7hXCs+NkVBPx+Rl27NpNODhPRWWAuWAQg1AiVtRR5XWg0dz+uncyMsdEKEUmMkNFUydGjUTA
      H+DS2ZP4qxuYmo9xaM+ONZDq9iiVSmsi773AqhRAp9Ntmh7CZLbwP/2f/8zOaisFNPR3j/Ld
      7zzHr157hW8+91m6Tp+l4ZlPr4m8BauT0OUeWmp8GPQir7/5Hv/9d77ByOAgiYKEJFgxGE2I
      G2zeKYqyaZ7vrVikAMVMgvNXuqmrb6e60r1RbVoXSrLCW73z9F7tZltTJVU2FUEUMRm0JDIZ
      du3oIBGLYXes3URseuAymL1kFSOtNZW0N9eTiMeo8vuRDXYy0RgKZQet9WTRHGB6uJsXXn6L
      o09+kZ0tlczMBnE5LBQULYVMEn9FBaIgkMlksFgsG9nuVRPNFHm7b56ipPB4ux+/3XDLXc17
      Wd7VsJnkHRvqYS6epxgP46usJZotcGT/Dt596y3qWloWjwB6o5Gqmhrm52aQGryM9F2haHBh
      0WYohBOEdz1Ci9+4UbKsGlVVGQ5lODMaxWbU8lRnBdaPLaMef/mfGAqWSBWLfPe/+xZ/9X/8
      OYcOH+XKTJw//PZX1rQtw5ePMRy1MdZ3lu99//ucPfk2/X39zGV1fO+731n23oYq5XjlpV8i
      GT3MzkcRIkN0PvENkqOnURzNJMa6+fQ3vo1nHdbS72YqKqsZGX2f3ss9HPQ3MTrUxf4OH/HJ
      Kd7omV082trsLgKBAA6TCVmR0RmMGDSgN7lQRRG3w4ROd+98obKicno0wvMfjBNM5vnKgRo+
      u7tq0csPoLNXcf+ebWhFgXQqzYH9e7jQdYVUPEVpjdsUqK5CVLQEvF6ymQyx0Dy1NXWIGg3y
      ChbkVBVSWZn6ulr0Yh6D3UcsNEVj6x5mpyeoqKyg7OQF/Ve7MDoraOloRygm8FXWkitqMbid
      fO2Jg4tNoFwixNmuHirr2tjWULHkTe/2ITJblDg+GCaUKrC/3kVbhQ3xJmZOsVhEp9WQTGcx
      GQ3ks1lMFgvZbB6Hw7am8qqKRElSURUZQRRJpxLojBYUScJuty97f0NVJMLhCGaLFVkVEJUS
      OoMBRVGRFDBoRbR6/U3lXoq7/fkuF1VVCSYL/MUvT/FwezX7KgzU1tcRnZ/D7glQymcXm0A6
      o4lwcI6G9j0b1eZVky5IpPIlTgxFUFSVh7b5CCzDvgfQ6/UAOOy2xb87bm+0U1WVgqRQkBTy
      JZlsUSaeLZIuSORLMsf6Q9S6zTzVaabSYVnR5p4gavH5/Zw/8RYlg4Pp2RjPPfsEx159gfpd
      jzHad4HHH3/sttq/UkYHrlLQWIjNztLUVE04Ax2NAc6cu8SefXuZmZ6jqbH+jrZBVVVi2RJn
      RqNE0gUCDiOtyS7siRwvXgjx/e99k4Guk+SMtXSdPf/JVaAkZpudRDwJ/vXZiVsJqqpSlBQy
      RZlwukAwmSeWKZItyrxwaZpH2vx883D9dSbOneSvjg2hKCo+m+HDv3z0FqsICOi1IgadiFGr
      wWzQ4DTp8duMmPQi9W4LoigwE89xYTxGQVLQiAKVDiMtfiteqwGdZuk1oauXL+CvqORC/zxi
      Yp5kXiIjFHn9+X+gP53j6COPYLhJ+bXG7fVz9tivGJotcqYvRF2liqtUw/krA6RSMSaDqTui
      AKqqkipInBuLMRPP4bboOdToxmPRIwgC3vR+BieCeG0yE3MRRL2VRHgaEWWxAkyHEtiMWgwG
      /Zo3cjnMJnLYjTpKssJ8auEFj6SLFCT52jV6rQaLXoPXaqDJa8VVr8Ok0/Bki5H33jtJ39UE
      ok7L3PAw9z/5WUaunMLk8DHS082Bxz6zKn+a6fFRBLOL9Pw01XXVRLMK22q8XLjcS7NeRaO3
      8Pj+lfvIuy0LStPit177m6yozCZy9M+lOJEOU5JVtKJAndvMtoAVh0mP5sONgs5d++i+cJq2
      5iqCNjNKIUutq4b7//CLZOJB9Ov48gN0nTuNe9tBHMkrbOusJFkAjdWG32GhpqEFQTuzpvVl
      ixIXJuKMhzNYjVoONrh5tM1/3Ui65+BR9hz87e/bap689nnRHODqxbOUVBWLq47WxpXPAVRV
      5cRwhFa/FVlRSRckMkWZbFEiV1wwAXIlmaXmer+4MMWj7X4aPBb8NgMBuxGvVY9hGdFHqiJz
      9v1jXB6bxu+voNZUhPr7UWavMJfRYNerPHD0oVVtMs0G57n07i+4NC5RVVmL1any+U89ySsv
      /ZyC0UnAX83R+/au/MbLRJIVJqJZBufTJHIlZEVlPJJhb62LT+8IrHlwyurnACqFfB6t3oiq
      yGi0WvLZDDq9AVlW1qRjLUoKXVNxBuZSGPUa9tW5aPCYV/0dLBoBduzZTz5fwGi8+VKnLEvI
      irIQOCEsDPYaUUSSZN64OsN0tZMqpwmLQYtFr8Vj0WPSazDrNRh1mmsTs74r5xkJJhHSUapb
      tvG7dVk+vcfOy2+fRNNYw4mLIb76haeWJUguOc98WuKB/fvJywrx4CwtRomU2UaD143dqF31
      DuvVi134Wu+jIXcZT6UDVaMnGppB0VqpCfhJpLOru/Ey0WpEmnxWmny/HSmuTCXoD6Z4/oNx
      jm7zUX8bL8Faoaoqx379j+ir7uPChdP88R9+k//05/87hx98kJFonj/41ldWtMmnqiqyqhLL
      lPjJ2QkEQcBnNbCn1sHv3Fe3JvIuUoBsbJ5jH1ygedsu2rfVLFmou/sKExNzTIxP47ZLbDvw
      NLVimH8+M06HpYhxvoGjBx+/ZeV2m5M6BX785ps827SDeCJCMjLDUN8ggeoAnXsOLFsQs7OS
      Z5+uIBKJEA/P0XL0MdRMmKK7GiEXxxuoW/a9PsmRo0ewWCwc2LO4l/98TfOq73m77KxxsLPG
      gayoHB8M8e5AiPubPbQGbBvWJgCHv4arPWfJF3JEogkOH9jJyPQ8it56y7KxTJGBYIqJaBZZ
      WTATNKKAy6Jnm99MaW6U+6rrSOVivH/8As3b92EhTaygJR8L0tjeiUG7MqVYpAAmqx2hVMDq
      clDKpbhwsQvRYMFoMpCYnqDt/sfxWXVMDI9R09pBMRenqWMXY6N9uCrNgIDdYiAnLG8Sms4k
      kfUO/t2//1NKpRxe+wMYnEaeefZJautqMFpX5oaQTYZ54cVX0Yo5rIOT2NUcA5EwVaKWoZjM
      p+/beEeztUYjCjzS5kdVVU4NRzg1HGFfnYvOavu6jwiCIHL4oac4/NBv//bkl7557XMiV8Ks
      15ApSAyH0kxEshRllY+scKdZT2vAyoEG97V5zkcohTTnwinGUgLh4SvUBTzoDXre+tWbaO1W
      JocnecpTT3PlytzGF72puVScgiCSisapclVgd7iIp3NkkrMIksRMOIVZMPDks89itVo5tHc3
      ogiHDxxAEKDjsIIACOLyPAlbd+wFpcibr77FfY99isLUOYIlNzOz87R0dKJfoUOi2eGhpaEG
      vbYIRh9um4680Y4SnqC6wruym91jCILAkRYvh5s9XJyI8Q+nxumsdrCvzrlhppGqQiRToHc2
      STCZ5+fnp9lT62R3rZNmn4XP7KxEpxUX3plbtFGR81weClKbLmAJNCMJEmZyBKqrCSWzBDw2
      CsWVb1sumgRn4/OcvniVyvoOmios9A1PUuH3gtZILhGhuqERrbi2vkBKdo6//E9/yxe+/2+I
      9J4gGI4wOBbk29//11TY7o5d53txY0hRVbqnk1ycjNEasHHwBr3qUqxW3mxRYjiUYTSUJlNc
      WLnzWPR0VNqpcCzMKzWisKrNuTvFohFAFTSIgNNpRW+2sWvnx0wGz53ZFxC0Ftp370BTyGKx
      O/BqLWgMTsy6u+dLuhcRBYGdNQ46q+30B1O83jOH3aijwWOh2rV6V+dIpoBRq2EmnmM0nMFj
      1WM36hgIpijJKs0+K491BLDoNWs+8oRmxvn1G8ep8RrQ+XbgkeY5MxGixa5BrOrk6J6VJ1he
      pABjE9Ps3b2d2XiKCvf6TKYEvY3PP/fcwi/1gXWpcyshCALtFXbaK+zkSzLHB8P8fydHOVDv
      4qnOyhXf7397sZv2Chv3NXk42ODGYdYhCgLb1mHyXUjH0JqduHwBtnfW03shiFGnZyYU4uDu
      1bmtLzKBxgZ7mI+lqGlsp8q3dI9/L5oEt8NmkleRi7xyug85E+O+/XtIxcK0NDdz9uS7eCtr
      mY9maK520HW1j2JBpqLKj6K1sK+jkVffPUmlw0hJ7+LgrvaNFmVNWLQsW1XXRFtbO3azruxJ
      uEnJpePEB68wO3yF0eFBjp86CUhMjAyRKmmIz8+BQc/g6RNcHRrh/dOXGRsfR0UglgjRUF/H
      +MjYRouxZiwygQaunudK/zi+6hYeffgQWyMqdGthcbjZtq2ZbCqMwepiR2sLiXgUr8fP5FA3
      6JwY9GYef+5rzARD1NVVkCiIpDJZDu3ZRzgUonNX50aLsWYsdoeOhzjTdRV/TRsdzVVLFtpM
      JsFy2GzyKrJErlBEr9OBIKIVoSjJiKiIWh35XG5TyXszFo0Ac6EIlBTcHjuqqtDXP4DTrCen
      6knOT7Ft9yEs+nLE6r1OIZPghz/6GXYTeJsP4VbnOdM7g0FbwlfVzONHD290E9eNRW9zRWUl
      DrcTFGUhmCA4x+x8nNBsL/l4gv7JCJlMZqPaWmYNyCbmGZ+LsmP3HswWK/GZEWwOL7F4EpfZ
      gCJujCfwRnGDxFgK2WwRs9nIxMQEekEmq+pJzU/SsvsQFp246UyCW7HZ5L1RLjRVBQEVBIFs
      Nrup5L0Zi0ygfCrC+a4eVK2VI4f3Ulf3MQeyuur1bluZO8SNNqgW/rT1Nh8XG/TqgkOTQatD
      2aAGlSmznixSAFGrJZtO4auqvNuz5pYpsyYsUoBisYjeYMJouDuc0MqUudMsUoD5YJB8roBG
      X+7/y2wNFilAU1snn3rqCRyfyCamKgXe/vWLzCQK69q4MmXuNNftagmCuLBD+DFUtYQGlXiq
      rABlNhfLsnVE0ULHwfvx+G0oH26SKcrWWScqy7t5WdEJMbIsUywWyefzS2aOkGV5ycMVZFlG
      UZQl84verCyw6nrLZdenrKqqFItFDAbDDf9/N7Z5RbNdjUaDyWRa8gCFVCxMqihQ6bWRzivY
      LIsbpHyYSkWrvb7a0OwUGrOLQnweh68K8w1WojQazbW0hR8nMj+DorNCKoHFHcB8g8xwS5VN
      xcMkC1Dtd5FM57Dbrs9esJS8+UyScCxNfU0F6XQOm+363dOl6k1E58nKWvRqHo3JidNmXnbZ
      dDxCIq9i1SsoOiuuFZQtZFPMxVI01lSSTKWw268PIl9K3kwySiwjURNwkc5K2KyLr1FVFZ1O
      d8MOLjI/i6KzoCRjmF1+bKbrlWSpNsfDQQoY0Cop9DYPNtP11yxVNpuMEUuXqK30kkxlsNsX
      B+6snWebItE9MEZwpJ+p8V6ujASvu0QUxRu+/HImzGgox0D3JQRVYnjsxhnEbiSglE8xMh1l
      qPcq+XyS3oHRZZcF6O4bIjwxTO9AL13dgzeT8DouX+1Fk4/Q3TvAuct9y65XlUv0Dk0yNdiH
      qtMxNDi0ojZf7RskNjtCOJmhp2f59QJcutKDqRjmdFcvp8533fCapbjSM0B6dpyR4QEu9U9c
      939BEG748iv5JEPTUUZ6ryBoBIaGx5fdZkUu0T86yehgL4VClp6egWWXBbjS208uPElXTw/n
      L/de9/+1UwBBxKRVmArH8fsrsdxAS5dCNFqREzMkchL9Q2MEfMs/nUajM6AWEsRSefJ5GcMK
      U0mY9SJTwTBaUYOgrszudViN9A9P4g1U4HbeOu/NNUQNBlFiNpJgqLcXb8XKQhPNBpGJmQhS
      sYjReGNzYymcVhPdQ5OYDFq0K4zZtRp1jM3M4/dXYLcuP65Y0BkR8nEiqTwDfYMEAv7llxVF
      dJQIRZPk8kWMxpU561mNOkam5tDrtIjC9db+qk6JvJlzmKouOFStxqvkdsuuNgj7o69gqfK3
      lPcmZW9Z7+18V7dT703KbiV5V6UAkiTd0JTZrJTl3bysSgHKlNkslMO7ymxpllSApQ7ClqXS
      tcSlq0FVZEofy/dfpsxGck0BlGKaX738JqqqUioW+Oef/jNTQz3MJ3KoqsLLv/wJf/+jn3H6
      7VeZTuQpFPIoikKxUED+6Ke8sIqiqiVeeuk3qKpCIZ+nVJIolYrkCwWiE9283zVMqVREKitC
      mQ3m2kyn79I5ZudmGJ8Y4bXXjpHIFbh45gTbHq7CI0SIayr51tePcvbNXzHUdYq3JqawWp2M
      9l3liU8/ygsvvkxV6z6+/63nmOw5x9TsPFPTk/zon17AZrVg1ygoWgGfvwLV6OQ//ocfIjhr
      +V/++HsbKX+ZLc6HI4DCuUtXcRgUTnxwgUKhgKJCXd3CeU6ixUdxtpv/9vc/oqBCoSBRKhbR
      mazUBGz0D02hAtVVlaiqysmzl/G79Jw4fgpJKoEgoqoKxZKE3qCnkM+hqlBVvXTqlTJl1oMl
      V4GkQppf/vJXPPHZL+OyrDJAJh/jrQujPH5kH++/9TaHHn+MrZVzoMzdTnkZtMyWprwMWmZL
      U1aALYaqKgRnp0nnFoKbioUCykdGgKoSng8iydevzuXy+fVs5rpRNoG2GEoxy3unL2LQ6bBp
      8gxOJfFXeTBZ3FRaVCJ5AZ0GookcdoOCrEAolMHo0pCZj7P3wcfw2W9+iui9RHkE2HII5DMp
      NDo9ExOjKIKWVCKJIAiYrDaSsQizwQipZIpkOkU4OEskFEUUVZLZzRcSWx4BytyUUj7NwOgM
      HR2tm7K3XJECFIvFJQMPNitbTeatJu+KfF5LpdK6fTmqqlIqldBqNCiAqigIgoCsKOh1etbr
      oMH1lFmRZRR1YaKq0WhQFHXhs1a7bicrru8zVihJMhpBAFFEkWVEUQBENJr1GW/uWqdvuZTl
      tZdeomhwY7NAZnoG/46DTI2M8JUvfW5TpnENTo/x/gdnEeQSgt6JaDZQmOun7YEvs7d15Qfa
      3e3kEiF+/ur7VLlN5LNpYikw2gzYbE6efPzhdWnDXWvWycUcw9MxHCYNqMJCVE82xrbdh1jm
      cbf3HDOj/WjMroXoNlFAVWRMNgf5TXomQz4dJ5YuIrAQzaeqKj63nYK8fg94RXOA9cyTr6rq
      kmGO63ny+brLzI2TlK+XzFvtGa/IBFIUZcudEFMobL6lv5ux1eRdkQKIorhlTg75OFtN5q0k
      700VoJDLgaBSlAVsluWnwShT5l5hSQVQpCJv/eY17A3ViDIc2r93y+SLLLN1WLQKpCoyc3Mz
      5AolpGIOQasBRUHUbp2NkTJbi0WrQJnwND9/5S12H3iY3R3111282U5LXA5bTeatJu+iESAY
      juJ1e3C7bEtdX6bMpmLxQdkBHwajgUQiTdlDrsxWYPEpkTods1OTJJKJsgKU2RIsUgCpUKCh
      pZViLldWgDJbgkXLoLFkBrVQpG3PTkRFZno2iMdpJSuJuB0rSP9d5oZMDPdxoW8Et07Cv+0I
      uvwM48Ewsclpdj3xWbZVOje6iVuORSOAy+XGbLUgspACcaTvCicv9jHQ30OxWESSpA1q5ubA
      5XJT6a/E6/MwMzeFx+djKjgHxTiDNzhQ5OOUcmmGxyYp5lLkijLZVIyBkXFmJsfIFsrP5Wao
      coHjx95icKCfk+e6UOQSb7/5CkOD/YtHALPNjtfvw2o0gCKhMxjR6AS0BhNarfamZzSVuTWx
      aBhZEFAEA9sbqkjnMhw+9BC56Bxtu1puWjaVyXG16xzTShTrni+jTpxiRnYwd/lt2h76Cg/t
      a18nKe5BRB0VbhuvvvUuFbW1yKU65qfnmAwmFo8AuXiYEydPMjY1j9Zo4fCDD3PkvoMc2N2J
      KIrr6oW5nlw+f5Lx2QgDAwMoqFw8c5K5uVlOnLm4pvXUtWznvl3bMDorcNu1jEzHaPAasQea
      MOpu3rmkQhOkJCNNLW1oSznsgXpSkWlcnlrKE7abo5SyXBmY4Oh9+7GYLKQSWRwuNy1NjYtH
      AJ3RRFVlBdYt5vdTEfBx9uxxTnYN87/+u+8yNjjB66+9ja99Dzt3tK5pXafefpWBrI1Om8Rg
      QiI7fZ6MYR+NNTc/Fqq+Yz/1HQufaxZazbb2HWvats2EqqrEcyX651L85zcH+avf/RwGQWK3
      2YwqFXn48SeIJtOfDIhRSaZS3NgjfXOiqipnz1ygsb2To4f3kEyVsNr0fOrpJ7HpV5kS8ia0
      7txHQ8BBoLoOs05P577DVAWuP6nxhsgF/v6//hgJ+MXzf80b753lH5//6Zq3cfWovPvzv+V8
      /yR//Xf/gKSoHPvlTxmYnuX55392R2uWFIXZRI53+uf5yZkJfnJ2kg+GI3isev7smQ7MYoH/
      5//9O0qqyum3fslPn/8JL7xzfvEIUMrn0Gp1JNNZwHNHG7zRyIrKZDTLf/hNL3/8qaeoNiu0
      tjSRT6c4/NiToKrsPWAlu8bxD/7qRh6rbmQ8kuGBiiaqXSZqGm/d4ZSyMfonYzgcZkqlEkUU
      ivkCFuPaK+nqEfC7nGhcTjradqIWEnRd7WOyoGF6eg5JAe0axCCqKhQlmclYjr65JKm8hEYQ
      8NkMtFfYeLjVd10MdTI0hawqzMwESWcLCNYKtPnwYl+gwe5LjM/M07rzAHUV1w/J97KfiKqq
      FGWFnpkkfXMpBKDWbcZp1tHsUviLP//P/Js/+58JDZzldNcAoUiMz3/7D6g0r41/vCQrzCby
      XJlOEM8W6ZtLYdJpaPJZUT9mxGsEAbtJh8usx2PV47UaMGhFtBoBjSCQTCQRtFqyiQhmVwC1
      mMfhdNx2+z7idp9xPhVH0JsoKiKiXEArCqAzUsxlsdlX52IjyQpnxqIYdRqG59NIsopeJ1Lr
      MtFeYcduWn0nsGgESOcl9u/ZznQ0Tcmho6u7H7fbjSLqaGmoXXUlG4GqqhQkhXPjMSYiGbw2
      A80+K1ajlq8dqP0w+8CH15ayHDjYwcx0CIPBxbOfe4Z/+vHPcVsMoK4sQkpVVWRFZTSc4cp0
      gnxJIWBfqDtVkDjS7MFpXtq7VlZUkrkS0WyRdEEiU5CwG3XotCL5kkw4JXF6dJ7xSIbvP+Ki
      xbdM82mdMFgdvPSzn/HEF7/EqZdfRtK6iMWifOGrX1tWeVVVSRckuqYSTEazaESBJq+Fd85c
      Yv+2WuqkBHsOHEAopUkVFEb6e9m5e+dCZolVsEgBtjU3MDwxR3tHBzqtiMOsY3I2jEkvkK/w
      USqVVlXJehLNFHl/KEwqX8Ko1bC/3sUDzZ6brmAJOjOffe6jB1QNwL/8o38JQH/XGYIpuHrq
      DF/9V/8DkxffYjqaJyXr+dKzn0avEZAVlb7ZJN0zSSRFQSOKNHotPL2zEtMtVnc+iUYUcFn0
      uCw3VpJmn5VDjZ6FcxiGw5wYitBZZWd/veuuWKWTMyHeP32BPU88QzyVQ9LrMeokkrkiJtuN
      ZUrmSpwbjzGXyCMIYDVo2VXjWPTcmp17OfXuMXReO2OhNMr4e0wodRQnL+Fr7BemFK8AAB7e
      SURBVKDasbpRYPEcQJJAkejrG6C1MUA8p9JQ7UMS9BiNRuQbJE3daAolmR9+MI7NqENSFNxm
      PY+0+bCvkW3sr3LT/9pFUqU80VQBUWNhz+5WXnv5Vf71jy9Q7TDSVmGjvcLOF/dVo12HfDaC
      sBA0/uA2Hw+0eLk6neDvT41T5zbzcKsPzQamzdBa/fzZn/1bFLXIffffj97mZW52Dr914eVX
      VZVIpsjFiTiR9MJBLHaTlgP1bh5t8y2pxFdOHcdRUU1Xdz+PN+axN7SRmi0wpzWDIgGre96L
      5gADXacZD6fx+OvZu7PlurWgjZ4DpAsSw6E04+EMuZKCqqpoRIGZeI7ndrgQCgk8lY2UUiGS
      RZXIzDTVze34XKt340gnI+TyMDU1TkNjE6qi4rCb6Lo6QFVzK3aDFrNh49MrqarKRDTLuwMh
      3GY9j3cEMOlXvnG51s9YVVWCyQKvdc/xTt88T+6owGPVs7fOhceqX7eEX0uxSAHkYpbXXn6Z
      xt0P0NF4fSKm9VKAj3qJkVCa2USeXFFGZWFobPZZafCYMeo11768dHSan710DDkxwbb7v0R7
      g51TZ85S47RQ1Xk/lc7V72tstNKvFFVVCaeLvNUXRCuKPNbux72EOXUjbldeVVWZTxW4Mp24
      1sMH7AbaK+wUZYUGz+rvPfDBywxp2gnkBxkIZkjOTrHr0We4v7N51fdc1HUN9FylqBioqvKu
      +oYr4aMJz1Qsx4uXpmkN2ChKC3HHHquBJp+FzmoHJp3mpvat1e2n1u8hZlKQcmF6uwaweOtA
      U6LiNl7+exHhw+XArx+sI5Uv8XbfPNmizIMtXmpc5jVPKfnRC98zk2Q+tXDWgN9mYFe1A4/V
      sKbm2Nj4GLMGOzpNllg6hU2nkC/enln+icRYKrlshpIiYrear7s4k04xPTOD16ZHNlciZoKM
      R3No83EqWjrxO683NT5a1QinC8zEc8RzJXKlhUYLgNWgw2XWMR7N8Ok2NzaDFrQG8ukYBUWD
      XMjjr6jYsGxw99oIcCPyJZkTQ2FmE3l21Tjw24xUOG6c4z+TyfDmL/6Rur0P0d1zla999lH+
      y9/8mE9/4bN8cPEKX/rM06TyJXpnk8wlf/vCb6+y47cZ7+z8Q5HI5CV0WsgVZJCLWO3O26pz
      0QigKiqiRoNaurFWFXN5Tn9wlt21RgqVD0NwkPd6x/n80Z28dqob0V1BpcNEPFuk+OGZwR+t
      a3utBlorbDhNOow36NHb5iK8/sq7aPNT7Hzqd+g/9iK2QA29Zy+y//O/x+E2/00FuXL2XSYS
      BvbWmXi9axJHaQZ7wyEeP7Jn1V/OZsGo0/B4RwBJVvjp+Sl+PDXJX3xx55LX+z1uUBQCFTXk
      EhEyyShJwcWL5wY4manki3tr6Kiy8+C2dZ5wi1os5oVXdiF/7+13TIv3AcJTvH+hm0RS4Utf
      fpqeq1fxOiykShraWxrQm810tLZQU2UnJMloA1XswkgknMLuqGS+KLOjyo7brEe3wi0/T0UV
      Dt0g0bTC3PQMTe276B2dxGoz4rHf2oyxu3xkpgaZHdMyMz+HzqZFTEZX9m1scrQaka8frOWI
      fZY33nyP+Owg933uXzB/6TX6JuJkSipPf/ZZ9jz8JNlcDqfTgc7h5pu//10ClXb++k+/i8lk
      WdXk+m5lkQLoLTb0WiOPPrYXDZBIxJGLJUqqQj5fQalU4sDhwwAs7BNX0LxmXrg2PvOlZxf9
      ZeeeA8su7XB5eOKxaowaLd6OBBY9GGzrM5e5lxAEgUB1Bd2Do1hdVbgNKiG9kyce7eDHP36B
      TEGizufEZLFdc4YxmRY6ILfj7tp0WwsWKYAgajHoVHJFGVEUaWluwaBRSZU067IPcP6DY6QU
      C/VODb2zGczFeQw1+7h/Z+Mtyzo9gWuf6633ts1+p9GbKzl8n5Hx6RlyuRxtnbsxmw184Stf
      xu/aWosGixRgemoauaRiMhsAqKpaOMl9vdzibBYbblct4xdPMBBMcbC1gYOdt375y6wMUaMn
      k44Rzyl0GhRee/0t7D4/VrsPv2+jW7e+LFKAispKEqkMbFAKxEKphJpLs+/oI1SGk1R4nWg3
      fnd/0zE3OcSZ85eIFTQ8emQ/TrcbUc5x8eIZ2pqe2+jmrSt37fkAdwubUWZVVZgc6Wc0mGXX
      jhZisRhKLklKNtHaWLXp5L0Zt1SA8NwUaUlLQ03FpnwZbsVWk3mryXvLtcqJqSDzs5Pr0ZYy
      ZdadW3pxVfhdpEqbZ923TJmPs+w5QD6fJ5vNYjAYlrxGURRE8caDiiRJaLVL69udKqt8eLzq
      Ur5ENysLC0cGLSXzrcrerN23W/ZmMt3O93Wn5P3oNbsTbb6dssv24/1oH2C19mE2m8Vsvt6/
      6E6XLRQKaDSam35Bt+Jek/l2ysLWkndNVoFCU6OMB6NYHS6mJ6d5/NGjy25AdHaCkdkwOo2W
      dDxOx8HDuG8SMvhxUtFZeoanMRqNxOem2HP00ziMy3PBkAspTl/oQW+yYFdjmOoPUeu+vudb
      SuaeyxdIZQpUVVcyG81zaM8yt8RVha4L50nnJCqr/YSjaQ7t3728sh/Wm0gX8Ad8zEWSPHBo
      37LLDvVeIZbKUNPYSl9PL48+/MB11ywl70h/D/FkAoe/jpnpaY4eObTseieH+5mPJdCbbERC
      UR545IFlh6/MjA8xF0lg0BuZmg/zxCMPLdv/KBGaYWB8FpPNSTY0RsfBx7F94hGvSfhSPBrH
      areRSucxrTA4JBaLYXU4SWfSmOwOrCson07GMVnsJJIpXHYL0WR22WWlfApRZyKRiDE2Mk48
      mVpRu9PZInpKiAYzkrSSUFFlIb4hn0JGxOtb2c5TOltAT4GSYKCYX768AIlUFqtRoL+7l/lo
      nJXs9sSSaZxWPdmSBg0r8wiIJVLYrSYyuTwOj2dFJzNGY3HsDgeJZBqDoFBQlp8FLBmPYbbb
      Cc+MMTE5SzpfvO6aNRkBVEVmZmYWi92BVhSwWlcQgaUqzMzMoNVqSKfz1NTXodcub9KtqgrB
      2Vl0RjPFfJ5AZeXy3aZVlfD8LLJmwdlOFgwYdNf3B0vJXMimCUUTeHw+ZEleUTKxbCpONJlZ
      6Mk0Bir9y99rL2RThKIJrFYrkiridS3fP0cq5JgLRXB6fAiqjOUGZsNS8sqlArPBEA6XF0GV
      VvSMFanIzNw8Wo1IriBT31C77J5XVSRmZoJYrGayuRKVFf7lxzSoKrOzMxhMVixGLVqDhU9G
      rK5IAfL5PEbjjf3INytbTeatJu+KFKBMmc3GnU9hUKbMXUxZAcpsaX47IVcVxienqa9byAB3
      4sT7tDfVI9r9uMx6Jkf6GJiOU+cy4GrqxHuTTAPJ8CxY/STDs+jUAr3jYRorHfQMjGKz2Uil
      UiCIHD766JIJoMqUWQ80P/jBD34AEJ7o4R9fOsaena28+tILnO8ZRcxFsVU2Y9Nk+Nkrpzi0
      bwdzI/2UdEbeee1VCqrIyWNvYbI7OPbG6yQKAjWVPi68/xrDwSSvvfo2+cQcgtlHbLqfqXiJ
      w4fvpxgaxVzTSUOFa1GKwjJl1ptrJtDx4ycQciGOvfsuGa0Hj92Iz+1cOH5HVRcy8ubzyIpC
      /6UL1LR20HO1D7Ne5Nx773ChZ5DB4TFAZSapMNt9BrfHyY5DR5nuO08kI3Pwvvvxuh1YzCYs
      Nvu6ZFErU+ZmfLgKpDAwMExzQzUjk0ESoRkKgo6Z/sscfPobNHjNjA/3MjaXpL2pClVrZri/
      h5aOTkb7umls385YfzfeulaaawKMjIxisZqhlCecSJEpQJXHijNQg9WoIxqcRrB4cVmX9isq
      U2Y9WHIZVFEkYvEUbrdrCx2XUWarUd4HKLOlKRvhZbY0G5/WuMy6opTyHDt+ApevCo9FSzQa
      x11Vg9lsw6Rm6RmepLG5mVw2j1mroLPYCc0EKSBj1eupqqtfOPVlk1A2gbYYSjHLmSuDiFIe
      KT5Bf9SEx6Hi9VRR4zZQ0FgZ6B/CaDShN6qEh/vQOVuwuvNMj8S5/4nP0FSxeRJklRVgi6Eq
      MgP9fXgq68gm5tHrTCiAzmjF67IyNjyELxAgEs9g1ikgiBx79wyPPvUo6VCY6oYmdJotOgLc
      KiRuM7LVZN5q8q5I0lwud6facdey1WTeavLetZNgqZDh5Mkz2NweRK2WTHAKd902ZqameeTh
      BzfsvIA7yfTYENPhBMV0AofHR7qoIGTm8Tfvp6n65ifJ34tkY3OcvDJOhUNEFQ2EQnGcTgt6
      s4PO9pZ1acNdqwCiVkcsEiJekLHqs5SieUrGEDqrZ1O+/AB6LcxMTqDTKPQOh6iud1GKzYK9
      eVMqgN5kJhScRZTtxKbOIprryaNQmJ4vK4BcyBGoa6am0ocs6snF5vEGAmhMro1u2h0jkyux
      ffc+lFyKg4e9xNNFhEIlnurrz2vbDGRSaVq2tVLp0qPZ3kkkFMZpNyEY1m+VacUxwVspXA5u
      P8XIvcZWk3dFI4Cqqmt4WLZKPl+4lm9IQCVfKKHXa1ER0S0zMH4tGOi+iGiwMT41x4MP3s9Q
      z2UaWjtJxCO4nc574oDwtUKW5U0nbzQ4xVxKps5rQdY7KMVnSCpGcpGplSmAIAhrNgJIuThv
      vPAT6vY/wtXuPr7+9FF+9rNf4jCCtX43zzx8cE3quRWKohLwe+gZT2A36bAZFC6cOcNIKEMk
      Osu3vvjFNZN5YrgPja0CvVrE7fcx0nMZZ2Ut09NBdne23x0nvcvyphvlzQ4Pwe7jjJ6bov7h
      rzF/6SLxQpbIRGTjfIFkqcB0XKIYD5FJJ5AUmfaO3VjMZmKhuTtev6qqDAZTfOb/Os7f/Pxt
      6qqd2H31pNJF2lpb2NW5k/am2jWt02yzcunMe/zdf/sRJcDhtHDq5Dm6L58jJ5X3I+8Uo93n
      0doCOL0+MpEgVrcPl6+Oumr3xp0PoKrqTTdd7lRvmM5LvDswTzRTYlvASkeFHZtJu+SJ5Wsp
      86u//Ame+jYunb/AY595lgvvvkp75166e4d45rnPY7sLDp/baunRN0wB5EKc5//hRZ77zr9g
      +NybRPFRCk5Q1RggVdDzwKG1O95UUVWuTie4Op3EqBN5pM2Py6y7pmRvv/QPEDiCszjM1WAW
      NThFRet2eobG+N63v35XvhCpWIhYTkHKxKlqaCGfmKcoWkhF5mlsaVn1UvFmVICxvku8eXaY
      Lz/Wyd/908t07D1IIhrEXoxtoAmUmqdQSDMVL6HVmKlzCbx9/CImu4fJ6Zk1qSOaKfKrrhl+
      dHoCVYWvHqzhi/tqcFv0i0YYb3UTieAQsUSOZCKMqNFQUgSsBgNrOh1UZX74f/9XUsArv/4F
      L7/2Fn/7V39HcLqXn7/w1opulS9JXDx9nHR8jisDE6QTUd56+216P3iToXBhLVt9z6MzWdFp
      iyiiCaGQJhELU1lVSygvbtw+gM7TzN5DSSq1WaSGbXh9Pv70TwJkczEOHdy/6vtKssKlyTj9
      wRROk46j27w4TLqbmlTNbbto3WFEo4FDRQlRldEbDOTyJW5mlPyqawaHScf2KjsOkw7dTWKc
      5VKeq/3D+ANeMrkcMgJqUSYQcOOtqkQrTa1Izsn+K2htXi50DXD0iWbiyQImsx69aCefzQLl
      cNOP8ASq+dLnqzFoNfz+H/2PCMjIqsCOlsaVm0CjA1ewV26jmI7R1NLM1XNnqG3byXxwlraW
      5puWV1WVvLSQHDZXlEnkSsSyRaKZIr+5PMsX9lZj0IrotSImvQaLXotZr0GvFdFrRHQf/dT8
      Nje+qkKmIJEuSJwaiZAryuypc9IWsK3JKeaJaJi8IqJVCuitbnRqgUwRHBY9r/ZG0YgCWo1I
      MleiJCt8FD+qFUWsBi12k5aAzYjDrMNm0KJKRVRRBKmIojGgUWUMRgP5fBGTaeNXXzaTCaSq
      Kn1zKf7kn7v44e8fwnODGPQVjwB+n5ezZ4/zQdcIf/Zvv8tI/xhTiSxn+4epnRNp8VvJFmUy
      BYnSh6dNCoAKCAgYdSImnQaTXoPTpKfObWZbwIrPZqAtYKMoK5Rk5do9wukCRWnhbx/9rySp
      LGitiqyo/PDUOH/wcDNPdPixGZebeHt5xOIxPjh3kfTcOA899x2sQpb3z17EkY9Qc/Bz7Gm5
      cXZnSVZIFySSOYn5VJ7RcIZ0QaIgyYDAubEoVoOWz+6uotGnwWFaeY/9wSsvYu08ijJ5iVND
      IaxqjLbdD3P58iV+79vf2LKx3EVJ4cxolNFwhm0BK3/z7f1L5p9asQKcOXOOxu37QGsikSpg
      tmnZ1rGbjKyS1y4ogFmvwWLQohWXPsXkk/hty+/9lFKWN954i+377md0eIgffnsHH7x3glz1
      Qa70Rjmyd8dKxVqSRHACSWtj577dDFztwmUsYbA5ySaCpJIp4MYKoNWIOM16nGY9dZ7rd1Y/
      tT1AUVJI5EqcHokQz5VQVbAatDT5LNS7LVgMmiW/vytd5/F4vMQKRZLJNFq1hE4jcv7UcaZS
      BWRVRXsX7CusF6qqEsuWeG8gRL4kc6jRzQMtnlu+f/fmMamqSvf5UwxPTnN2KMQP/uQPOPHq
      L3C2P8BQ3wW++Jln16yq9ZY5XZAYCaUZj2TJFCRUwGHS0RqwUeMyYdCK1x5qMZshr6ggS6Ty
      EhQz+KvqyGUz2GzWVY0Ad80zXiaKqjI8n+bMaBS7ScfDrT7spuVbAYtGgEI2QwkBVQab7e71
      B5GLacaDMY489gyde+eJz88h6d00V3kx0rHm9V0+d4JQWktbtYWu8ShOIoTSOmLJNF//na9h
      WsPTvK0GLbtqnOyqcQILPVsyL9E/l+LKVJyCpDAezWIzaPn+w83YP5zn2B0AXgB0thWcz3CP
      UpIVTg5FmIhlafFZ+fqhulXN+RaNAK//4h8Zi5d4+LGnaGuouO7iu6l3kApZBsdnaW9tJpuM
      ks7mmAym2F7vRrX4sazRVODylatoNaAze5gbPMul4Xn27mjHadZwrnuIZ7/8u3jN67uaPJvI
      0T2dZDqeo9Fr4cEW75qlmLybnvEnUVWVRK7Em71BirLKkWYPDZ7ba+uiEeChJ57C1T+K3br8
      0042iqsXT3JlKEldUx2/+fnzFEwNBGorOfHSK9Q/88e0Lv/QlZvS3NTI2EAPiibF9oMP464N
      UV3pxWE1o7H68Kzzyw9Q6TBR6Vh4RsOhNM+fHidgN/J4u39TppvMl2R+em4SBAG7UctnOisx
      r/AorqVYbALl88QSMTyZHCWrlqu9g3i9biR0NNbePT7psflJMiURdDoy8RgWmx2D00UyHOLA
      9t2Ia7y7sWPvbx3zPE7Htc8dbesTtHEzmn1WmrwWZhN5fnJ2EodJxxPbA5h0G+9WcTuoqspA
      ME3XVJxcUWYqluPfP92+JkvbH2eRCXTl3An6R2foPPAgbfUBhvquMBUtYDEI7Nq5k3w+j9Pp
      XNMG3O3czSbBJ1FVlWimyBs9QfRakcc7AjhWMCGEjZVXUVX651JcnU5QlBW2+W3sqXWi14r0
      Xb3AlauXmRyd5wvf/SMuvPFz9N4qkkMDPPPdP8S1yiz7i/rKYqFASVLQ63UUs3EiaYn6SjeS
      oLvmt1/m7kUQBDxWA18/VEfyQ1tZUlQeafOtaJl5PZGVhZe+eyZBSVZoDdj43O4qDJ8YwXKJ
      GBVVNUxPREgmUzhtJsZmpogHI6QyeVz61cm3aASQJYlcLofRZEZ7g4CUe6k3XCvudZkzBYlj
      AyGSuRIPtnipcZlvesriesgrKQoDcym6Z5KUZJX2Chs7quzXvfQfJ5WIIaFFg4LRZEIqFtAY
      TIiKjEZvWLXz3yIFyERm+M3b79PReR87O+qvu/hefxlWw2aRuVCSeX8oTN9cCrtRx7fuv/75
      wp2TN5jMc3wwhKIu9PptARs7qu0Ylhn5N9BziXBGZHeji1dP9tBUYaGEgdGRYZ78/JdxmlY3
      8VtUSmswIOXz6O8Cn5Qya4tBp+HxjgCtASuvfXCZmbECGaw0Vdg43z1GZ0sFcdmIw7A2q0iq
      qhLJFLk8lWAukSdblMjkC3znvhqy2Qxen4N8OoFgsZFNZ3A4HDcdmaqrqjj/5kl8kpdMKYHN
      28zxt98kkcgSTRfWRgEEUUtLWxt2c9mTcLNSbdchTF7lQs5OXrRRchrpiccwlaaZ0jbxUEf1
      qu6rqioFSWFwPk3vbBJJVvFY9eyqcfBomw9BEOg7+yqnzmWITffy7Fe/zou/+Dnp6BwZaz3f
      +73fuWlAUDgcZufO7bhtVhpVI1Imyf0PP8H8zCwVjtV32IsUoJTPkkqliMRTVPq31mrPVkHU
      6uns3I5AiTR6rC4ThniBhqY2SqmVdXyKohJKFzg/HiOeLWHQimwLWHlub/UNXcOrausIDcvY
      WtpRchlcNiNaTSXJtMyt0o3Wt2y/9vloVdW1z+3bbm8petEcYLj3EsdPnefIE5+ltc5/3cWb
      xR5eCZtTZhVFUREFgZIkfbiLLKAoCsVicUl5U/kSmYLMRDTLcCiNAPhsBvbVu3CZ783TPheN
      AIpo4LnPP0Mku1HNKbMepCMzPP+rt/neNz7HX/7l3/D05x6nv2cAm7aEq+0BjuxsumG5l6/M
      cWokwr96tIWDDbUrjtvuOn+SSE5kR0DD2VkNjtI8GkHDYDjHV597ZkM27xYpgM1sZGh8hvqm
      1nVvSJn1Q9Za2LejiWg8zrbGaoLBEF5/gODUJB0eGy+8+GtsOoXthx7GIkgcP3uezqYK6kSR
      r31t9bHaoZlp9L4m5kNZTp84R62pgNbmJ12AgqKyEQ44i0ygWDjI5NQsaI10drZfFzC8Oc2B
      m7PVZM5kMrz5yiu0bKvjytA0D+zp5DfvnuTInnaG5tJ88TOPr/repVIRBBGNICCrKiIgiCKy
      oqDVaG+6CnSnWKQAI32XmQ4lCFQ30tJUU1YAtp7MmUwGg16PqiqoggZRUClJChpBRdTqN52z
      3SITqKq6hulgmKKslk/P28KMDXUzOpfloQPbePmd8zidBkS9k1R4gk995vNoN9HLsUgBJicn
      SCby7Dx0/QpQma1BLpdDNDpwOHREpvrpHhjE43fhcebR5XJstgO1FilAQ0s7Gp2RQq4AqwjS
      LnPvYzKZCE2PodGYMATaeeiwSMDvRNU7MQlFNpkFdKOYYIVMuoDZYmR+fh6TTiQtiVT5PVvO
      HoatOQfYSvIuGgGy8SBnu/ooKXoeeeggFy9dwufxICkKbrtl06XNLlNmkQIszPI1eH1+BI2W
      hvo6jFqBVElTjgcosylZrACiSDQcoqqpAw3Q3r72GRbKlLmbWDSlyaTTuD1+TGucXa1MmbuV
      RQqQzeVRZYkN2ZIrU2YDWGQCVdc3U1XXtOnWesuUWYrrwmgEQSgPAGW2DJtsW6NMmZVRVoAy
      W5qyApTZ0pQVoMyWpqwAZbY0ZQUos6UpK0CZLc0tFWB+ZoKRien1aEuZ/7+9c/tt4gij+M+7
      tvdiO8SJC8FthfrQF3hqBVIiQSNoadX/vFJRLxLFIkCBOjYxu7bjve/aM9uHlJfaTmZxUhXi
      8zxHM2d2Z2d3Nd85a/znOHMBHPYd3MH5BFevscb/DWcaKrZ3tvGnH3bYwhprLINySmSSJERR
      hGEsL5WUUqJpizeV2WxGubx8vV0UVwiBpmlLTZxO4wKkabpU81nc08a9KvfkyMpiTavM10Xp
      fXebXcSYV+EqW+q+K4h533K5OI6xrPezPlqFm2UZmqadOkFn4UPTvAoXLpfec8kJHrx+wV/u
      mFpjk163x8Nv95UH4PZf8fJohF7SCCfH3Lqzx1ZNrSDfc3t0/nxD1agy6ne5ff9HrphqP7ZE
      4vHTLx0qpklDjrG/2OXG9rzL8DLNj397RBCltD9t0x/G7H59c67NQuSSXx/9TJDMaH+2g+N6
      7N75So37T79+mNK6dpW+M2F/77Yy9+CP35kEEddvfEnnyRMePvhmrs0yvc87j/ECn0brc/q9
      Q/bv7ir3+/pZB3fiUTbqDJ0R9x7cQ7Xi5PDlAYOxT7VcpXvk8MN395Vzwo4Hhxx0B5h2g/Dt
      K27tfc/Gv26tc/kN6vs+pmURRhk1q5hJqu/5mLZNGAZU7Tp1Q70YJwoDKqaF5we0mg1Gnrqp
      qchC0CtMvAm9bg/PDwqNO06n6CJFN2tIWaRUVJJOJSLyyKaC7U8WJ80v7TeZoomYGVXkNCnE
      DcIEoyx5/vQZYy9AFuD6YYRtaCSiTEUrdl7eCyIso0IYxTSaTYp8UXq+j23beH6IVS6RSvW+
      g8DHsCzcoy5vBg5hks21OZcdIJcC1x1i2jV0rYRtFwjZznMcx0HXNeI44+r1nYXW2oupOSPX
      Qa+azLKMrVZLPSonzzkeuQitymbdRJQqVBc4Pi3TnCURx5OAK80mQgjsAqEiSejjhfHJe7xe
      obWlbkWfJRHjSYBtW4hcY3ND/XVlNk0YjT3qG5uUkFim+o4nZxnu6GSXL+Wi0DWWYoo7HKOX
      SqRTyU77mvKTN5cCxx1iWSZJOqO1vaV+XD/PcV2HimFhGWX0ijVn61JoASRJgrlg0j5mXDbN
      l01voQWwxhofG9ZHIda41PgbBvc8iIwBcuIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Volume vs. Close (Google)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Volume vs. Close (Apple)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO3dZ3gc133v8e9sr1jsLnoHUUkQJFjBTlGkJEuiJMtFlrtjyzW+zrXj6xsn
      j8t1cq04sZ3nKk7cHRfJktUpsYiU2HsDCRaQBNF7W+wusH13Zu4LSrYcQhYlAloAez7Po4cU
      CQz/M5jfzjlnzpyRVFVVEYQUpUl2AYKQTCIAQkoTARBSmgiAkNJ0yS4glY32XmDnwTZsFh3r
      bttEIjiGThOiocnL0toiNAYrVrOezktnuNLnJa+slvJMM1FVi0UvMR6Ok24z4fWPE/b0MWbM
      JsemwZ7uQq8Vn203QhKjQMkz3HGayx43laYOWpQSBhp3YcwuJDAUoL+vE3NOOZ/+yD3s3rGL
      ZfV1tHSNMtzbTlwFi1ZBQSUUAZsNxgJazPooTc3tVC+/k81ra5K9ezOCuAIkWU/rZcb1IbLz
      NARUE1ajGYM2QG5JJaUV5WglDbluM01XewgEVVAVZEVCo5OIxhLotXri8RgqWiStnuraxZQX
      ZiV7t2YMcQVIIkVOEAyG0OqNmAwawpEYeoMBRZZBkZF0RowGHaoiEwqFMJgsIMdJqBoMOojE
      ZGK+fvYdbWDhqk0UZtqIRSIYLVZ0GinZuzcjiAAIKW1Se0qRSIREIjGZmxSEKTWpAZBlGXFB
      EWYSMVY2TfW0nGfPgWN4R/rZvXs/vlCMhtPniEe97Nqxi44BX7JLnBVEAKYpqzObQO9FXtn5
      Egajhv1HTnHw4D58vVe53DeG2WxMdomzggjANDXYfJphbQHFmRZkWcbizCUvw0UUExuWFLPn
      8NlklzgriABMU6rRQWmOnbIlt6LXWVhVW8SiZcvIyClibDzKpjWLkl3irDCpw6DBYBCDwYBe
      r5+sTQrClBJXACGliQAIKU0EYJpLREN0d/cQjskMDQzgD0aSXdKsIgIwnSlxDuw7QDg0zp69
      BxgeH2P//mPJrmpWEQGYzhJhwpKV4uJSTHIYIzHmVFYku6pZRQRgOtPbKcvU89KO7YQNFi60
      DhOLiibQZBLDoDOEqiig0SAmOU8u8UDMDCFpxMV6KoijKqQ0EQAhpYkm0DR26fh+EjnVVOY4
      iEVjaHVaxoa6ae0bp6puIRkWQ7JLnPFEAKYrNYo3oYf+bo5dPkpC0jPSdhVnQTZeJZcyRTx4
      NBlEAKYpX3crA94xCI4h67W4HEa0Wgu5Oel4+5Jd3ewhhkGnqUQ8BhodkhLn+OHDFNbU4baY
      0Os1xGUJo9GAVqz8cNNEAISUNulNoPHxcbRa7WRvVhCmxKQHwGY2MDIWxtvfzljCwKKFtRjU
      COcudVIzdw4Xz5/DmV9Ocbad/oFRcnOzCXoHaO0PUF2WR/OVVipq5tN95RzOoircNtNklyj8
      BX19fVj0MpfbhqlbuhiTFiLjXoKqCYc+xmhMj+rvZThqYH5FMXIsRNPlNipr5tHedI7c8hqC
      g20olhwKshzJ3p03NekBaDr0Ak836/n83bXsefEAC+sWcHLLU1wKxOgZ6uLsxU4+8mAFV07v
      4bE9rXzna5+nq7uTPS8fpLsiD48vzJWWNjqHR0kz9/PQx9412SUKE1IZaD7Fw7/dz8YSCbl0
      HYskUOUYz/3iEUyLH0Tf/Bi9JfezzB7j2N4j5H79y3Qc2sbF7jGazp9mMALWsx2EQh70ip6H
      PvcxdNO8mzLpN8Iee+ks/V2dMNZH7cb7sOg0jA7LzJ+fjUdO59baAp7d/iKPPfoCI70dBONQ
      WbOQ0jQjrV39VFSWM3S1mfTKucRGhie7POENKPEIv/79s4yP9FK0bCOhyztp7AnQdno3h6/0
      097ew/L65eg0OkqLnGTVLcEJBEPjVJSX0nP5EkVz5zPW04venY02GkBRkr1Xb0777W9/+9uT
      tbF4PM7t65eht6WDLFEzvwLP1QvYS93seqWFW+uraWy8SFlNPQ899CB6jY54LEh/81mahxLc
      sn4lRw6dYNMHP0zvgZcoW7uJ0lzXZJUn/AWSVs+aWzZh1GvQxb30jKrMz3NgmLOUOxaXY88s
      IMsmM46VEzu3IcsmtBaZbFcu+w6d5O4PfZTGV3aw9O570fQ0YSypZX5F4bSfvDflo0D+kWHM
      7kwMb3AkhkeGyczInKwShEkU9I4i2R1YdBMPavhGR7A63Oi10/00f2NTPhfIkfHGJz9w3cmv
      qqpYXjGJ2s4f4/mdB0koYDTIbH/uRTyBKL1XTtI5GuXU/u3sOXERgDRHGmdONxAJ+3n+yScY
      GAuxZ9uzXOoaSfJe3LhpNxludHSUlpYWYrFYsktJSQ2Hj3Du+DH8MTi97SXsbgO7Dp/iled+
      TctIiCNHDnLs5LXHMkd623n82W20NLyEIdPF7370M7riJvbu3J/kvbhx0y4AIyMj+Hw+/H5/
      sktJSUMJA7UlBob8EUBCo5HQGszUzZ8LcQ9aWy22aIAQkFVURVGWDXj1eQVVRfPqrzPFtAtA
      cXExGW43wwP9JOLxZJeTcjauWoiaUYtypZGSOzfhGQixYWkNOVX1zMnJZ/FcO9X1t9B44tpV
      YNXq1ZQvup1Q3yAf/sKnyVHHWXf7uiTvxY2bllMhFEXh6qUmjAYjxeXlSNLM7WTNVKFgEJ3B
      iKTKxGUwm4zIiTganQ4J8I16sDmcqIkYGr0RVAXtq383k0zL2aAajYaSsnKaz59jpL+fzLy8
      ZJeUYhSajj7HgVYri4sUzl5o4t5PfpXn//EfuOOb/0i5zsfPfvILjDkl2D1tGKqWk252sfn2
      lcku/C2blgEAMJpMFJeV036pCYvNhjUtLdklpRCJ6iV1nLxylRVrbsEflOg78SK9MQPPHd2C
      Tm4nLiewGRzU1q+k8VILg7oBOkcXU+KaWcu2T9sAANidTrLy8+loukDV4qXoDOIJqHeGhE5v
      wmY188TP/52Qq4ra5WupbGrmhwd+jEYbw9ylR+o7wnmq8XvDpA2M05/v4M75ZWTZMrEbbRh1
      Bgw6A1pJO22bsdOyD/B6iqLQ1ngGnU5Pcc18sTpCEiiqwq4r+/nenh+xomQJdXk11OXPxx/2
      MxQYYWh8mMHAMEOBYYYDI3iCHnRaHU6zA6fZgdviJNueRZYtk0xbxqv/ZeIwpaGR/vTzTEZI
      pjQAg70d2J0ZNJ46Tfm8Gs43nkFjyWTtyjqivgEamwdYtLCSs6fOUbdiKc0Np8mrXkiG/c9n
      gMajUZqPHyGzqISsktLJKlf4C3yDHWjSC2g5fZjHuw+ys3Ern173Ff76jvejxIKcONFIeUUJ
      585dxJVfjgMfuowyirMdqKqKPzLGUGCYkYCH4eAII4ERRoIjeEM+xiJjjEfGkNUEGVY3mdYM
      MmwZZFozcFvduK0uHOZ00kxp2I12dNqpa6hM2ZbHBjv44b/+gIf+5itYnFae2/oKd6woZ++F
      QdarKq+88AJRRy7hgTOMhrWc/M0VrEYjcuc4n37fpj/blt5opKimlo6zDVjS0rC53FNVtgBE
      g6P8/OFv4rz/Yzyy47s4RgzcVfo+zN0j+CMyLbu30hHRYi2oJMMYo723i+GeduLxs3zus59E
      K0mkmx2kmx1UZpb/cbsqKoqiEJfjxOU4oXgIT3AUT9CDJziCN+Slc7QTf8RLQo4jKzKgkGZy
      4La6cVlcuKwuXBY36RYn3aMd2Ex2Fhcuf9tXjykLQFp2CQvm5JPmzmWw+Ty33n4nQ5f2sXb9
      bUjAQP8w+lCcobifFfVrOLHtAOvXb6C5c+IZoDaXm6ziUrrONFC5Zh0648zqbM0kqsFKMNPA
      owcfYVPuPN7/4S8RajvLnoZmorLCYE8fRqeDsx1+XJ4Q6zbMZ4dvDN9ADzLwRo9DSUhoNVq0
      Gi0mvQm7yU62Pfu6r1NUhUg8QigWIhwP4Qt58Ya8+MKj9Pt7udR/AX/Yy3hkDLPezOLC5W97
      X6e0E1xUUc1oWwMnr/RSnzOM0ZBJQYaFzq5W1t+2mgNnurjjtg3s2rabz3z2kxze9iKr1941
      4bYkSSJzThmhUQ/dZxsoWVYv+gNToNvbx7d2fJ+u8X5++J4vcObAVUY9HiwaiYVLV6L6ulmw
      aRM7dx5izS1ZeFsLcKXnkcY+3ItWMBnDFBpJg8VgwWKwAFDoLLruaxJygmPtB7EabTf1b037
      TvB/l4hFubp3N66SUrIqq6ft6MJMIysKO5r28PDL/87t1ev5yobPYDfd3Mk1VbydjZwetrKu
      Ko0dR65w7x1rSYT9bHn5EPesq+XRJ19h3btu48Lhvbir6lm3uAolEeH5bbtYMa+Ql443c9dt
      69i9dcv0HgadiFZvoGjJMjqOHsKS7sSenZPskma80aCPH+75KQfbTvDNd32ZTVVr0Wqm53Pd
      aiLCkT07uZq2Bn3fCc71a7gXGPMOcbbxHBXKCKXzK9jT0M7a0lx2X7zM2sWVXGk4yqGz50gE
      +6lIz2DrC1vIqVsw/eYCvRlJkrBmZJJVVU3vyWPEw6FklzRjqarKme4LfPS3X6LHN8DvPvYI
      t1evn7YnP0DU20lz3zhXz5+iuXuQlqbLRBMJXLnFuKxGTDYdox4fBk0CQ0YpsmeAWCLOlear
      +Htb8ATAG46S5rATHvHMvCbQa1RFoevYIeRIhNJbNon+wFsUS8T4r6NP8pNDv+Pzaz/GX618
      AL12hixnE/XTMiJTnmOnpWeQ8b4Oqpavoqe1hcryQva8fISla1fRdOIA7orlDHY2sWbVatra
      W8hz2Tl8po01qxZz/MDemRsAgEQkQuvL20kvLiWrtk70B25Qu6ebb734fYYCo3zv3V9nQf7c
      GX3s5ISMRqd9w4l4spxA+wb3EmZcH+D1dCYTRavW0bZrOxZ3Bvb8wmSXNK3JisyOi3v57ks/
      Yl1FPf/vge/gtEz/pUsmEgt5+c/v/YqP/5+/JS3q4de/fApLYR3a4Yt4tdnMdYTZf76HT3/5
      q5jH2vn9My9TtXwFVw/uwjV3HXrPeTrjzpkdAACzO4OcRUvoPXyAOXfdi8FmT3ZJ09J4JMg/
      v/QfbL+4l+/c8xXumr8R7QxuNiqqBklSSQBaaxYbV9Xw3JFO9DYH6aNtdEctRENhorJC38Xz
      eMMKkdE29Nm30NWygzRpLhp1cOZ1gifiqpqHLTuH3v27URKJZJcz7ZzqaOS+//wU7SPdbPvr
      X7O5dtOMPflVVWHnc79lOGrEatJB1E93byeN7aPI8RBa3yAeyUFElSnK0dLa3I3NlYXTbqB9
      KIyv6yC29Bo09OFXDDO7D/B6iUiYjm1bsBcUkbV85Yxu006WSDzKrw7/gZ8ffJxPrv4An177
      QUz62XMHPTgewKT1cWnQRp4tisHmRJMIEsOERa/gHY+ieEcwFBWjjvmxpruIjnvRW9PRJEKE
      Fd2NN4ESYS/dIzL62CB+HJjCg7jKFxPouoQxp5SsNPNU7uub0pnM5K/fSMcLT2PJycFWVJqy
      IVBVlR5vP3//3L/SOdrDTz/yMMtKFs6642G121BlDZ0NLyAvWEP04m5kVyUrassY6TjHS4cv
      cNut6zl64AQr60rxhxLkuF9bhcSBmRt8JlhVEjScPsSlKx2cb+6m5/I5LrSc41JTCycO7KHf
      E5i6vXwLTO4Mcleto2/3TuJjqflQvaqqbD23m3t/9BBuWzovfvGXLC+dvSNkSiTIgrUbOPDc
      rzjYMsap/VuIywon92wnYc3H19LEmQvHeWHXMRz269eZvaEAhLx9dA/4GR4aREWDpKpgziHW
      dxLJUQiqit/vJxgMTvoOvhWSJOGomoe9ZA69L29DSbGlVXyhMb729MN847kf8M3Nf8MP3v8N
      HObZ/SSd1uyg7dQJ7v7I56h2qfT6rvUBF7/rIyw0XuWqrYYPbajH393BD37xu+u+/4b7AIoc
      oL0jgBTrx6c6SDPIaGNhJJsDkz2DHKd12rwfQI5G6HzmCSz5BWSv2zhrP/1eo6oqpzsv8L+f
      fhiH2c73H/gHSjMKZ/1+A0RGWvnVk7spq63DEu5HcVVSkWUmHPBw7Fwnm++/j+HWK2ilCBcG
      ZO7ZsOzPvn/WdIL/u8jwEJ1PPUrupruwV1TN2pNBVmR+vPcxfrT713xq7Qf4H5s+Mas6ulNt
      0hfH1Wq10+IFGTqrFYM9jf6dL2KvrEZntiS7pEnX5enjs7/5ew42n+SnH/8uDyzfPKVPT003
      8ZCXx59+kUyLzB+e3YY9I5vdzz3KqOKmOMfG3q3P8fKJS1gZ5ZktL+Nw23jy0SdIK64mw3bt
      Q2JmDgbfIHvlXBxza+nf+ixyJJLsciaNrChsaXiZzf/2KTJsLnZ85dcsn1OX7LLeceP+Udqu
      dOAuqCJbH+DS+ZPIaYs5c+xFQMuKTXdhZ5zOrnZ6+no4tWcLNcuXsePA+T9uY1YHQNJoyFq/
      CWSF4X27UGfCgvVvYjwc4Gt/+Ge+/tS/8PXNn+eRD38Lp9Uxa5t4f4krt4A0k46h/i7yKyoY
      GPEQ9ndhMLqIRsOc2red3HkrCI+OsbKugtGxBF0dnTidfxoYmLV9gNeLjgzT9dufkXXbXThq
      FyW7nLftbGcTX/zdt7GZrPzoo9+iPLsk2SUlmUJHWyf52ekca2iibtkyOi+exl1WhxQaoKu1
      HU/UwIpFZVy83M3S5Qs5e+wk8+tXYjNca6anRABUVSVw+SIDW56k6JNfwJg1sx6iGR4b5Yu/
      /RbHWxv5zIYH+V93fRq9bnod45lqVjeBXiNJEraqeTgWL6f/6ceQw+Fkl3RDovEo+y8e5a9+
      8lVePLOHz238EH93z+fEyT+JUuIK8BolHqfnV/+JMSubrPsemJYP0aiqSiweY2fDbn695wna
      Pb08uO69VOWXs656OS5berJLnFVSKgAA8VEPXT/+IRm33Y1j+apkl/NnxoJ+th7Zxu9eeRx0
      Wj546wd496p7SDPbUONBnnrmWSqqFnC+8QQRYyGfeXAT+7Y9T3fYRF2BgaMXB9mwro49e46y
      /PZ3U1fs5Jnf/wpd5nxyjV7O9Mvct6SQZ/c3cv8DHyQvXbyCNnUGjV+ld7nJvv9BBp/8Lca8
      fEwFxUmtR1VVBkf62bL/GbYeepGsrHy+/L4vsW7hOox6w59Gd3RmMvQh+sJmllQUkChYDmip
      X1nPwZ89hdFrwmXTcaQdanJ0tPaMUJtvoHc4gNK9l6Y0J/OBx477WFPh4kxjF3nrK5O569NC
      ygUAwDq3Bkf9GgYe+yWFf/N1tKZ3fiarosh09bbxwit/4PDZA8wpnce3PvNPLKiow6C/fnUd
      NRYgv7SMI+3txBIB7lqRTjgUoLlrhDynluyKanpaz2F3jWMtKGPwYiexpcXMqyrhQvMAaTro
      C0uUWA109HvJr5l9NwbfjpRrAr1GicXo+/kj6NOdZD34CaR36O61oii0tJ5ny/bfcfbSSZYt
      2cDdt32A8uI3W+NI5dTps1TOm09wzEtOtpsTx05TnJPGYMREebaJi+0eliyYw6kTZyivnENL
      3xhZ+hCkF+HSBmj3yMwvcXGmqZ2FdQsxzOC3O06WlA0AQGLMT/f3vonrjntxrL0VpvBmUjwe
      5VzDQXbufJzewW7WrL+X2zc9gNuVNWX/pvDmUrIJ9BpdmoOsDz/E0G9+gqGgEPOcyW8TB8d9
      nDu5l30vPUEclRUb7uOLq+/Ebne+5bu3geEWHvnJE9z1gU9SV5nHpWNb2dsu8f5VRfz46YPc
      X5fFrsYeVt33UerzVL73bz9jxR3vYejcLnoiLmrzJE61+PjsFz6D2zwzPqSmWkoHAMAydz6O
      dRsZ/s3PyP/qN9Hab37+vKqqBP0eTu3ZwumD29FarNx27yeoWbwWs+XtLzeoxGXcLhetnV3U
      VebhzMlFc7kdiysLC3HkhILdKnPieDOLN88hLzudjpYOYoqWoriXY/0aNubb6PCEcReIAIAI
      AJIkkX77PUTbrjL86C/I/uz/vKn7A97+Ls7sfJrGQy+RVT6Pez7+t5TVLn/DdWneClWjwWQ3
      Murpo6djGOerYbXa7WgkcOcWQnMXtXMz6BsNYDFa6PF6SVOCtMSd1GRJ7Gsf5VObxfDna1K6
      D/B6Cb+X3u/+A46Nd+K4bfNbap6oiszQ1SbObX+CjqYGChbWs/juD5JZXHHtvbmTRFVVYrEo
      Or1Ee+sgZeUFyLKKTqchkZDRaiRicRm97KfNq6Mo04JGq0dSZRRVQquViCcUDHpdSk6em4gI
      wGtUlXBzE4OP/DPZX/o7zFU1b/otcjTK4IVTXNr+JJ6+DgpXbqR607tJzyl4R+4yJyJjbN3y
      POXL7mT+HDcNB3bRl3BSYg0xZirAoU9QM2/ulNcxk6V8E+iPJAlzVQ2OO9/NyC/+ndx/+C66
      dNd1X6aqKkosSv+xfbRsf4rQmJfi29/Nyr/+Bman+x39ZI34+zh3tomAoZL5pQ5OHT/FsNZN
      NEOix3+OsrkrqK5W0WrEp/0bEQH4b9LvvI9Yy2VGfv4I2V/5xp/dH4j7fQzs3UbXzufBYmHO
      3Q+Qt3ojOmNy2tS+vk6qb3sv3RfOQLScsHUOTnmQd33wSxzd+igNZw4SV+Lcf/uapNQ3E4gm
      0AQSPi/93/ka9jW34rj3/cSG+hl5ZStDB3ahLywh56734ly4HG2SX9uaiI6zc9t2KurXY4yo
      jA1dol9xcdvycq52+/B3XyS9YjkVec6k1jmdiQC8gciViwx888tos/OIhMbRV84j454HsFTM
      RaMTF87ZQvwk34ChpAyNyYI8MkTBt/4VU+W8aTNy4u1t4vmDrczNhoYLbazdsJ59rxxg+R33
      Uz+3gK1/+CVeYyG5+LjUG2LNyjIOHWnifR9/iFy7+JG/3vSbED9NSAYjuf/yY/K//9NpdfKD
      SkwTZ7RtkPpb7mZxsYPBwSFGvB5GfUGI93Lq5AAGvZEN976PwjQ9586dYVl1IYcvdie7+Gln
      1i6L8pcMtV/gv37zGwJR2PnSds62DLB4Xinbn3uCZ3ceQBMd47Ff/hRt5Tp6zz7LhfFMKvOd
      jA9e5Qe/fJZAdyNPvHQSt8bHL3//HK6ieWQ53qmOsITNruXE4SsYYt20RNJxyeMY3JmMhhJU
      FGXS2tLFyEAfvuFmZGclTl2Ajr5RiuctpsglZoG+XkoGwOrMIu5pZVRXyOZVZQz6FeZWljKn
      vJKBnnZW3XIrI2MKaypM7DxwGntOBVWF6Wzb/gr+0AgRGaqlBIeDcTbWFtDRp6G6/J2c1Gag
      ZE4JZpsJg05H9dKVWHV6Vi6rQ05oqCrLpbJuKS6rDb1Wz6L6Fdgd2SysLECMiP65lGwQDrZf
      oGUohKo/wz+90MzmD32I3q5Otj3+M9TSNQQGOnDmFKOoRmx6ma7ODnor0nHazfSc7mdRRTEn
      vAq3z3XwypEmNt3/9l/U/PboycnLBDIpLLv2J67a+dd+YzFB+quPTeb9KZTz5opHKScy4ShQ
      0DdIa58HV1oW+QUZyNFxTh4/hatoHqqvHb+UjinQSWbtRnyXj2ErW0iR2z5jRoFURSEciWAw
      6IlEomh1erq7OiksyEdWJcwmIyCh1WpQlARKLEz7wBgVJfnE43E0EsQSKiaDlkg0htFkQjNt
      +gjCWzHhFaDtQgMXhsBlHSavYD0arZGcTDuXO9qQIgG0CQ99+AheaqLvwnkqMivJTTMhy/I7
      Xf/bImk0WCwWQmPjmNLsSIkoeQVFmC0mhvq6GPVqsRh1BEMRnO4MguMBSgpzAZVxnwetJR0T
      MYa9Ku40E0ODw2RmZyGeL5l5rgtA0DdIn2ec5rMXWLDuHiQgHg9jdhUTu3oUvd4AkoRO5yLS
      dwad+9oztfF4nMQMej1RdHyAb3z+//KVRx+h48X/4jxz+dz96xnobWHL9hPc/7472fXss2SW
      lRGMyOSX1XLPkmx+8qsXsGfaSE+M4YlrqClycKV1iLq7P8GaiuunTgjT23UBMFodLKpfjSu3
      mPzSaw+I6A0WRvuvUr92I5pAP2OkYdUl0CkyksmEzmjHYjExiffUptSZo6+QUV7PwtoyxvvO
      s+1oM5aya1OLc9OsrLr3AeaWZ3C5pp5VNdm8sOcIrd29sLqKAqeBc+2t6HLKKHDE6ewfYMWS
      hVzsGhIBmIGuC4BOb2K4/QoJo5PGxgvkbFqNRqtnXt3Sa1/gLGemP8Q3p7oOg9WMMzMDR1YV
      n/vkg5zqDnP5cgshX5i51XnE/O24iucjab1IqpbVixfQ3NKJXquwZNktZKl9XBrWsGHpMl7a
      fYr7/mptsndLeBsm7AS3nTvG+Y5hZFmhdulqKgozbmhjM6UTPCFVpn9ghJzc7AlfuKwqCQaH
      RsnJmenxF15vwk6wnJDRGfVYzJmU3+DJP9MNtTSwdfcpKurvptrax/E+I/fdsoh9z/yWXjWX
      8jyV9iEtFTkGKhevwW4QPd7ZYMKpELIcR6PR4+lrpbXH807XlBSZZUu4/44ljHR3su9gA2OB
      EQB6hzzE4+Mk4grBoRZOX+7G60vNF/DNRtcFQFVkMgrLsSpRCqoWUJo/+zt2B3c+xdGj+/nD
      7lbqqhz4xrycv9TK+HiQecvqkYZbyFu4iaL8bOT4EHt3H0t2ycIkua4PEPB0sePlExglPave
      uxm3Tjthm3giM7kP4Bvs4lJbL7klVRS6zXiDESQFlIiX4bCeuWX5eLw+1LCPmDGD/IzZ/fbF
      VDFhJ1hVZHram/FE9CyoKb/hKaMzOQBCanrDuUDOnEJyDOZZP186GvDwyL88zOaPfYaDe3aj
      c+Ri9PcQd5fxiffeyc7f/5Sm4Tjvuv89PPnTn/Dhz36ELY8/Te7C9XzoXauTXb5wkyY8v682
      HGD7niMcPHCCmf9Wrb9Mo7dQ4HZizazgnluWkmuDCx1+vKOjKIBOZ0ATHeNKh4/8vEy8g+1U
      Ll5LX3t7sksXJsGEAbClOfD2daFzOG64/T9T6Y1mjHotnvaTPPwfz2DOyKcs08zo6CjdXa04
      s7JRdEbmVpdgNWpJyyyi6eQ+MgsKk126MAkm7AO0NBzi+OVOXHlV3HHLUtEHEJGKfzoAAAYF
      SURBVGatCc/tRDyKzmTHbhNPDwmz24QBiEaiWO12LCbDrG8CCaltwgA4s3NRI+OMhyLMjPmd
      gvD2TBgAjVaHXqdDlmVxBRBmtesCEBjt43JrLyoSFpNRXAGEWe26AJjTMqkozsTjGSGuSuIK
      IMxq1wVAq9Mz7vVRWjWP8ZEhcQUQZrXrpkIERvvwq2asJguL1i+Y9VMhhNR23fltdeZSU1mC
      r7eZnftOzvqpEEJqu/4K4Onh+MkL2DIK2TBvnugDCLPadVMhXvvft7MYrJgKIcw01zWBJEl6
      9eRXGB4cFp1gYVabsI87MtBHIBwlGBZ3goXZbcIAKOFRnn/qSfoD4k6wMLtNPBsULaVl5cQD
      PnEFEGa1iZtAPQN09vcSHA+80/UIwjvqumHQRCyMIy+fWnsaUX06EhAZH+bw0QYMrgJMkT78
      kguTr5mc+vfgadiFs3Ytlbli/Xlh5rnuChD09rFjx06OnTpHNHZtuXOTPZO1q5YQj/rwBLVI
      nj6GtHoGr5yhu7ufcCRGIBAgEom84zsgCDfjugDYXPnceeftzCnMIha9NgoUDYywc88xysur
      kBLjBDUGTBor0YHLmPNKkQCTyYQhye/NFYS36rom0NhwFy+/chBXdhZZ7mt/rdWbqV0wH4NG
      y+rVq4lgwqBR0KgKkk6PRm9Ep9Oh0YiZQ8LMIl6ULaQ08ZEtpDQRACGliQAIKU0EQEhpIgBC
      ShMBEFKaCICQ0kQAhJQmAiCkNBEAIaWJAAgpTQRASGkiAEJKEwEQUpoIgJDSRACElCYCIKQ0
      EQAhpYkACClNBEBIaSIAQkoTARBSmgiAkNJEAISUJgIgpDQRACGlXbc26ERUJcHpPc+jzrmV
      YPMB/JITo6+J/FUfZeDoM2Sv2MyCIvdU1yoIk+4GrwASbqedeCJCVErDFh0j6MjF334Kf1BB
      Tcj4/X6CweDUVisIk+yGAiBptJiMRsCAFBvFK5mwaIzEhzqxF5UgSRIOhwOr1TrF5QrC5Lrh
      1aFVRUGVJFAVVFXiz14jLEloJEmsDi3MODfUBwCQNJprb4yUtFNXjSC8w8QokJDSRACElCYC
      IKQ0EQAhpYkACClNBEBIaSIAQkoTARBSmgiAkNJEAISUJgIgpDQRACGliQAIKU0EQEhpIgBC
      ShMBEFKaCICQ0kQAhJQmAiCkNBEAIaWJAAgpTQRASGkiAEJKu+F1gV4zOthNULViiPuw58wh
      4ulF68jEYTZMRX2CMKXeYgASHD/ViIqWeKiL7Oq76DuxhTm3foC60sypqVAQptBbbALJaLQm
      DIqMklZIrO8EqiVHtKOEGestXgGM5GUY8ZFNpkFGFxojozgLq9U4NdUJwhS74cVx/xJVVQmH
      w0QiEXQ6HTrdW+5aCEJSTNqZ+tqJf7MBUFUVWZZvOkSBQACbzXZT20gkEpMS5smoJR6P3/Sq
      25NRhyzLSJKERnNzDd/pckwmJQCSJGEwGP5Y0HRYHl2r1WIw3NzI1M1+/3SrZTLqmCzT5ZhM
      ShPoNTf3fgCFxhOHGRyDqhIXlzpHWLtmDVZjEpZjVxOcPXGMwaDEulULOXbkDGtuXUsyYh0Y
      7uDYmWayiuYQGGwjp3I5c3LT3/E6VCXBiUP7CWvSyLDK9PpVbrtlZVIGQKL+QQ6fPI8jr5y6
      UjuHznSxftWit7WtaTSAIzGvbjlWIpxp6abELtExMp6kWrTULFqOSQ0TCEYYHBpASVIlFmc+
      9YvK8PkTlBfn4PUl6ZhIWhbXr4LwOAXlVfj6eogn6aDobW5WLKvBPzLCmcYW/GMDb3tb0ygA
      KpcbT2AvrMRtkBgORLEak9WZVrh09hjOoircLje2pNUB0fEhjp0fYH5VFh0jMlWlOckpRJU5
      ffwIBVU1+IY95No1eKLJKUWO+Dl6upnqqkKCAR99vUPEEm8vjdNouEbFancTSoRZtHwF/UN+
      Cl1JeueYqmJNzyAYCyOrUL96dVKaPwCyqiM7w87YeAibSUswHMVmSkY1Ck5nJvFIEJfTSm7t
      SvLMSSgDkBWJ7Awn0bjE+k13MN8zgkH39j7L/z850Up/0I7ShAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Volume vs. Close (MSFT)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
      pLb2/wFl41Ot6PfB2wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='144' name='Sheet 15' width='174'>
      iVBORw0KGgoAAAANSUhEUgAAAK4AAACQCAYAAACRfFAzAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAABmUlEQVR4nO3SQQ0AIBDAMMC/58MDH7KkVbDH9szMgpjzOwBeGJck45JkXJKMS5JxSTIu
      ScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45Jk
      XJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYl
      ybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKM
      S5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgk
      GZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5Jx
      STIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuScYlybgkGZck
      45JkXJKMS5JxSTIuScYlybgkGZck45JkXJKMS5JxSTIuSRePYgUc7kJNEQAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      /Pw858+e3zhgo7Fq6p5i8Ri6plc/rFXZmottw4fueR7ZTLZayoaC1B+eajTzNrjGq3d9sUVd
      KhuHNwjjmq9HIhGUUvT29TZ5YTZ+iOpYWVCulMmkM+SrPZ5obHCqppHnNbRgNyn39V36xjtp
      HNTd+Kjmz64NI1O/d9Hser6OawaJjSSTyWaffYNnrda4CPzguI7rEmqcEBXUn2P9HNXj0+n0
      NYF0/WYENHTdwPOcjU+u6Qmaqkmjq/e6+/+03FxOmqZtCCAgYDsS7AcI2NYEAgjY1gQCCNjW
      BAII2NYEAgjY1gQCCNjWBAII2NYEAgjY1gQCCNjWBAII2NYEAgjY1gQCCNjWBAII2NYEAgjY
      1gQCCNjWBAII2NYEAgjY1gQCCNjWBAII2NYEAgjY1gQCCNjWBAII2NYEAgjY1gQCCNjWBAII
      2NYEAgjY1gQCCNjWBAII2NYEAgjY1gQCCNjWBAII2NYEAgjY1gQCCNjWBAII2NYEAgjY1gQC
      CNjWBAII2NYEAgjY1gQCCNjWBAII2NYEAgjY1gQCCNjWBAII2NYEAgjY1gQCCNjWBAII2NYE
      AgjY1vx/ujyjmh49y9YAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
