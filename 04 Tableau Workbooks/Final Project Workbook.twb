<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='APPLE (C##CS329E_JDO589)' inline='true' name='oracle.42124.746195902779' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JDO589' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jdo589'>
        <relation name='APPLE' table='[C##CS329E_JDO589].[APPLE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DATE_APPLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DATE_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>DATE_APPLE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPEN_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OPEN_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>OPEN_APPLE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGH_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HIGH_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>HIGH_APPLE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOW_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LOW_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>LOW_APPLE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLOSE_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CLOSE_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>CLOSE_APPLE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VOLUME_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VOLUME_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>VOLUME_APPLE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJ_CLOSE_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ADJ_CLOSE_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>ADJ_CLOSE_APPLE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Close Apple' datatype='real' name='[CLOSE_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Max Diff Volume Apple' datatype='real' name='[Calculation_2120504211639308]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([VOLUME_APPLE]) - LookUp(Max([VOLUME_APPLE]), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total  Market Share by Volume' datatype='real' name='[Calculation_4200430184219883]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([VOLUME_APPLE]) + sum([oracle.42124.744700034724].[VOLUME_MSFT]) + sum([oracle.42124.747247835650].[VOLUME_GOOGLE])' scope-isolation='false' />
      </column>
      <column caption='Google Percentage' datatype='real' name='[Calculation_4820430184707019]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([oracle.42124.747247835650].[VOLUME_GOOGLE])/[Calculation_4200430184219883]' scope-isolation='false' />
      </column>
      <column caption='Avg Diff Adj Close Apple' datatype='real' name='[Calculation_7280503180854780]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='avg([ADJ_CLOSE_APPLE]) - LOOKUP(zn(avg([ADJ_CLOSE_APPLE])), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='MSFT Percentage' datatype='real' name='[Calculation_9480430184603216]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([oracle.42124.744700034724].[VOLUME_MSFT])/[Calculation_4200430184219883]' scope-isolation='false' />
      </column>
      <column caption='Apple Percentage' datatype='real' name='[Calculation_9920430184514982]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([VOLUME_APPLE])/[Calculation_4200430184219883]' scope-isolation='false' />
      </column>
      <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
      </column>
      <column caption='High Apple' datatype='real' name='[HIGH_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Low Apple' datatype='real' name='[LOW_APPLE]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Apple' datatype='real' name='[OPEN_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Volume Apple' datatype='real' name='[VOLUME_APPLE]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[pcto:avg:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Sum' name='[sum:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Sum' name='[sum:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4820430184707019]' derivation='User' name='[usr:Calculation_4820430184707019:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9480430184603216]' derivation='User' name='[usr:Calculation_9480430184603216:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_9920430184514982]' derivation='User' name='[usr:Calculation_9920430184514982:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\asif\Documents\My Tableau Repository\Datasources\APPLE (C##CS329E_JDO589).tde' schema='Extract' tablename='Extract' update-time='04/30/2015 10:55:11 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3854' timestamp-start='2015-04-30 22:55:11.983' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ADJ_CLOSE_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ADJ_CLOSE_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADJ_CLOSE_APPLE</remote-alias>
              <ordinal>0</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3475</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>0.88400000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>133.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CLOSE_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CLOSE_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CLOSE_APPLE</remote-alias>
              <ordinal>1</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3460</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>13.119999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>702.10000000000002</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATE_APPLE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DATE_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE_APPLE</remote-alias>
              <ordinal>2</ordinal>
              <family>APPLE</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3854</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2000-01-03&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2015-04-29&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HIGH_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HIGH_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HIGH_APPLE</remote-alias>
              <ordinal>3</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3362</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>13.19</statistic>
                <statistic aggregation='Max' datatype='real'>705.07000000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOW_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LOW_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOW_APPLE</remote-alias>
              <ordinal>4</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3376</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>12.720000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>699.57000000000005</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OPEN_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OPEN_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OPEN_APPLE</remote-alias>
              <ordinal>6</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3449</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>12.99</statistic>
                <statistic aggregation='Max' datatype='real'>702.40999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VOLUME_APPLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[VOLUME_APPLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VOLUME_APPLE</remote-alias>
              <ordinal>7</ordinal>
              <family>APPLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3830</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>9835000.0</statistic>
                <statistic aggregation='Max' datatype='real'>1855410200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[oracle.42124.746195902779].[sum:ADJ_CLOSE_APPLE:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[pcto:avg:ADJ_CLOSE_APPLE:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[usr:Calculation_9920430184514982:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[oracle.42124.746195902779].[sum:ADJ_CLOSE_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[oracle.42124.746195902779].[usr:Calculation_9480430184603216:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[oracle.42124.747247835650].[sum:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.744700034724].[pcto:avg:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.746195902779].[usr:Calculation_4820430184707019:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.747247835650].[sum:ADJ_CLOSE_GOOGLE:ok]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='oracle.42124.744700034724'>
        <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
        </column>
        <column caption='Volume Msft' datatype='real' name='[VOLUME_MSFT]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='oracle.42124.747247835650'>
        <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
        </column>
        <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
        <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Sum' name='[sum:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
        <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Sum' name='[sum:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='GOOGLE (C##CS329E_AC52722)' inline='true' name='oracle.42124.747247835650' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_AC52722' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_ac52722'>
        <relation name='GOOGLE' table='[C##CS329E_AC52722].[GOOGLE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DATE_GOOGLE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DATE_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>DATE_GOOGLE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPEN_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OPEN_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>OPEN_GOOGLE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGH_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HIGH_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>HIGH_GOOGLE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOW_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LOW_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>LOW_GOOGLE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLOSE_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CLOSE_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>CLOSE_GOOGLE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VOLUME_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VOLUME_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>VOLUME_GOOGLE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJ_CLOSE_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ADJ_CLOSE_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>ADJ_CLOSE_GOOGLE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Close Google' datatype='real' name='[CLOSE_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Diff Adj Close Google' datatype='real' name='[Calculation_2490503174524062]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='avg([ADJ_CLOSE_GOOGLE]) - LOOKUP(zn(avg([ADJ_CLOSE_GOOGLE])), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='AGVolDiff' datatype='real' name='[Calculation_2980430183535123]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([oracle.42124.746195902779].[VOLUME_APPLE]) - SUM([VOLUME_GOOGLE])' scope-isolation='false' />
      </column>
      <column caption='Max Diff Volume Google' datatype='real' name='[Calculation_3350503195819106]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([VOLUME_GOOGLE]) - LookUp(Max([VOLUME_GOOGLE]), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
      </column>
      <column caption='High Google' datatype='real' name='[HIGH_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Low Google' datatype='real' name='[LOW_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Google' datatype='real' name='[OPEN_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CLOSE_GOOGLE]' derivation='Avg' name='[avg:CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[CLOSE_GOOGLE]' derivation='Avg' name='[avg:CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Max' name='[max:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VOLUME_GOOGLE]' derivation='Max' name='[max:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VOLUME_GOOGLE]' derivation='Avg' name='[pcdf:avg:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Sum' name='[sum:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CLOSE_GOOGLE]' derivation='Sum' name='[sum:CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VOLUME_GOOGLE]' derivation='Sum' name='[sum:VOLUME_GOOGLE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_2980430183535123]' derivation='User' name='[usr:Calculation_2980430183535123:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\asif\Documents\My Tableau Repository\Datasources\GOOGLE (C##CS329E_AC52722).tde' schema='Extract' tablename='Extract' update-time='04/30/2015 10:56:33 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='2692' timestamp-start='2015-04-30 22:56:33.270' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ADJ_CLOSE_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ADJ_CLOSE_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADJ_CLOSE_GOOGLE</remote-alias>
              <ordinal>0</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2631</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>50.055100000000003</statistic>
                <statistic aggregation='Max' datatype='real'>610.69569999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CLOSE_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CLOSE_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CLOSE_GOOGLE</remote-alias>
              <ordinal>1</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2617</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>100.01000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>1220.1699000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATE_GOOGLE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DATE_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE_GOOGLE</remote-alias>
              <ordinal>2</ordinal>
              <family>GOOGLE</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2692</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2004-08-19&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2015-04-29&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HIGH_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HIGH_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HIGH_GOOGLE</remote-alias>
              <ordinal>3</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2551</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>101.73999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>1228.8800000000001</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOW_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LOW_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOW_GOOGLE</remote-alias>
              <ordinal>4</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2587</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>95.959999999999994</statistic>
                <statistic aggregation='Max' datatype='real'>1218.5999999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OPEN_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OPEN_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OPEN_GOOGLE</remote-alias>
              <ordinal>6</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2577</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>99.189999999999998</statistic>
                <statistic aggregation='Max' datatype='real'>1226.8000999999999</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VOLUME_GOOGLE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[VOLUME_GOOGLE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VOLUME_GOOGLE</remote-alias>
              <ordinal>7</ordinal>
              <family>GOOGLE</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2661</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>737700.0</statistic>
                <statistic aggregation='Max' datatype='real'>82151100.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[oracle.42124.746195902779].[sum:ADJ_CLOSE_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[max:VOLUME_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[sum:VOLUME_APPLE:ok]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.746195902779].[sum:VOLUME_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.747247835650]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.747247835650].[max:VOLUME_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42124.747247835650].[pcdf:avg:VOLUME_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42124.746195902779].[usr:Calculation_2120504211639308:qk:2]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42124.747247835650].[usr:Calculation_2980430183535123:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[oracle.42124.747247835650].[sum:CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:CLOSE_GOOGLE:ok]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[oracle.42124.747247835650].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[oracle.42124.747247835650].[avg:CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.747247835650].[max:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.747247835650].[sum:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42124.747247835650].[sum:VOLUME_GOOGLE:ok]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='oracle.42124.744700034724'>
        <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='oracle.42124.746195902779'>
        <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
        </column>
        <column caption='Max Diff Volume Apple' datatype='real' name='[Calculation_2120504211639308]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='Max([VOLUME_APPLE]) - LookUp(Max([VOLUME_APPLE]), -1)' scope-isolation='false'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column caption='Volume Apple' datatype='real' name='[VOLUME_APPLE]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[VOLUME_APPLE]' derivation='Max' name='[max:VOLUME_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Sum' name='[sum:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[VOLUME_APPLE]' derivation='Sum' name='[sum:VOLUME_APPLE:ok]' pivot='key' type='ordinal' />
        <column-instance column='[VOLUME_APPLE]' derivation='Sum' name='[sum:VOLUME_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_2120504211639308]' derivation='User' name='[usr:Calculation_2120504211639308:qk:2]' pivot='key' type='quantitative'>
          <table-calc ordering-field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' ordering-type='Field' />
        </column-instance>
      </datasource-dependencies>
      <datasource-dependencies datasource='oracle.42124.747247835650'>
        <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
        </column>
        <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='MSFT (C##CS329E_JC58247)' inline='true' name='oracle.42124.744700034724' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JC58247' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jc58247'>
        <relation name='MSFT' table='[C##CS329E_JC58247].[MSFT]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>DATE_MSFT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DATE_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>DATE_MSFT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>4000</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OPEN_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OPEN_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>OPEN_MSFT</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGH_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HIGH_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>HIGH_MSFT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOW_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LOW_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>LOW_MSFT</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLOSE_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CLOSE_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>CLOSE_MSFT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VOLUME_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VOLUME_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>VOLUME_MSFT</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJ_CLOSE_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ADJ_CLOSE_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>ADJ_CLOSE_MSFT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Close Msft' datatype='real' name='[CLOSE_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Diff Adj Close MSFT' datatype='real' name='[Calculation_8700503181518039]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='avg([ADJ_CLOSE_MSFT]) - LOOKUP(zn(avg([ADJ_CLOSE_MSFT])), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
      </column>
      <column caption='High Msft' datatype='real' name='[HIGH_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Low Msft' datatype='real' name='[LOW_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Max Diff Volume MSFT' datatype='real' name='[Max Diff Volume Apple (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Max([VOLUME_MSFT]) - LookUp(Max([VOLUME_MSFT]), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Msft' datatype='real' name='[OPEN_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Volume Msft' datatype='real' name='[VOLUME_MSFT]' role='measure' type='quantitative'>
      </column>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\asif\Documents\My Tableau Repository\Datasources\MSFT (C##CS329E_JC58247).tde' schema='Extract' tablename='Extract' update-time='04/30/2015 10:53:38 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='3854' timestamp-start='2015-04-30 22:53:38.521' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ADJ_CLOSE_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ADJ_CLOSE_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADJ_CLOSE_MSFT</remote-alias>
              <ordinal>0</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3396</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>12.9749</statistic>
                <statistic aggregation='Max' datatype='real'>49.159999999999997</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>CLOSE_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[CLOSE_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>CLOSE_MSFT</remote-alias>
              <ordinal>1</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2084</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.15</statistic>
                <statistic aggregation='Max' datatype='real'>116.5625</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATE_MSFT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DATE_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DATE_MSFT</remote-alias>
              <ordinal>2</ordinal>
              <family>MSFT</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3854</approx-count>
              <scale>1</scale>
              <width>4000</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;2000-01-03&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;2015-04-29&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>16000</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (unique)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HIGH_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[HIGH_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HIGH_MSFT</remote-alias>
              <ordinal>3</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2017</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.619999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>118.625</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LOW_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LOW_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LOW_MSFT</remote-alias>
              <ordinal>4</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2049</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>14.869999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>112.25</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>5</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OPEN_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OPEN_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>OPEN_MSFT</remote-alias>
              <ordinal>6</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2075</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>15.199999999999999</statistic>
                <statistic aggregation='Max' datatype='real'>117.375</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VOLUME_MSFT</remote-name>
              <remote-type>5</remote-type>
              <local-name>[VOLUME_MSFT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VOLUME_MSFT</remote-alias>
              <ordinal>7</ordinal>
              <family>MSFT</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3843</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>11083900.0</statistic>
                <statistic aggregation='Max' datatype='real'>591052200.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='oracle.42124.744700034724'>
      <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[DATE_MSFT]' derivation='None' name='[none:DATE_MSFT:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.42124.746195902779'>
      <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[DATE_APPLE]' derivation='None' name='[none:DATE_APPLE:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.42124.747247835650'>
      <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[DATE_GOOGLE]' derivation='None' name='[none:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='oracle.42124.746195902779' target='oracle.42124.744700034724'>
      <column-mapping>
        <map key='[oracle.42124.746195902779].[none:DATE_APPLE:ok]' value='[oracle.42124.744700034724].[none:DATE_MSFT:ok]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='oracle.42124.747247835650' target='oracle.42124.744700034724'>
      <column-mapping>
        <map key='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]' value='[oracle.42124.744700034724].[none:DATE_MSFT:ok]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='oracle.42124.746195902779' target='oracle.42124.747247835650'>
      <column-mapping>
        <map key='[oracle.42124.746195902779].[none:DATE_APPLE:ok]' value='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Adj Close Apple'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close Apple' datatype='real' name='[Calculation_7280503180854780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_APPLE]) - LOOKUP(zn(avg([ADJ_CLOSE_APPLE])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7280503180854780]' derivation='User' name='[usr:Calculation_7280503180854780:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[oracle.42124.747247835650].[qr:DATE_GOOGLE:ok]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2010' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:ok:2]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:ok:2]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]' />
              <text column='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:ok:2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Adj Close Google'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close Google' datatype='real' name='[Calculation_2490503174524062]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_GOOGLE]) - LOOKUP(zn(avg([ADJ_CLOSE_GOOGLE])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2490503174524062]' derivation='User' name='[usr:Calculation_2490503174524062:ok:7]' pivot='key' type='ordinal'>
              <table-calc level-address='[oracle.42124.747247835650].[qr:DATE_GOOGLE:ok]' ordering-type='Field'>
                <order field='[oracle.42124.747247835650].[qr:DATE_GOOGLE:ok]' />
                <order field='[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]' />
              </table-calc>
            </column-instance>
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2010' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]' value='n#,##0.00;-#,##0.00' />
            <format attr='width' field='[oracle.42124.747247835650].[qr:DATE_GOOGLE:ok]' value='80' />
            <format attr='text-format' field='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:ok:7]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:ok:7]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]' />
              <text column='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:ok:7]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Adj Close MSFT'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close MSFT' datatype='real' name='[Calculation_8700503181518039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_MSFT]) - LOOKUP(zn(avg([ADJ_CLOSE_MSFT])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_8700503181518039]' derivation='User' name='[usr:Calculation_8700503181518039:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2010' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='6'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:qk]' />
              <text column='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_APPLE]' derivation='Year' name='[yr:DATE_APPLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.746195902779].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:ok]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[oracle.42124.746195902779].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]&quot;</bucket>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[oracle.42124.746195902779].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.746195902779].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[Multiple Values]</rows>
        <cols>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Sum' name='[sum:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.746195902779].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[sum:ADJ_CLOSE_APPLE:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:ok]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.746195902779].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.746195902779].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[Multiple Values]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.747247835650].[DATE_GOOGLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_APPLE]' derivation='Year' name='[yr:DATE_APPLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.746195902779].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:ok]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[oracle.42124.746195902779].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]&quot;</bucket>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]&quot;</bucket>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[oracle.42124.746195902779].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.746195902779].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[Multiple Values]</rows>
        <cols>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.747247835650].[DATE_GOOGLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Volume Apple' datatype='real' name='[VOLUME_APPLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[VOLUME_APPLE]' derivation='Sum' name='[sum:VOLUME_APPLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Month' name='[mn:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VOLUME_GOOGLE]' derivation='Sum' name='[sum:VOLUME_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[sum:VOLUME_APPLE:ok]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.747247835650].[sum:VOLUME_GOOGLE:ok]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42124.747247835650].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.747247835650].[Multiple Values]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[mn:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='AGVolDiff' datatype='real' name='[Calculation_2980430183535123]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([oracle.42124.746195902779].[VOLUME_APPLE]) - SUM([VOLUME_GOOGLE])' scope-isolation='false' />
            </column>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Month-Trunc' name='[tmn:DATE_GOOGLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2980430183535123]' derivation='User' name='[usr:Calculation_2980430183535123:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.747247835650].[usr:Calculation_2980430183535123:qk]&quot;' user:op='manual' />
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42124.747247835650].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.747247835650].[Multiple Values]</rows>
        <cols>[oracle.42124.747247835650].[tmn:DATE_GOOGLE:qk]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Google Percentage' datatype='real' name='[Calculation_4820430184707019]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([oracle.42124.747247835650].[VOLUME_GOOGLE])/[Calculation_4200430184219883]' scope-isolation='false' />
            </column>
            <column caption='MSFT Percentage' datatype='real' name='[Calculation_9480430184603216]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([oracle.42124.744700034724].[VOLUME_MSFT])/[Calculation_4200430184219883]' scope-isolation='false' />
            </column>
            <column caption='Apple Percentage' datatype='real' name='[Calculation_9920430184514982]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([VOLUME_APPLE])/[Calculation_4200430184219883]' scope-isolation='false' />
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_APPLE]' derivation='Month-Trunc' name='[tmn:DATE_APPLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4820430184707019]' derivation='User' name='[usr:Calculation_4820430184707019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9480430184603216]' derivation='User' name='[usr:Calculation_9480430184603216:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9920430184514982]' derivation='User' name='[usr:Calculation_9920430184514982:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.746195902779].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[usr:Calculation_9920430184514982:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[usr:Calculation_4820430184707019:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[usr:Calculation_9480430184603216:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[oracle.42124.746195902779].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:ok]&quot;</bucket>
              <bucket>&quot;[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:ok]&quot;</bucket>
              <bucket>&quot;[oracle.42124.744700034724].[sum:ADJ_CLOSE_MSFT:ok]&quot;</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[oracle.42124.746195902779].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.746195902779].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[Multiple Values]</rows>
        <cols>[oracle.42124.746195902779].[tmn:DATE_APPLE:qk]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.747247835650].[DATE_GOOGLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources>
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Google Percentage' datatype='real' name='[Calculation_4820430184707019]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([oracle.42124.747247835650].[VOLUME_GOOGLE])/[Calculation_4200430184219883]' scope-isolation='false' />
            </column>
            <column caption='Apple Percentage' datatype='real' name='[Calculation_9920430184514982]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([VOLUME_APPLE])/[Calculation_4200430184219883]' scope-isolation='false' />
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[Calculation_4820430184707019]' derivation='User' name='[usr:Calculation_4820430184707019:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_9920430184514982]' derivation='User' name='[usr:Calculation_9920430184514982:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE_APPLE]' derivation='Year' name='[yr:DATE_APPLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.746195902779].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[usr:Calculation_9920430184514982:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42124.746195902779].[usr:Calculation_4820430184707019:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.746195902779].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <lod column='[oracle.42124.746195902779].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[Multiple Values]</rows>
        <cols>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.747247835650].[DATE_GOOGLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Volume vs. Close (Apple)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Max Diff Volume Apple' datatype='real' name='[Calculation_2120504211639308]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([VOLUME_APPLE]) - LookUp(Max([VOLUME_APPLE]), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Avg Diff Adj Close Apple' datatype='real' name='[Calculation_7280503180854780]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_APPLE]) - LOOKUP(zn(avg([ADJ_CLOSE_APPLE])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Volume Apple' datatype='real' name='[VOLUME_APPLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOLUME_APPLE]' derivation='Max' name='[max:VOLUME_APPLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2120504211639308]' derivation='User' name='[usr:Calculation_2120504211639308:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_7280503180854780]' derivation='User' name='[usr:Calculation_7280503180854780:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Month' name='[mn:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='None' name='[none:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VOLUME_GOOGLE]' derivation='Avg' name='[pcdf:avg:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-20#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-21#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-22#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-23#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-24#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' value='95' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='126.91' field='[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]' max='130.28' min='127.59999999999999' palette='tableau-red-green' type='interpolated' />
            <encoding attr='color' field='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:qk]' palette='tableau-red-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:qk]' />
              <text column='[oracle.42124.746195902779].[max:VOLUME_APPLE:qk]' />
              <text column='[oracle.42124.746195902779].[usr:Calculation_2120504211639308:qk:2]' />
              <text column='[oracle.42124.747247835650].[pcdf:avg:VOLUME_GOOGLE:qk]' />
              <text column='[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.746195902779].[max:VOLUME_APPLE:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[qr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[mn:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[dy:DATE_GOOGLE:ok])))</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Volume vs. Close (Google)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close Google' datatype='real' name='[Calculation_2490503174524062]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_GOOGLE]) - LOOKUP(zn(avg([ADJ_CLOSE_GOOGLE])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Max Diff Volume Google' datatype='real' name='[Calculation_3350503195819106]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([VOLUME_GOOGLE]) - LookUp(Max([VOLUME_GOOGLE]), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VOLUME_GOOGLE]' derivation='Max' name='[max:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE_GOOGLE]' derivation='Month' name='[mn:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='None' name='[none:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[VOLUME_GOOGLE]' derivation='Avg' name='[pcdf:avg:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2490503174524062]' derivation='User' name='[usr:Calculation_2490503174524062:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_3350503195819106]' derivation='User' name='[usr:Calculation_3350503195819106:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-20#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-21#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-22#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-23#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-24#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' value='95' />
            <format attr='text-format' field='[oracle.42124.747247835650].[usr:Calculation_3350503195819106:qk:2]' value='' />
            <format attr='text-format' field='[oracle.42124.747247835650].[pcdf:avg:VOLUME_GOOGLE:qk]' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]' palette='tableau-red-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:qk]' />
              <text column='[oracle.42124.747247835650].[max:VOLUME_GOOGLE:qk]' />
              <text column='[oracle.42124.747247835650].[usr:Calculation_3350503195819106:qk:2]' />
              <text column='[oracle.42124.747247835650].[pcdf:avg:VOLUME_GOOGLE:qk]' />
              <text column='[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.747247835650].[max:VOLUME_GOOGLE:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[qr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[mn:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[dy:DATE_GOOGLE:ok])))</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Volume vs. Close (MSFT)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42124.747247835650' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42124.744700034724' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42124.746195902779' />
          </datasources>
          <datasource-dependencies datasource='oracle.42124.744700034724'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close MSFT' datatype='real' name='[Calculation_8700503181518039]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_MSFT]) - LOOKUP(zn(avg([ADJ_CLOSE_MSFT])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='Count' caption='Date Msft' datatype='date' datatype-customized='true' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column caption='Max Diff Volume MSFT' datatype='real' name='[Max Diff Volume Apple (copy)]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Max([VOLUME_MSFT]) - LookUp(Max([VOLUME_MSFT]), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Volume Msft' datatype='real' name='[VOLUME_MSFT]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOLUME_MSFT]' derivation='Avg' name='[avg:VOLUME_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOLUME_MSFT]' derivation='Max' name='[max:VOLUME_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[VOLUME_MSFT]' derivation='Avg' name='[pcdf:avg:VOLUME_MSFT:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_8700503181518039]' derivation='User' name='[usr:Calculation_8700503181518039:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Max Diff Volume Apple (copy)]' derivation='User' name='[usr:Max Diff Volume Apple (copy):qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.746195902779'>
            <column caption='Date Apple' datatype='date' datatype-customized='true' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42124.747247835650'>
            <column caption='Date Google' datatype='date' datatype-customized='true' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Day' name='[dy:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Month' name='[mn:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='None' name='[none:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-20#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-21#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-22#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-23#' />
              <groupfilter function='member' level='[none:DATE_GOOGLE:ok]' member='#2015-04-24#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[oracle.42124.747247835650].[dy:DATE_GOOGLE:ok]' value='95' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' max='4.529999999999994' min='-0.26999999999999602' palette='tableau-red-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' />
              <text column='[oracle.42124.744700034724].[max:VOLUME_MSFT:qk]' />
              <text column='[oracle.42124.744700034724].[usr:Max Diff Volume Apple (copy):qk]' />
              <text column='[oracle.42124.744700034724].[pcdf:avg:VOLUME_MSFT:qk]' />
              <text column='[oracle.42124.744700034724].[avg:ADJ_CLOSE_MSFT:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42124.744700034724].[avg:VOLUME_MSFT:qk]</rows>
        <cols>([oracle.42124.747247835650].[yr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[qr:DATE_GOOGLE:ok] / ([oracle.42124.747247835650].[mn:DATE_GOOGLE:ok] / [oracle.42124.747247835650].[dy:DATE_GOOGLE:ok])))</cols>
        <join-lod-include-overrides>
          <column>[oracle.42124.744700034724].[DATE_MSFT]</column>
          <column>[oracle.42124.746195902779].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='30750' id='1' name='Adj Close Google' show-title='true' w='100000' x='0' y='0'>
          </zone>
          <zone h='31000' id='3' name='Adj Close Apple' show-title='true' w='100000' x='0' y='30750'>
          </zone>
          <zone h='38250' id='4' name='Adj Close MSFT' show-title='true' w='100000' x='0' y='61750'>
          </zone>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style>
      </style>
      <size maxheight='600' maxwidth='1200' minheight='600' minwidth='1200' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='86667' x='0' y='0'>
              <zone h='100000' id='1' name='Volume vs. Close (Google)' show-title='true' w='31777' x='0' y='0'>
              </zone>
              <zone h='100000' id='7' name='Volume vs. Close (Apple)' show-title='true' w='27858' x='31777' y='0'>
              </zone>
              <zone h='100000' id='9' name='Volume vs. Close (MSFT)' show-title='true' w='27032' x='59635' y='0'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='13333' x='86667' y='0'>
              <zone h='10334' id='6' name='Volume vs. Close (Google)' pane-specification-id='3' param='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:qk]' type='color' w='13333' x='86667' y='0'>
              </zone>
              <zone h='9667' id='8' name='Volume vs. Close (Apple)' pane-specification-id='3' param='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:qk]' type='color' w='13333' x='86667' y='10334'>
              </zone>
              <zone h='9667' id='10' name='Volume vs. Close (MSFT)' pane-specification-id='3' param='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' type='color' w='13333' x='86667' y='20001'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[oracle.42124.746195902779].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42124.746195902779].[:Measure Names]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[:Measure Names]</field>
          <field>[oracle.42124.746195902779].[none:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[:Measure Names]</field>
          <field>[oracle.42124.746195902779].[none:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[oracle.42124.746195902779].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42124.746195902779].[:Measure Names]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[:Measure Names]</field>
          <field>[oracle.42124.746195902779].[none:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42124.746195902779].[:Measure Names]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42124.746195902779].[:Measure Names]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[:Measure Names]</field>
          <field>[oracle.42124.746195902779].[none:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='3' param='[oracle.42124.746195902779].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42124.746195902779].[:Measure Names]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[:Measure Names]</field>
          <field>[oracle.42124.746195902779].[none:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[oracle.42124.747247835650].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[oracle.42124.747247835650].[:Measure Names]' show-domain='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='0' param='[oracle.42124.747247835650].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
      <viewpoint>
      </viewpoint>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Adj Close Google'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[pcto:sum:VOLUME_APPLE:qk]</field>
          <field>[oracle.42124.746195902779].[qr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[usr:Calculation_9920430184514982:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Adj Close Apple'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[pcto:sum:VOLUME_APPLE:qk]</field>
          <field>[oracle.42124.746195902779].[qr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[usr:Calculation_9920430184514982:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Adj Close MSFT'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[pcto:sum:VOLUME_APPLE:qk]</field>
          <field>[oracle.42124.746195902779].[qr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.746195902779].[usr:Calculation_9920430184514982:ok]</field>
          <field>[oracle.42124.746195902779].[yr:DATE_APPLE:ok]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
      <zones>
        <zone name='Adj Close Google'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Adj Close Apple'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Adj Close MSFT'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Volume vs. Close (Google)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.747247835650].[avg:ADJ_CLOSE_GOOGLE:qk]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Volume vs. Close (Apple)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Volume vs. Close (MSFT)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[oracle.42124.746195902779].[avg:ADJ_CLOSE_APPLE:qk]</field>
          <field>[oracle.42124.747247835650].[:Measure Names]</field>
          <field>[oracle.42124.747247835650].[none:DATE_GOOGLE:ok]</field>
          <field>[oracle.42124.747247835650].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 2'>
      <zones>
        <zone name='Volume vs. Close (Google)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Volume vs. Close (Apple)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Volume vs. Close (MSFT)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Volume vs. Close (Google)' pane-specification-id='3' param='[oracle.42124.747247835650].[usr:Calculation_2490503174524062:qk]' type='color' />
        <zone name='Volume vs. Close (Apple)' pane-specification-id='3' param='[oracle.42124.746195902779].[usr:Calculation_7280503180854780:qk]' type='color' />
        <zone name='Volume vs. Close (MSFT)' pane-specification-id='3' param='[oracle.42124.744700034724].[usr:Calculation_8700503181518039:qk]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAXrUlEQVR4nO3dW2wcV57f8W919b2b3ezmnZQoSpQoUSIlW7Jk2VLWnpmdncGO14sZYBe7
      SRDMy2IRBHnJe4BBgDwMkiCLIMgGyEP2aZKZbGawWduy5btHkm1JlmyLpHiRSJEU732/X6rq
      5IESZY1EWuwhKVL1/wCNqi4WDw+7z+/UpatOa0ophRA25XjaFRDiaZIACFuTAAhbkwAIW5MA
      iM1TyfK/fvEL3n37TW5OxcgkE2Tyed5/+zy5Qo5EOosCqtlFfvPGBxiWSTqRIFsokc9mSKay
      fHnlAol0jngyw2acrdHkLJDYNOU0v37vKj/54XOce+cm9Z4kN2PgzCbwuHLcjVf5y7/615i5
      HPN3BqjvbOPz818SanBRyGcJubxYkQCFmSmmlrL85Kf/in0Nng2tonNDSxPid2Ris3x2wSDc
      2Mjw4C08dS34Q150t48X9nUQ8uqUErcpVUrcvjWGaVRB82BZJqZSOAFvXZQXug4RDbg2vH6y
      BRCbR1nk83ksHAT8PkrFIg6nC01ZaA6oGuD3e1FmFYfDSam0wIULU5x9pZ+Ln3zK6Zdfxu1y
      AIpyxSLg96FpG1tFCYCwtQ3bBSoWi5TLZbSNjqgQm2jDAmCaJsFgEKdTDivEziGnQYWtSQCE
      rUkAhK1JAIStSQCErUkAhK1JAIStSQCErT3Rp1ZKKdLzE5T97cRuf4VV10ZH0GR8sczzRw+i
      y6e/Yod6oi2AMqt8eeldpuN5mrsOcmfkBl98OUI1NcViprLZdRRi0zxRABxON/u69oDuJj07
      wZHjp9A0DQ0N0zRJp9Pk8/nNrqsQG+6JL9wJt+/HoVcYuxXHXXZz9Mg+xhfLtNb7cDr86Lq+
      mfUUYlNs2OXQuVwOr9crF8OJHUXOAglbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MA
      CFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhbkwAIW5MACFuTAAhb
      e8KhES0mvr4EHcdJj35ONbiLZneeiaUyL798Co8uQyOKnenJAmCaJOYnIdBJLB+gmhgk4/QT
      CjhYSBdpCehUq1W8Xu9m11eIDfWEQyO6aG5sAIcLq5pFc3hxaBaFsoHHqaOUQr5uWOxETzyM
      W9P+44RcUXa7ujC8jURcZe4mKjTVeXBoYBjGZtZTiE0hQyMKW5OzQMLWJADC1iQAwtYkAMLW
      JADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQA
      wtYkAMLWJADC1iQAwtYkAMLW1jmGSYX3/vFNSr5mOusMJuMVvvv97xFwSY7EzrS+AFgGhWKZ
      qqPIoqFoq9NYTBWIuk1KpZIMjSh2nPUFoFrC8oSwKiXcIZ2ZpMH+oJewz4mu65tURSE2zzpH
      hlMU83mU7sbtUBSrFkG/D02TkeHEzrTO1qrhCwRXntW5N7g2QmwxOXoVtiYBELYmARC2JgEQ
      tiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC29tiL4WbHrnNlPE5LqIVTL/VLSsQz
      67Ftu5BJMzc9SyKf3er6CLGlHhsATzCM32ng9Pq3uj5CbKnHBiAQaqD/2DEq+fRW10eILfVI
      AKqlPLFkBtNU9PQcQHsatRJiizwSALNaIh5bYmZmhumZOaynUSshtsgjAfDWNVDvcYFLI5NK
      PY06CbFlHjkNmk/OESvD0aMv0t7SIKdAxTPtkfbtr2/l+aMHmbxxiX945xLrGDJCiB3nkS1A
      LjHDpc8HaWjv4XjP/t85CFZMjw2S1sLsqrMYXyxzrO8AuiaHymJnWt+4QNUUv/6Hj2nbt5fc
      wixBv4Ou516hLeyRcYHEjrS+XXyzguUKMj95C0vT0DQNwzRJp9Pk8/lNqqIQm2d93bW3kaN7
      Q6S03XSGFOOLZVrrfbgcfhkaUexI6xwacXWyCyR2IjnLKWxNAiBsTQIgbE0CIGxNAiBsTQIg
      bE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxN
      AiBsTQIgbE0CIGxt3WOYVAsJrg3P0xY0mFgq89LpF3DrMjSi2JnWFwBlcfPGdaaXdLLOCiG/
      g4V0kZagE8MwNqmKQmye9e0CVXPMx3Mszc5R1SzKholL1zEMA9M0N6mKQmye9Y8MZ1VZWMoQ
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAXPklEQVR4nO3daXAc533n8W9fc2EGg/uiTFEkxfuwSNuSKUVSLMmKFCfedTZWtHF8JF4n
      LpfjpBKXk0oqkROnsru1m62tzW5trV8kLzaWI8vyemMr1hmLomRJlERKPMELAEGAIDDAAHNg
      ru5+8qIHAEECQ3A4AAj0/8Oamp6engcPZ55f99MPGs9oSimFED6lL3cFhFhOEgDhaxIA4WsS
      AOFrEgCxeIppnvzOd3jhJz/mxPkEqeQYqWyWl37yPJnJDGMTaRRQSg/zgx+9jO06TIyNkZ7M
      k02nSI6nOXzwAGMTGUaTKRZjtEaTUSCxaAoTPPPi23zqFz7IPz93goZgkhMJMNNjBK0MF0ZL
      PP4fvoqTyTDUe5SGtZ28+fxh6pstJrNp6q0QbmMdkwPnOT+S5lOf/wrrm4M1raJZ09KEuEIq
      McgbB2ziLS2cPHaGYKydSH0IIxDmQ+vXUB8yyI+dJV/Mc/bMaRy7BFoQ13VwlMIEQrEmPrRu
      C011Vs3rJ0cAsXiUSzabxUWnLhImn8uhmxaactF0KNkQiYRQTgldN8nnL3HgwHnuuW8nr+3/
      GXft20fA0gFFoehSFwmjabWtogRA+FrNukC5XI5CoYBW64gKsYhqFgDHcYhGo5imnFaIlUOG
      QYWvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCE
      r0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEry1oEh+lFK7jgK6jKQWahga4
      SqHrRs2nqxNiqSwoAKXJUZ75/y/wobv3cfLgWzh1rbRakwxOlHjo0U8QDxmLXU8hFsXCpnHT
      dNZ0tHHq+BHMhvU42T4mibGuNcBYOgcFh3w+TygUWuTqClFbC+sCOS5F28aMNKNN9GFFO2kK
      TtI3WmBLfYRoUMcw5CggVp6azQ6dyWQIhUIyN6hYUWQUSPiaBED4mgRA+JoEQPiaBED4mgRA
      +JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPia
      BED4mgRA+JoEQPiaBED42oIn8SmmhuhJ6uip8xQjnbQFcpwbybP3g9sxdZkcVKxMC5wZrsTh
      d14j4XSiOQrHfpdB3SIWMRhObaQzHqRG82sJsaQW1AXKJQcYHM0xPDyMiwI0NE1DoVBKkU6n
      yeVyi1xVIWpv4VMjllL0DpVw0zNdoLMjefbs2oKhaTI1oliRZG5Q4WsyCiR8TQIgfE0CIHxN
      AiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIg
      fE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfG3OSXwGTx/i4LlR2uvb+chHd2JnR9m/fz96/DaK
      l85QinbQHsjSnyzx8UceIRY0lrreQtTEnEeAydQEF/sHGcumAQjUNbN980by6UGovw03N0wq
      p3Nrc4hEKsfExATZbHZJKy5ELcwZgGA0TsS0MUMRAAqZBMfPDoBZhztxDoItxEIOPSOTNMfC
      xONx6urqlrTiQtTCnFMjjl08T9/QCAPDGR59+L4FnSjI1IhiJbqqbZfyWRLJFI6j2LTpdmTm
      f7GaXRUAp5RnNDHCwMAA/QMXcZejVkIskasCEIo10xC0wNJIjY8vR52EWDJXddizyYskCrBr
      1510tTfLLwrEqnZV+440dHDHrs30HXmdHz73OvLFR+KGFDJQunm/PeiqI0BmbIDX3zxGc9cm
      9mzaKCfBonrJPnj6C2CG4ON/CV13gHZz9SnkG2LE4hjrgScfhzV3QLQD3vl72PIo3PcNiH8A
      tJtj13pzxVGsDmNn4TufhvX3wif+OzzwZ/DFF8EpwbcfgAN/A7nkctcSkCOAqLXEafjuv4eN
      D8KDT4AZnHnOdaD/DXjxm5CfgJ/7A9j2ydnbLDEJgKidxCl4stz4H/4W6PO0BbsAR78PP/1r
      aFgLD/4FrNmzLN0iCYC4cUrB8An47uOw7d/Ag3++sJPdYgZe/1s4/A9w11dgz29AYGmvKZMA
      iBsz1fiffAx2fRru+yMwrOt7/dAR+KevgVOEj/2pdwS5njJugARAVG+q8T71G7DrMbj369U3
      3EIG3v8uvPo30LkLfv5PoH37og+bSgBE9QYPe41/9+Nw/x/Xpg+fGfFGid57Enb8O7j/G1DX
      euPlzkMCIK6fUjDwDjz1Wfjwb8E9v1/bPbVS3gn1y9+C/jfh7q/Bns9CMFa7n1EmARDXRykY
      eBue+hzc+dvw0a/MP9pzo1wbzv6LN1o0OQadu8u3XdCyCSLNYEWqP/Ik+yQA4jooBf1vwdOf
      h7u+7I3c6Evw9+DFSbjwFlx8z+t2Db0PmWGo74Sm9dCxayYc0TYvkJWOSErBmRfh2T+UAIjr
      0HsAvv9bcPfveQFYLkpBfhwuHYdLR+Di+95IVOK0N4zavm0mFK2boWkDWCHvtaUc7P8v8M7f
      wYPflACIBVBqpvHf+3Wv338zXdSmFLgl70gx1gND73lHi6Ej3pGilIOW26Ftm3f0cIrwyf8F
      bVslAOIalIKeV+CZL3kjPXs+uzTdnlpwHe+ao/RFGDrqBcOKwL7fhXADICfB4lrOvuw1/o/9
      Kez53E1zFWetSGsVc1MKTj8PP/wKPPQX3lj/Kmv8sMAAKNchMTJMJN6CKqRxzQgh3SaVc2hu
      jK/G98XflILTL3iN/+Pf8i5xWKUf8oICUMwmGRga5vw772IUXdxQmLhRJFNU3HX/wzTVyYFk
      1VDK6/b88MvwC/8RdvzKzXXCW2ML+p8Fo800hRS3b7gVI9aFKqUoOhat9UFSubxMjbia9OyH
      //dleOgvYeevrurGDwsMQDbRxxtHeikSIaYuUd+6gTVtdYzkDNrjdTI14mqgFPS+Vj7h/ROv
      z+8DMgokvMZ/4aB3bc+9fwh7v7ByhjpvkLRWv1MKBg/B9z4P+74KH/rNVd/tuZwEwO+G3vcu
      af7Il7wL23xGAuBXU3/J9Y+f8bo8+7663DVaFv451onZEqfgH3/dO9m9+/d80+e/khwB/Gj0
      LHz312HLJ+D+P/JVn/9K/v2f+9XYOXjy12DTw968PT5u/CAB8JeJC968PRt+3putzafdnstJ
      APwiNejN2Lb2Tu+3vMs4G9vNRM4B/CA95DX+tm3wi/918f6GdwWSI8Bqlxn2Gn/LZvjEf5PG
      fwUJwGo2Oepd3tC4ztvzW+HlrtFNR3YHq1VuHL73BQg1wC//jyWfc3OlkACsRrlx+N7nvG9m
      +dW/kz1/BdIFWm0Kafj+F705Oj/1f6TxX4McAVaTfMq7nt8penv+8swHYn4SgNUiNw5P/6Y3
      P85j/xdC8eWu0YogXaDVIJvwLmwzLHjsH6TxXwcJwEqXHfEubAs3eX3+UP1y12hFkS7QSpa+
      BE99BmJd8Mn/CcHoctdoxZEjwEo1ccH7KtKGtfAr35bGXyUJwEqU7IPvPObNk//LfwtGYLlr
      tGJJAFaasR7vC+k+cCc88p9lnP8GSQBWksQZr9tz6z3wyH+Sxl8DC5sbVLn0Hn0DOu9g4sxb
      lOrW0BbI0jNSYN9HP0zAWJ3zRt5ULh3zhjq3/BI89E3f/yVXrSwsAI5DYuAcWvgWEukQpcQx
      Jsww9RGdSxM52uoMbNte7Lr6k1Jw6ag31Lnr03DfN6Tx19CC3kndtGhvbQHdQpWyaHoAXXPJ
      2w6WYeC6Lq7rLnZd/UcpuHgYnnwc7vjM9X8JtbimBf8eoGXDHcQCzdxiZCiFW2myCvSPFmmr
      D6Jr4DjOYtbTny4c9GZs+/AXy19FKl3NWpO5QW9GSkHfa95Vnft+F+76Hen2LBJprTcbpaD3
      Va/x3/t1383VudQkADeTqS+n+MGX4IE/9/r90vgXlQTgZtL9LPzT1+DjfwW7f225a+MLEoCb
      ReIU/PgPZr6WSCwJOQm+WZRykOyF1i0y2rOEJADC1+QMS/iaBED4mgRA+JoEQPiaBED4mgRA
      +JoEQPiaBED4mgRA+JoEQPjakl63cHLsJP3pfuLBOPWBeuKBOPXBeiJmBE2ufxHLYEkDcHDo
      IM/1PkfOzpG38969k0cpRTwYpyHYMH2bfhyaeRwLxIiYESJmhKAZJKAHCBgBLN2SAC0CpRQF
      p0DeyVOwZ99nS1kypQyZYoZMKUO6mJ71eOp+MDNIyAzRGGwkbIUJm2EiZoSwWV62vM8zakWv
      ej5oBL3P17AI6Jfd6xaWYWHpFnqVfy+RKzr0jmaX/mI4V7kUnSJFt+jdO0Vydo6JwgTjhfHp
      2/Tj/MzjnJNDw2vo0/eahoZG0AzOemNnvdHW3OtCRghTNzE0A13T0TV9etnQjVmPdU1Hm/qn
      zf7ZAAqFUuUbCle52MrGcR1s15697No4ao718yxfue3048ufu2zZUQ6ucivfqPy8rWxKTglX
      udP/v+l7BUEjSDQQJWpFiQaixAIxb7n8OGp56yzdwtTN6R3epD1JpjhJtjRJtjhJpjRJupgl
      VchMP5563nZddAwMAhhaEEOzMDRz+t7ULAJGiLARIWRGCJXvw0b4suUIlh7A1APoyiJXCHBi
      MMeRgSSJXHLlXA2qlMJ2bbJ2lsnSJAWnMCtIeTvPpD1JruS9yTk7N/2G50q52Y/tmcdTDWrq
      g59adpSD6848hpkGr2s6mqaho0+HYarRT92UUhi6MR0wUzcxNXN63UKW53rd1Lrp5+ZYd3lo
      r7wZmuHVXdPRmQm6ztXbBowAYdPbUYTM8q28bJa/bVIphavAVYqi7TI0kWdgPMfAeI7B8i2d
      tynaLgXHpWS72K7CdhWO62I73nLJ8dY7jsJ2y9s4CkcpTF3DMnQMXUPXwNA0dF1D18qPp5bn
      eR5N4agSjipRF4SulgIN8STxaG7lBGA5Te3drwzJ5TdDN2YaqmZOh2Q1UEpRsF1G0gVGMgWG
      U+VGnswxOJ7n4kSeixM5kpNF4mGL1liItliQroYQnfEw8bBF0NQJTN2M2ctBUydoGVetn7rX
      9cV7H1dfa10EU92eavuby8k7cnp752J5D1x03OnH+aJLtmiTLdhkCt59tuCQypcYzRan9+Lj
      kyWClk7IMogFTboawnQ1hPnIbU10NYS5pTFMe32IsGVgmd4eW18BO4CqA2CXCuSLLnWR8IL/
      gGnmYKPJHz1VMNWtcFyF43pdgqnlyZJDOmeTypdI58v3uRKpvE06b5Mur59q1NmCQ8kpv14p
      3PK94ypc1+s+1AUN6oImdQGTaNCcftweC7FnbQNdDV7jrg9ZxEIm4YCxIhr3QlQZAJc3XnmJ
      0UmH+x56hIbwwor59qvneKV7BHOeQ92V66zy4dGaWldebxoaxhUfwFyfh4YGc66fY12Fz1O7
      8hXa7HLccoNyyv1W253px071aUuX92+ntnFm+sO241KwXTIFryFnC14jniw4TBYdskWbXNHB
      0DViIZNYuTFOLdeX7zviITa2mV6DDppEAwbhgEnI0glbBuGAQcjybmHLwDK0VdNVq0bVAcjb
      FmsaAyQzebSiQz6fx3Xd6ZGQUql01au2NWlot4ZQulk+8VHlw3CRkg25oiLlgu1SbhhgKyg5
      3rb2dANzmXXi4g1MzEtduaTmeu7aKp0tTZ+g6d4JmKFpGLqGUV5naJSXmd4uUD6xM3UNHbB0
      xZqIRrjeIBYKEguZ1Ics6sMWTbEIsZBJwNBxXQfXKU9FeUXGNU3DsmamT3QcpzxrnwvY3l0B
      igWwdX3WOZtt2/NOcakv4rYNDQ2MjY0BYJomuu51NedrR1Msa2b4u9ptqwyAQXtTgJ5Ega3x
      CHUBHcMwrnkS3Nrayj07qvuJXuObGXGYeWLW3fWXW/UrL/uh2tR5gte4p5b9vGe9Xq2trcvy
      c2UUSPjayhvWEKKGJADC1yQAwtckAMLXJADC12o6ZJNOp6fHcOfiOA6GYVQsYzVuM/W7kUrv
      Ta3KWUh9a1XOSnz/YPbwdE0DEIvFKg6DLuTNmJiYIB6PV9xmpZVTLBaxbZtIJHJD5RQKBVzX
      JRye/+tRHcdB1ytfiJfP5wEIhUJV1wWW7j2e+iXatQJQTTk1C8Dlv8GbS8/xt/nZuydoXLOZ
      h+7/COY8n8/lv8W8imszNjaOC2i6SVNTw5yXNVyrHLcwwY9+9Dzrdu+jTsuxYcPGebetWE4x
      zdvvnSQ5eJ41O+9mx/qOObfTdb1iIxi92EfvYIKRS8Ns3XsXt7Y3zrmdYRgVG3Z/fz9WYZTn
      D/byyX/7i8RDc9fdMAwq/fqn/+wJCqUibx+9wKO/9DD1wbmbScXPCjh44GXW7foorfWVv8+4
      UjnJi+d47/QAo0ND3PnAo9zSXFdVOelEP8+9uB8VauSBhx6kqS4A1PAcIBQKVQzAsROn2LZz
      NyROM5Sdv5yKe0m3wNN//7/58UsHOHTkFJW+lq9SOZnBburW7uLYT5/hR68erlBK5XLGzx+j
      71Ka2/fcRW/3sXm3M02TYDA47/NuMcvrB17jXP+likExTZNAIDDv88ff2c8PXnqHOzY00ncp
      Pe92lmVVLKf75AnefPcoHVGbwdHcvNtd64g2kUry2k+e4anvPc3AeLGqcs6dPsnZ7mNEm5s5
      depcxZ9XqZwTx47S2NRIYyzA4aOnp9cbTzzxxBMVS62RkFHihedfov62vezZ1EVVl3jrFi2N
      UfK2ydYdW2isq+6b0gOxJpKDPUSa2tl0+yY6Wufe415LMNpIIZ1kfCzJus1baaqff+9UsT6h
      CEG9RCLjsmfPToJmdfulxvoYqeQYpUg7OzevI2BUV059xOLIoXdxG27nrl0bMKu9Hl+5mIEw
      7besZ21XS1XlxGMRRpMphkdS3HPv3dTNczS6ZjnREG+9fYSGtjXs3rmdSLmcJRsFev/oSe75
      2EOYo91crHAEqKg0yhuH+ulsi3Pgp/uZ/9KnyjIDxzmXVMSiIc6d662yFEgNHKcv6RKtC3D0
      yPGqyzn51gHSVhO7NzTw5ntnqy7n0Lvv0rVhE9r4eXoupaov59Ah9v7cgzS7Q5wbqfbDgtMn
      j2OGY4ycOUzfWL66Mk4cJda2lu0b2zl6/EzVdek+fpQN2z9IVJvk2Kme6fVLFoCtm27j5eee
      JRNdR0d1O0qwmtjQrvHssy/SuXEL1X5ldHTNVsITp3j+X95k87btVZYC9Wu2Yo518/wrB9my
      bVvV5WzYuZPed/fzs+ND7Nj0garL2bl9C6+/9M+cn4xwW3us6nJ2bNvCay8+y0CxgXUtlbs5
      FcvZuolXX3iWS6qZtU3zn3BXsnHLDs4depU3jg2yfev6quuyadsOTr39Cge7h9m2ad30+iUL
      QPfps+y4Yy8qcZZEdTsDsFOcuZBl796d9J8+hV1lMZPDZ0lqzezevp5T3d1VlgKZ4bOkzFZ2
      b72N7u7T137BPM53nyS+dgsb20N091ysupyTJ7u5fcce6t0xLoxWv+c+2d3Npp17qSsOM5Cc
      /xzg2uWcYvOuvYRyF7k4UaiqjL6zJ2n8wGY2dkboPtNfdV16Tp+kZd1W1rUGOdUzOL1+yQLQ
      0dbC+d5etGgL0WrHnowILXGd3r4BGtvaqq58MN5BsDjGhYsJ2trbqiwFQvEOrPwoF4ZGaWuv
      /nLelq4uJob6SaRt2porDytW0tXZzoW+HvJahIa6+U+6r6WzwyunaEaJR6o9zkJnRxsX+noo
      WXHqF/hHU1dqbe9k/NIFRlIl2qs8VwNo6+hkbKifsYwz6z1esgCMJ8exSzZdjRqXMlUW4uRJ
      pgrYyiDs2sw/rlBZKZtk0gYt1IiTG6uyFChmk+QdhRFpws6OVl1OKpnEdW3irW2MJ6qvT3J8
      HKdUpKOtnsR49UeA8fEkdrFIZ2uUxES1h+upz7xEV0uYkYnqPq3URBLHcahvvYVUYqDquqTG
      k7iOTbyti4nRmaPsvwLIacXBMVw7oAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
      h8sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Adj Close Google' width='192'>
      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
      /j+TVH4yGjhTvgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Adj Close Apple' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Adj Close MSFT' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      y/cZHLt7z0oRkY3IDAOY9E3S1dGNUr0+x8dERJabGSW9srKG5kMFFKKvL7JJuKOkF/H7Akx4
      xD17RDYHMwwgGQ5QlBQIxTbPyKDI5maGCyQz2HCYI2xtrCYZ9nO1ZxiTWkBpdLKldnF7/ot8
      Rm9HG9FMnqnxAMdeeJbOi6dQac24Awmef/LhtRZvUzPDABKJBIViEblMBqjJJKOk5QaSgSkS
      pWZxIGyJVFRU0tbjxiKPMhHNUl1Tyc/ePokvluPRJx9ms+6W5B13c31gAoMsibVyF+VmOT1j
      PvyDfTQfewGjammx6M372jRQUtZAIeYhIzPg6b3G1kOfo6PtBHKFCX86f0cQXFuPyVqKXqdG
      yKep37Idg0qC0mBFp1Zsmolwy01XVyd6XQnjgp7qfBL38Dj7Du1nKpa9Z+FvOfMevogcv3+S
      1/7Ry/z+d/6AY88+zkCgwD/7xqurIv9KYXeVQ/cQldWVBNMp8hIdw31DbLXL6ZuIsr/WdF/3
      vdzbxQ65AQMZ3N5RRq63oaxppqGiklOnLjCVlc80gKC7m7c/ucCho19gR62F6grXsii6Xskk
      wvSO+tlR6yCSVaLMhwlm5KSDE9gr61iu6WH7Dx+lkIlRUbMNdSFKyrUFm0ZBo916z7T9nX00
      P/81hJZTRMMxjjY3cmM0ibVk4UcHrVdG+7qRaI10dvVS3bATucbEtq3VjA+52b1raacQFYsC
      ndevI9Ea2b97FwqVGqlESqmjCu1uqLRp6bx6hcZdu7HFMzPXA2TjQc5cbGPPgUewGu9efbXR
      5o2HwyHOnz+Hpegn6PocMk8nWWGKoeseHvnyP2Zffemy5dXy7t8SdH2O3NBZVBYHg6da+fJ3
      /w33NoGVZ63fq9/vx2ox0tE1hF5ZwFKxFaNmcWNRgUSGi4NBOjxR3P4E/+/X9uH3+7HZbPh9
      AaJBD2pLBSVaxdyzQbOZLJlsmlwuDxt0+eHtRCeHSKFHrsuRC09htehJFLTUVOYp5Bdxat4C
      kOtKSPunqK6uweMLYSq3kwgnsZruXdONdbUwnCmjTObj/ICPciFK4/OvUroBXlF/xxXO90yx
      2yalZSqLLuFFZR3mlZeemzddPJ3nojuANzrdY2nRKTlSb+O5Xa4Z9/3S43v5/t+/x9YKNfUP
      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
    </thumbnail>
    <thumbnail height='192' name='Volume vs. Close (Google)' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Volume vs. Close (Apple)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Volume vs. Close (MSFT)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
