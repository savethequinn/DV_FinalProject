<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8300.15.0219.2230                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='GOOGLE (C##CS329E_AC52722)' inline='true' name='oracle.42133.797239039355' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_AC52722' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_ac52722'>
        <relation name='GOOGLE' table='[C##CS329E_AC52722].[GOOGLE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>OPEN_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OPEN_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>OPEN_GOOGLE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGH_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HIGH_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>HIGH_GOOGLE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOW_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LOW_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>LOW_GOOGLE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLOSE_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CLOSE_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>CLOSE_GOOGLE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VOLUME_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VOLUME_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>VOLUME_GOOGLE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJ_CLOSE_GOOGLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ADJ_CLOSE_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>ADJ_CLOSE_GOOGLE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE_GOOGLE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE_GOOGLE]</local-name>
            <parent-name>[GOOGLE]</parent-name>
            <remote-alias>DATE_GOOGLE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='ordinal'>
      </column>
      <column caption='Close Google' datatype='real' name='[CLOSE_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Diff Price Percent Google' datatype='real' name='[Calculation_1480509192115533]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(Sum([ADJ_CLOSE_GOOGLE]) - Lookup(Sum([ADJ_CLOSE_GOOGLE]), -1)) / Lookup(Sum([ADJ_CLOSE_GOOGLE]), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Cor. Google vs Apple' datatype='real' name='[Calculation_5260509194222342]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(WINDOW_AVG(SUM([ADJ_CLOSE_GOOGLE]) * Sum([oracle.42133.798825937498].[ADJ_CLOSE_APPLE])) - (Window_Avg(Sum([ADJ_CLOSE_GOOGLE]))*Window_avg(Sum([oracle.42133.798825937498].[ADJ_CLOSE_APPLE])))) / (STDEV([ADJ_CLOSE_GOOGLE]) * STDEV([oracle.42133.798825937498].[ADJ_CLOSE_APPLE]))' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Avg Diff Adj Close Google' datatype='real' name='[Calculation_5870512161953733]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='avg([ADJ_CLOSE_GOOGLE]) - LOOKUP(zn(avg([ADJ_CLOSE_GOOGLE])), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Date Google' datatype='datetime' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
      </column>
      <column caption='High Google' datatype='real' name='[HIGH_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Low Google' datatype='real' name='[LOW_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Google' datatype='real' name='[OPEN_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Volume Google' datatype='real' name='[VOLUME_GOOGLE]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[VOLUME_GOOGLE]' derivation='Avg' name='[avg:VOLUME_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Sum' name='[sum:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1480509192115533]' derivation='User' name='[usr:Calculation_1480509192115533:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;[oracle.42133.797997569447].[sum:ADJ_CLOSE_MSFT:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42133.797239039355]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42133.797239039355].[avg:VOLUME_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42133.797239039355].[Multiple Values]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42133.797239039355].[sum:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;[oracle.42133.797997569447].[avg:ADJ_CLOSE_MSFT:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42133.798825937498].[avg:ADJ_CLOSE_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[oracle.42133.798825937498].[usr:Calculation_8540509191727915:qk]&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;[oracle.42133.798825937498].[sum:VOLUME_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;[oracle.42133.798825937498].[sum:HIGH_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[oracle.42133.798825937498].[usr:Calculation_9340509192541052:qk]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[oracle.42133.798825937498].[sum:ADJ_CLOSE_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[oracle.42133.797239039355].[usr:Calculation_1480509192115533:qk]&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;[oracle.42133.798825937498].[sum:LOW_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42133.797239039355].[avg:ADJ_CLOSE_GOOGLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42133.798825937498].[avg:VOLUME_APPLE:qk]&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;[oracle.42133.798825937498].[max:VOLUME_APPLE:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='oracle.42133.797997569447'>
        <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
        <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Sum' name='[sum:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <datasource-dependencies datasource='oracle.42133.798825937498'>
        <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
        </column>
        <column caption='Diff Price Percent Apple' datatype='real' name='[Calculation_8540509191727915]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='(SUM([ADJ_CLOSE_APPLE]) - Lookup(SUM([ADJ_CLOSE_APPLE]), -1)) / Lookup(SUM([ADJ_CLOSE_APPLE]), -1)' scope-isolation='false'>
            <table-calc ordering-type='Rows' />
          </calculation>
        </column>
        <column caption='Diff High-Low Apple' datatype='real' name='[Calculation_9340509192541052]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='Sum([HIGH_APPLE]) - Sum([LOW_APPLE])' scope-isolation='false' />
        </column>
        <column caption='High Apple' datatype='real' name='[HIGH_APPLE]' role='measure' type='quantitative'>
        </column>
        <column caption='Low Apple' datatype='real' name='[LOW_APPLE]' role='measure' type='quantitative'>
        </column>
        <column caption='Volume Apple' datatype='real' name='[VOLUME_APPLE]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[VOLUME_APPLE]' derivation='Max' name='[max:VOLUME_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Sum' name='[sum:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[HIGH_APPLE]' derivation='Sum' name='[sum:HIGH_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[LOW_APPLE]' derivation='Sum' name='[sum:LOW_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[VOLUME_APPLE]' derivation='Sum' name='[sum:VOLUME_APPLE:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_8540509191727915]' derivation='User' name='[usr:Calculation_8540509191727915:qk]' pivot='key' type='quantitative'>
          <table-calc ordering-type='Rows' />
        </column-instance>
        <column-instance column='[Calculation_9340509192541052]' derivation='User' name='[usr:Calculation_9340509192541052:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='APPLE (C##CS329E_JDO589)' inline='true' name='oracle.42133.798825937498' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JDO589' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jdo589'>
        <relation name='APPLE' table='[C##CS329E_JDO589].[APPLE]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>OPEN_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OPEN_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>OPEN_APPLE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGH_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HIGH_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>HIGH_APPLE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOW_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LOW_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>LOW_APPLE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLOSE_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CLOSE_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>CLOSE_APPLE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VOLUME_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VOLUME_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>VOLUME_APPLE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJ_CLOSE_APPLE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ADJ_CLOSE_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>ADJ_CLOSE_APPLE</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE_APPLE</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE_APPLE]</local-name>
            <parent-name>[APPLE]</parent-name>
            <remote-alias>DATE_APPLE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Close Apple' datatype='real' name='[CLOSE_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Diff Adj Close Apple' datatype='real' name='[Calculation_7870512173423015]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='avg([ADJ_CLOSE_APPLE]) - LOOKUP(zn(avg([ADJ_CLOSE_APPLE])), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Diff Price Percent Apple' datatype='real' name='[Calculation_8540509191727915]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([ADJ_CLOSE_APPLE]) - Lookup(SUM([ADJ_CLOSE_APPLE]), -1)) / Lookup(SUM([ADJ_CLOSE_APPLE]), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Diff Volume Percent Apple' datatype='real' name='[Calculation_9230509191628795]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([VOLUME_APPLE]) - Lookup(SUM([VOLUME_APPLE]), -1)) / Lookup(SUM([VOLUME_APPLE]), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Diff High-Low Apple' datatype='real' name='[Calculation_9340509192541052]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Sum([HIGH_APPLE]) - Sum([LOW_APPLE])' scope-isolation='false' />
      </column>
      <column caption='Date Apple' datatype='datetime' name='[DATE_APPLE]' role='dimension' type='ordinal'>
      </column>
      <column caption='High Apple' datatype='real' name='[HIGH_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Low Apple' datatype='real' name='[LOW_APPLE]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Apple' datatype='real' name='[OPEN_APPLE]' role='measure' type='quantitative'>
      </column>
      <column caption='Volume Apple' datatype='real' name='[VOLUME_APPLE]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='MSFT (C##CS329E_JC58247)' inline='true' name='oracle.42133.797997569447' version='8.3'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_JC58247' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_jc58247'>
        <relation name='MSFT' table='[C##CS329E_JC58247].[MSFT]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>OPEN_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[OPEN_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>OPEN_MSFT</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HIGH_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[HIGH_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>HIGH_MSFT</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LOW_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[LOW_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>LOW_MSFT</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CLOSE_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[CLOSE_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>CLOSE_MSFT</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VOLUME_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[VOLUME_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>VOLUME_MSFT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADJ_CLOSE_MSFT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[ADJ_CLOSE_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>ADJ_CLOSE_MSFT</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>38</precision>
            <scale>4</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATE_MSFT</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DATE_MSFT]</local-name>
            <parent-name>[MSFT]</parent-name>
            <remote-alias>DATE_MSFT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <scale>0</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_DAT&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Close Msft' datatype='real' name='[CLOSE_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Avg Diff Adj Close MSFT' datatype='real' name='[Calculation_7740512173833037]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='avg([ADJ_CLOSE_MSFT]) - LOOKUP(zn(avg([ADJ_CLOSE_MSFT])), -1)' scope-isolation='false'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Date Msft' datatype='datetime' name='[DATE_MSFT]' role='dimension' type='ordinal'>
      </column>
      <column caption='High Msft' datatype='real' name='[HIGH_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Low Msft' datatype='real' name='[LOW_MSFT]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Open Msft' datatype='real' name='[OPEN_MSFT]' role='measure' type='quantitative'>
      </column>
      <column caption='Volume Msft' datatype='real' name='[VOLUME_MSFT]' role='measure' type='quantitative'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='oracle.42133.797239039355'>
      <column caption='Date Google' datatype='datetime' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[DATE_GOOGLE]' derivation='None' name='[none:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.42133.797997569447'>
      <column caption='Date Msft' datatype='datetime' name='[DATE_MSFT]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[DATE_MSFT]' derivation='None' name='[none:DATE_MSFT:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.42133.798825937498'>
      <column caption='Date Apple' datatype='datetime' name='[DATE_APPLE]' role='dimension' type='ordinal'>
      </column>
      <column-instance column='[DATE_APPLE]' derivation='None' name='[none:DATE_APPLE:ok]' pivot='key' type='ordinal' />
    </datasource-dependencies>
    <datasource-relationship source='oracle.42133.797239039355' target='oracle.42133.797997569447'>
      <column-mapping>
        <map key='[oracle.42133.797239039355].[none:DATE_GOOGLE:ok]' value='[oracle.42133.797997569447].[none:DATE_MSFT:ok]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='oracle.42133.797239039355' target='oracle.42133.798825937498'>
      <column-mapping>
        <map key='[oracle.42133.797239039355].[none:DATE_GOOGLE:ok]' value='[oracle.42133.798825937498].[none:DATE_APPLE:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Apple (&apos;07-&apos;10)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42133.797239039355' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42133.798825937498' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42133.797997569447' />
          </datasources>
          <datasource-dependencies datasource='oracle.42133.797239039355'>
            <column caption='Date Google' datatype='datetime' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42133.797997569447'>
            <column caption='Date Msft' datatype='datetime' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42133.798825937498'>
            <column caption='Adj Close Apple' datatype='real' name='[ADJ_CLOSE_APPLE]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close Apple' datatype='real' name='[Calculation_7870512173423015]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_APPLE]) - LOOKUP(zn(avg([ADJ_CLOSE_APPLE])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Apple' datatype='datetime' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_APPLE]' derivation='Avg' name='[avg:ADJ_CLOSE_APPLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7870512173423015]' derivation='User' name='[usr:Calculation_7870512173423015:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42133.797239039355].[yr:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2010' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42133.797239039355].[yr:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[oracle.42133.798825937498].[avg:ADJ_CLOSE_APPLE:qk]' />
              <text column='[oracle.42133.798825937498].[usr:Calculation_7870512173423015:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42133.798825937498].[avg:ADJ_CLOSE_APPLE:qk]</rows>
        <cols>([oracle.42133.797239039355].[yr:DATE_GOOGLE:ok] / [oracle.42133.797239039355].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42133.797997569447].[DATE_MSFT]</column>
          <column>[oracle.42133.798825937498].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Google (&apos;07-&apos;10)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42133.797239039355' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42133.798825937498' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42133.797997569447' />
          </datasources>
          <datasource-dependencies datasource='oracle.42133.797239039355'>
            <column caption='Adj Close Google' datatype='real' name='[ADJ_CLOSE_GOOGLE]' role='measure' type='ordinal'>
            </column>
            <column caption='Avg Diff Adj Close Google' datatype='real' name='[Calculation_5870512161953733]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_GOOGLE]) - LOOKUP(zn(avg([ADJ_CLOSE_GOOGLE])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Google' datatype='datetime' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ADJ_CLOSE_GOOGLE]' derivation='Avg' name='[avg:ADJ_CLOSE_GOOGLE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_5870512161953733]' derivation='User' name='[usr:Calculation_5870512161953733:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42133.797997569447'>
            <column caption='Date Msft' datatype='datetime' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42133.798825937498'>
            <column caption='Date Apple' datatype='datetime' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42133.797239039355].[yr:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2010' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42133.797239039355].[yr:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[oracle.42133.797239039355].[avg:ADJ_CLOSE_GOOGLE:ok]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[oracle.42133.797239039355].[avg:ADJ_CLOSE_GOOGLE:ok]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[oracle.42133.797239039355].[avg:ADJ_CLOSE_GOOGLE:ok]' />
              <text column='[oracle.42133.797239039355].[usr:Calculation_5870512161953733:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42133.797239039355].[avg:ADJ_CLOSE_GOOGLE:qk]</rows>
        <cols>([oracle.42133.797239039355].[yr:DATE_GOOGLE:ok] / [oracle.42133.797239039355].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42133.797997569447].[DATE_MSFT]</column>
          <column>[oracle.42133.798825937498].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='MSFT (&apos;07-&apos;10)'>
      <table>
        <view>
          <datasources>
            <datasource caption='GOOGLE (C##CS329E_AC52722)' name='oracle.42133.797239039355' />
            <datasource caption='APPLE (C##CS329E_JDO589)' name='oracle.42133.798825937498' />
            <datasource caption='MSFT (C##CS329E_JC58247)' name='oracle.42133.797997569447' />
          </datasources>
          <datasource-dependencies datasource='oracle.42133.797239039355'>
            <column caption='Date Google' datatype='datetime' name='[DATE_GOOGLE]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[DATE_GOOGLE]' derivation='Quarter' name='[qr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[DATE_GOOGLE]' derivation='Year' name='[yr:DATE_GOOGLE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42133.797997569447'>
            <column caption='Adj Close Msft' datatype='real' name='[ADJ_CLOSE_MSFT]' role='measure' type='quantitative'>
            </column>
            <column caption='Avg Diff Adj Close MSFT' datatype='real' name='[Calculation_7740512173833037]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='avg([ADJ_CLOSE_MSFT]) - LOOKUP(zn(avg([ADJ_CLOSE_MSFT])), -1)' scope-isolation='false'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Date Msft' datatype='datetime' name='[DATE_MSFT]' role='dimension' type='ordinal'>
            </column>
            <column-instance column='[ADJ_CLOSE_MSFT]' derivation='Avg' name='[avg:ADJ_CLOSE_MSFT:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_7740512173833037]' derivation='User' name='[usr:Calculation_7740512173833037:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42133.798825937498'>
            <column caption='Date Apple' datatype='datetime' name='[DATE_APPLE]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42133.797239039355].[yr:DATE_GOOGLE:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2007' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2008' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2009' />
              <groupfilter function='member' level='[yr:DATE_GOOGLE:ok]' member='2010' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42133.797239039355].[yr:DATE_GOOGLE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[oracle.42133.797997569447].[avg:ADJ_CLOSE_MSFT:qk]' />
              <text column='[oracle.42133.797997569447].[usr:Calculation_7740512173833037:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42133.797997569447].[avg:ADJ_CLOSE_MSFT:qk]</rows>
        <cols>([oracle.42133.797239039355].[yr:DATE_GOOGLE:ok] / [oracle.42133.797239039355].[qr:DATE_GOOGLE:ok])</cols>
        <join-lod-include-overrides>
          <column>[oracle.42133.797997569447].[DATE_MSFT]</column>
          <column>[oracle.42133.798825937498].[DATE_APPLE]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Adj Close (&apos;07-&apos;10)'>
      <style>
      </style>
      <size maxheight='600' maxwidth='1150' minheight='600' minwidth='1150' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='33333' id='1' name='Google (&apos;07-&apos;10)' show-title='true' w='100000' x='0' y='0'>
          </zone>
          <zone h='33334' id='3' name='Apple (&apos;07-&apos;10)' show-title='true' w='100000' x='0' y='33333'>
          </zone>
          <zone h='33333' id='4' name='MSFT (&apos;07-&apos;10)' show-title='true' w='100000' x='0' y='66667'>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Google (&apos;07-&apos;10)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42133.797239039355].[:Measure Names]</field>
          <field>[oracle.42133.797239039355].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Apple (&apos;07-&apos;10)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42133.797239039355].[:Measure Names]</field>
          <field>[oracle.42133.797239039355].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='MSFT (&apos;07-&apos;10)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42133.797239039355].[:Measure Names]</field>
          <field>[oracle.42133.797239039355].[yr:DATE_GOOGLE:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Adj Close (&apos;07-&apos;10)'>
      <zones>
        <zone name='Google (&apos;07-&apos;10)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Apple (&apos;07-&apos;10)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='MSFT (&apos;07-&apos;10)'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Google (&apos;07-&apos;10)' width='192'>
      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
      ODGf/w8Lcfcdj/n4uwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Apple (&apos;07-&apos;10)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MSFT (&apos;07-&apos;10)' width='192'>
      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
      xmy28v8BXQV7aNeZL+4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Adj Close (&apos;07-&apos;10)' width='192'>
      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
      o/CF5n9DEqXRzeRhQQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
